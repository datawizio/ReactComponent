// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Transfer component Transfer rendered correctly 1`] = `
<Transfer
  onMoveAllToLeft={[MockFunction]}
  onMoveAllToRight={[MockFunction]}
  onMoveToLeft={[MockFunction]}
  onMoveToRight={[MockFunction]}
  operationDisabled={false}
  sourceLoadData={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "page": 1,
            "search": "",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": Object {
            "data": Array [
              Object {
                "count": 7,
                "key": "a",
                "title": "a",
                "totalPages": 5,
              },
              Object {
                "key": "b",
                "title": "b",
              },
              Object {
                "key": "c",
                "title": "c",
              },
            ],
          },
        },
      ],
    }
  }
  sourceTitle="string"
  targetLoadData={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "page": 1,
            "search": "",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": Object {
            "count": 7,
            "data": Array [
              Object {
                "key": "a",
                "title": "a",
              },
              Object {
                "key": "b",
                "title": "b",
              },
              Object {
                "key": "c",
                "title": "c",
              },
            ],
            "totalPages": 5,
          },
        },
      ],
    }
  }
  targetTitle="string"
>
  <div
    className="dw-transfer"
  >
    <TransferList
      checkedKeys={Array []}
      dataSource={Array []}
      direction="left"
      loadData={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "page": 1,
                "search": "",
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Object {
                "data": Array [
                  Object {
                    "count": 7,
                    "key": "a",
                    "title": "a",
                    "totalPages": 5,
                  },
                  Object {
                    "key": "b",
                    "title": "b",
                  },
                  Object {
                    "key": "c",
                    "title": "c",
                  },
                ],
              },
            },
          ],
        }
      }
      noDataText="NO_DATA"
      onItemSelect={[Function]}
      onItemSelectAll={[Function]}
      onScroll={[Function]}
      prefixCls="ant-transfer-list"
      searchText="SEARCH"
      selectedText="SELECTED"
      showSearch={true}
      titleText="string"
    >
      <div
        className="ant-transfer-list-container"
      >
        <div
          className="ant-transfer-list-title"
        >
          <span
            className="ant-transfer-list-title-text"
          >
            string
          </span>
          <div />
        </div>
        <div
          className="ant-transfer-list"
        >
          <div
            className="ant-transfer-list-header"
          >
            <Checkbox
              checked={false}
              indeterminate={false}
              onChange={[Function]}
            >
              <Checkbox
                checked={false}
                indeterminate={false}
                onChange={[Function]}
              >
                <label
                  className="ant-checkbox-wrapper"
                >
                  <Checkbox
                    checked={false}
                    className=""
                    defaultChecked={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onKeyUp={[Function]}
                    prefixCls="ant-checkbox"
                    style={Object {}}
                    type="checkbox"
                  >
                    <span
                      className="ant-checkbox"
                      style={Object {}}
                    >
                      <input
                        checked={false}
                        className="ant-checkbox-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        onKeyUp={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="ant-checkbox-inner"
                      />
                    </span>
                  </Checkbox>
                </label>
              </Checkbox>
            </Checkbox>
            <span
              className="ant-transfer-list-header-selected"
            >
              SELECTED
              : 
              0
               / 
              NaN
            </span>
          </div>
          <div
            className="ant-transfer-list-body ant-transfer-list-body-with-search"
          >
            <div
              className="ant-transfer-list-body-search-wrapper"
            >
              <LiteSearchInput
                debounceDelay={0}
                onChange={[Function]}
                onClear={[Function]}
                placeholder="SEARCH"
                value=""
              >
                <span
                  className="lite-search"
                >
                  <ForwardRef(SearchOutlined)
                    className="lite-search__search-icon"
                  >
                    <AntdIcon
                      className="lite-search__search-icon"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "search",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="search"
                        className="anticon anticon-search lite-search__search-icon"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "search",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="search"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-search"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"
                              key="svg-search-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(SearchOutlined)>
                  <input
                    className="lite-search__input"
                    onChange={[Function]}
                    placeholder="SEARCH"
                    value=""
                  />
                </span>
              </LiteSearchInput>
            </div>
            <ListBody
              dataSource={Array []}
              direction="left"
              filteredItems={
                Array [
                  Object {
                    "count": 7,
                    "key": "a",
                    "title": "a",
                    "totalPages": 5,
                  },
                  Object {
                    "key": "b",
                    "title": "b",
                  },
                  Object {
                    "key": "c",
                    "title": "c",
                  },
                ]
              }
              loadData={
                [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "page": 1,
                        "search": "",
                      },
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Object {
                        "data": Array [
                          Object {
                            "count": 7,
                            "key": "a",
                            "title": "a",
                            "totalPages": 5,
                          },
                          Object {
                            "key": "b",
                            "title": "b",
                          },
                          Object {
                            "key": "c",
                            "title": "c",
                          },
                        ],
                      },
                    },
                  ],
                }
              }
              loading={false}
              noDataText="NO_DATA"
              onItemSelect={[Function]}
              onItemSelectAll={[Function]}
              onScroll={[Function]}
              prefixCls="ant-transfer-list"
              searchText="SEARCH"
              selectedKeys={Array []}
              selectedText="SELECTED"
              showSearch={true}
              titleText="string"
            >
              <ul
                className="ant-transfer-list-content"
                onScroll={[Function]}
              >
                <Memo(ListItem)
                  checked={false}
                  item={
                    Object {
                      "count": 7,
                      "key": "a",
                      "title": "a",
                      "totalPages": 5,
                    }
                  }
                  key="a"
                  onClick={[Function]}
                  prefixCls="ant-transfer-list"
                >
                  <li
                    className="ant-transfer-list-content-item"
                    onClick={[Function]}
                    title="a"
                  >
                    <Checkbox
                      checked={false}
                    >
                      <Checkbox
                        checked={false}
                      >
                        <label
                          className="ant-checkbox-wrapper"
                        >
                          <Checkbox
                            checked={false}
                            className=""
                            defaultChecked={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onKeyUp={[Function]}
                            prefixCls="ant-checkbox"
                            style={Object {}}
                            type="checkbox"
                          >
                            <span
                              className="ant-checkbox"
                              style={Object {}}
                            >
                              <input
                                checked={false}
                                className="ant-checkbox-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onKeyUp={[Function]}
                                type="checkbox"
                              />
                              <span
                                className="ant-checkbox-inner"
                              />
                            </span>
                          </Checkbox>
                        </label>
                      </Checkbox>
                    </Checkbox>
                    <span
                      className="ant-transfer-list-content-item-text"
                    >
                      a
                    </span>
                  </li>
                </Memo(ListItem)>
                <Memo(ListItem)
                  checked={false}
                  item={
                    Object {
                      "key": "b",
                      "title": "b",
                    }
                  }
                  key="b"
                  onClick={[Function]}
                  prefixCls="ant-transfer-list"
                >
                  <li
                    className="ant-transfer-list-content-item"
                    onClick={[Function]}
                    title="b"
                  >
                    <Checkbox
                      checked={false}
                    >
                      <Checkbox
                        checked={false}
                      >
                        <label
                          className="ant-checkbox-wrapper"
                        >
                          <Checkbox
                            checked={false}
                            className=""
                            defaultChecked={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onKeyUp={[Function]}
                            prefixCls="ant-checkbox"
                            style={Object {}}
                            type="checkbox"
                          >
                            <span
                              className="ant-checkbox"
                              style={Object {}}
                            >
                              <input
                                checked={false}
                                className="ant-checkbox-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onKeyUp={[Function]}
                                type="checkbox"
                              />
                              <span
                                className="ant-checkbox-inner"
                              />
                            </span>
                          </Checkbox>
                        </label>
                      </Checkbox>
                    </Checkbox>
                    <span
                      className="ant-transfer-list-content-item-text"
                    >
                      b
                    </span>
                  </li>
                </Memo(ListItem)>
                <Memo(ListItem)
                  checked={false}
                  item={
                    Object {
                      "key": "c",
                      "title": "c",
                    }
                  }
                  key="c"
                  onClick={[Function]}
                  prefixCls="ant-transfer-list"
                >
                  <li
                    className="ant-transfer-list-content-item"
                    onClick={[Function]}
                    title="c"
                  >
                    <Checkbox
                      checked={false}
                    >
                      <Checkbox
                        checked={false}
                      >
                        <label
                          className="ant-checkbox-wrapper"
                        >
                          <Checkbox
                            checked={false}
                            className=""
                            defaultChecked={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onKeyUp={[Function]}
                            prefixCls="ant-checkbox"
                            style={Object {}}
                            type="checkbox"
                          >
                            <span
                              className="ant-checkbox"
                              style={Object {}}
                            >
                              <input
                                checked={false}
                                className="ant-checkbox-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onKeyUp={[Function]}
                                type="checkbox"
                              />
                              <span
                                className="ant-checkbox-inner"
                              />
                            </span>
                          </Checkbox>
                        </label>
                      </Checkbox>
                    </Checkbox>
                    <span
                      className="ant-transfer-list-content-item-text"
                    >
                      c
                    </span>
                  </li>
                </Memo(ListItem)>
              </ul>
            </ListBody>
          </div>
        </div>
      </div>
    </TransferList>
    <Operation
      className="ant-transfer-operation"
      disabled={false}
      leftActive={true}
      moveAllToLeft={[Function]}
      moveAllToRight={[Function]}
      moveToLeft={[Function]}
      moveToRight={[Function]}
      rightActive={true}
    >
      <div
        className="ant-transfer-operation"
      >
        <Button
          border={true}
          disabled={false}
          icon={<ForwardRef(DoubleRightOutlined) />}
          onClick={[Function]}
          size="small"
          title=""
          type="primary"
        >
          <Button
            className="dw-btn"
            disabled={false}
            icon={<ForwardRef(DoubleRightOutlined) />}
            onClick={[Function]}
            size="small"
            title=""
            type="primary"
          >
            <Wave>
              <button
                className="ant-btn ant-btn-primary ant-btn-sm ant-btn-icon-only dw-btn"
                disabled={false}
                onClick={[Function]}
                title=""
                type="button"
              >
                <ForwardRef(DoubleRightOutlined)>
                  <AntdIcon
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "double-right",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="double-right"
                      className="anticon anticon-double-right"
                      role="img"
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "double-right",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="double-right"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-double-right"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z"
                            key="svg-double-right-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(DoubleRightOutlined)>
              </button>
            </Wave>
          </Button>
        </Button>
        <Button
          border={true}
          disabled={false}
          icon={<ForwardRef(RightOutlined) />}
          onClick={[Function]}
          size="small"
          title=""
          type="primary"
        >
          <Button
            className="dw-btn"
            disabled={false}
            icon={<ForwardRef(RightOutlined) />}
            onClick={[Function]}
            size="small"
            title=""
            type="primary"
          >
            <Wave>
              <button
                className="ant-btn ant-btn-primary ant-btn-sm ant-btn-icon-only dw-btn"
                disabled={false}
                onClick={[Function]}
                title=""
                type="button"
              >
                <ForwardRef(RightOutlined)>
                  <AntdIcon
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "right",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="right"
                      className="anticon anticon-right"
                      role="img"
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "right",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="right"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-right"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                            key="svg-right-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(RightOutlined)>
              </button>
            </Wave>
          </Button>
        </Button>
        <Button
          border={true}
          disabled={false}
          icon={<ForwardRef(LeftOutlined) />}
          onClick={[Function]}
          size="small"
          title=""
          type="primary"
        >
          <Button
            className="dw-btn"
            disabled={false}
            icon={<ForwardRef(LeftOutlined) />}
            onClick={[Function]}
            size="small"
            title=""
            type="primary"
          >
            <Wave>
              <button
                className="ant-btn ant-btn-primary ant-btn-sm ant-btn-icon-only dw-btn"
                disabled={false}
                onClick={[Function]}
                title=""
                type="button"
              >
                <ForwardRef(LeftOutlined)>
                  <AntdIcon
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "left",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="left"
                      className="anticon anticon-left"
                      role="img"
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "left",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="left"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-left"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                            key="svg-left-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(LeftOutlined)>
              </button>
            </Wave>
          </Button>
        </Button>
        <Button
          border={true}
          disabled={false}
          icon={<ForwardRef(DoubleLeftOutlined) />}
          onClick={[Function]}
          size="small"
          title=""
          type="primary"
        >
          <Button
            className="dw-btn"
            disabled={false}
            icon={<ForwardRef(DoubleLeftOutlined) />}
            onClick={[Function]}
            size="small"
            title=""
            type="primary"
          >
            <Wave>
              <button
                className="ant-btn ant-btn-primary ant-btn-sm ant-btn-icon-only dw-btn"
                disabled={false}
                onClick={[Function]}
                title=""
                type="button"
              >
                <ForwardRef(DoubleLeftOutlined)>
                  <AntdIcon
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M272.9 512l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L186.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H532c6.7 0 10.4-7.7 6.3-12.9L272.9 512zm304 0l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L490.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H836c6.7 0 10.4-7.7 6.3-12.9L576.9 512z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "double-left",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="double-left"
                      className="anticon anticon-double-left"
                      role="img"
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M272.9 512l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L186.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H532c6.7 0 10.4-7.7 6.3-12.9L272.9 512zm304 0l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L490.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H836c6.7 0 10.4-7.7 6.3-12.9L576.9 512z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "double-left",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="double-left"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-double-left"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M272.9 512l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L186.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H532c6.7 0 10.4-7.7 6.3-12.9L272.9 512zm304 0l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L490.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H836c6.7 0 10.4-7.7 6.3-12.9L576.9 512z"
                            key="svg-double-left-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(DoubleLeftOutlined)>
              </button>
            </Wave>
          </Button>
        </Button>
      </div>
    </Operation>
    <TransferList
      checkedKeys={Array []}
      dataSource={Array []}
      direction="right"
      disabled={false}
      loadData={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "page": 1,
                "search": "",
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Object {
                "count": 7,
                "data": Array [
                  Object {
                    "key": "a",
                    "title": "a",
                  },
                  Object {
                    "key": "b",
                    "title": "b",
                  },
                  Object {
                    "key": "c",
                    "title": "c",
                  },
                ],
                "totalPages": 5,
              },
            },
          ],
        }
      }
      noDataText="NO_DATA"
      onItemSelect={[Function]}
      onItemSelectAll={[Function]}
      onScroll={[Function]}
      prefixCls="ant-transfer-list"
      searchText="SEARCH"
      selectedText="SELECTED"
      showSearch={true}
      showSelectAll={true}
      titleText="string"
    >
      <div
        className="ant-transfer-list-container"
      >
        <div
          className="ant-transfer-list-title"
        >
          <span
            className="ant-transfer-list-title-text"
          >
            string
          </span>
          <div />
        </div>
        <div
          className="ant-transfer-list"
        >
          <div
            className="ant-transfer-list-header"
          >
            <Checkbox
              checked={false}
              disabled={false}
              indeterminate={false}
              onChange={[Function]}
            >
              <Checkbox
                checked={false}
                disabled={false}
                indeterminate={false}
                onChange={[Function]}
              >
                <label
                  className="ant-checkbox-wrapper"
                >
                  <Checkbox
                    checked={false}
                    className=""
                    defaultChecked={false}
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onKeyUp={[Function]}
                    prefixCls="ant-checkbox"
                    style={Object {}}
                    type="checkbox"
                  >
                    <span
                      className="ant-checkbox"
                      style={Object {}}
                    >
                      <input
                        checked={false}
                        className="ant-checkbox-input"
                        disabled={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        onKeyUp={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="ant-checkbox-inner"
                      />
                    </span>
                  </Checkbox>
                </label>
              </Checkbox>
            </Checkbox>
            <span
              className="ant-transfer-list-header-selected"
            >
              SELECTED
              : 
              0
               / 
              7
            </span>
          </div>
          <div
            className="ant-transfer-list-body ant-transfer-list-body-with-search"
          >
            <div
              className="ant-transfer-list-body-search-wrapper"
            >
              <LiteSearchInput
                debounceDelay={0}
                disabled={false}
                onChange={[Function]}
                onClear={[Function]}
                placeholder="SEARCH"
                value=""
              >
                <span
                  className="lite-search"
                >
                  <ForwardRef(SearchOutlined)
                    className="lite-search__search-icon"
                  >
                    <AntdIcon
                      className="lite-search__search-icon"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "search",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="search"
                        className="anticon anticon-search lite-search__search-icon"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "search",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="search"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-search"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"
                              key="svg-search-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(SearchOutlined)>
                  <input
                    className="lite-search__input"
                    disabled={false}
                    onChange={[Function]}
                    placeholder="SEARCH"
                    value=""
                  />
                </span>
              </LiteSearchInput>
            </div>
            <ListBody
              dataSource={Array []}
              direction="right"
              disabled={false}
              filteredItems={
                Array [
                  Object {
                    "key": "a",
                    "title": "a",
                  },
                  Object {
                    "key": "b",
                    "title": "b",
                  },
                  Object {
                    "key": "c",
                    "title": "c",
                  },
                ]
              }
              loadData={
                [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "page": 1,
                        "search": "",
                      },
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Object {
                        "count": 7,
                        "data": Array [
                          Object {
                            "key": "a",
                            "title": "a",
                          },
                          Object {
                            "key": "b",
                            "title": "b",
                          },
                          Object {
                            "key": "c",
                            "title": "c",
                          },
                        ],
                        "totalPages": 5,
                      },
                    },
                  ],
                }
              }
              loading={false}
              noDataText="NO_DATA"
              onItemSelect={[Function]}
              onItemSelectAll={[Function]}
              onScroll={[Function]}
              prefixCls="ant-transfer-list"
              searchText="SEARCH"
              selectedKeys={Array []}
              selectedText="SELECTED"
              showSearch={true}
              showSelectAll={true}
              titleText="string"
            >
              <ul
                className="ant-transfer-list-content"
                onScroll={[Function]}
              >
                <Memo(ListItem)
                  checked={false}
                  item={
                    Object {
                      "key": "a",
                      "title": "a",
                    }
                  }
                  key="a"
                  onClick={[Function]}
                  prefixCls="ant-transfer-list"
                >
                  <li
                    className="ant-transfer-list-content-item"
                    onClick={[Function]}
                    title="a"
                  >
                    <Checkbox
                      checked={false}
                    >
                      <Checkbox
                        checked={false}
                      >
                        <label
                          className="ant-checkbox-wrapper"
                        >
                          <Checkbox
                            checked={false}
                            className=""
                            defaultChecked={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onKeyUp={[Function]}
                            prefixCls="ant-checkbox"
                            style={Object {}}
                            type="checkbox"
                          >
                            <span
                              className="ant-checkbox"
                              style={Object {}}
                            >
                              <input
                                checked={false}
                                className="ant-checkbox-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onKeyUp={[Function]}
                                type="checkbox"
                              />
                              <span
                                className="ant-checkbox-inner"
                              />
                            </span>
                          </Checkbox>
                        </label>
                      </Checkbox>
                    </Checkbox>
                    <span
                      className="ant-transfer-list-content-item-text"
                    >
                      a
                    </span>
                  </li>
                </Memo(ListItem)>
                <Memo(ListItem)
                  checked={false}
                  item={
                    Object {
                      "key": "b",
                      "title": "b",
                    }
                  }
                  key="b"
                  onClick={[Function]}
                  prefixCls="ant-transfer-list"
                >
                  <li
                    className="ant-transfer-list-content-item"
                    onClick={[Function]}
                    title="b"
                  >
                    <Checkbox
                      checked={false}
                    >
                      <Checkbox
                        checked={false}
                      >
                        <label
                          className="ant-checkbox-wrapper"
                        >
                          <Checkbox
                            checked={false}
                            className=""
                            defaultChecked={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onKeyUp={[Function]}
                            prefixCls="ant-checkbox"
                            style={Object {}}
                            type="checkbox"
                          >
                            <span
                              className="ant-checkbox"
                              style={Object {}}
                            >
                              <input
                                checked={false}
                                className="ant-checkbox-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onKeyUp={[Function]}
                                type="checkbox"
                              />
                              <span
                                className="ant-checkbox-inner"
                              />
                            </span>
                          </Checkbox>
                        </label>
                      </Checkbox>
                    </Checkbox>
                    <span
                      className="ant-transfer-list-content-item-text"
                    >
                      b
                    </span>
                  </li>
                </Memo(ListItem)>
                <Memo(ListItem)
                  checked={false}
                  item={
                    Object {
                      "key": "c",
                      "title": "c",
                    }
                  }
                  key="c"
                  onClick={[Function]}
                  prefixCls="ant-transfer-list"
                >
                  <li
                    className="ant-transfer-list-content-item"
                    onClick={[Function]}
                    title="c"
                  >
                    <Checkbox
                      checked={false}
                    >
                      <Checkbox
                        checked={false}
                      >
                        <label
                          className="ant-checkbox-wrapper"
                        >
                          <Checkbox
                            checked={false}
                            className=""
                            defaultChecked={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onKeyUp={[Function]}
                            prefixCls="ant-checkbox"
                            style={Object {}}
                            type="checkbox"
                          >
                            <span
                              className="ant-checkbox"
                              style={Object {}}
                            >
                              <input
                                checked={false}
                                className="ant-checkbox-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onKeyUp={[Function]}
                                type="checkbox"
                              />
                              <span
                                className="ant-checkbox-inner"
                              />
                            </span>
                          </Checkbox>
                        </label>
                      </Checkbox>
                    </Checkbox>
                    <span
                      className="ant-transfer-list-content-item-text"
                    >
                      c
                    </span>
                  </li>
                </Memo(ListItem)>
              </ul>
            </ListBody>
          </div>
        </div>
      </div>
    </TransferList>
  </div>
</Transfer>
`;
