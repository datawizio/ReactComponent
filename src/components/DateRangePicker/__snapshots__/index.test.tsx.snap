// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` DateRangePicker component DateRangePicker rendered correctly 1`] = `
<DateRangePicker
  dateFrom="02-12-2001"
  dateTo="02-12-2001"
  format="DD-MM-YYYY"
  fullWidth={true}
  inputReadOnly={true}
  maxDate="2020-10-22T13:06:36.873Z"
  onChange={[MockFunction]}
  useDefaultPreset={false}
>
  <RangePicker
    className="ant-picker-full-width"
    dateFrom="02-12-2001"
    dateTo="02-12-2001"
    disabledDate={[Function]}
    format="DD-MM-YYYY"
    inputReadOnly={true}
    maxDate="2020-10-22T13:06:36.873Z"
    onChange={[Function]}
    value={
      Array [
        "2001-12-01T22:00:00.000Z",
        "2001-12-01T22:00:00.000Z",
      ]
    }
  >
    <LocaleReceiver
      componentName="DatePicker"
      defaultLocale={[Function]}
    >
      <RangePicker
        allowClear={true}
        className="ant-picker-full-width"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        components={
          Object {
            "button": [Function],
            "rangeItem": [Function],
          }
        }
        dateFrom="02-12-2001"
        dateTo="02-12-2001"
        disabledDate={[Function]}
        format="DD-MM-YYYY"
        generateConfig={
          Object {
            "addDate": [Function],
            "addMonth": [Function],
            "addYear": [Function],
            "getDate": [Function],
            "getEndDate": [Function],
            "getFixedDate": [Function],
            "getHour": [Function],
            "getMinute": [Function],
            "getMonth": [Function],
            "getNow": [Function],
            "getSecond": [Function],
            "getWeekDay": [Function],
            "getYear": [Function],
            "isAfter": [Function],
            "isValidate": [Function],
            "locale": Object {
              "format": [Function],
              "getShortMonths": [Function],
              "getShortWeekDays": [Function],
              "getWeek": [Function],
              "getWeekFirstDate": [Function],
              "getWeekFirstDay": [Function],
              "parse": [Function],
            },
            "setDate": [Function],
            "setHour": [Function],
            "setMinute": [Function],
            "setMonth": [Function],
            "setSecond": [Function],
            "setYear": [Function],
          }
        }
        inputReadOnly={true}
        locale={
          Object {
            "backToToday": "Back to today",
            "clear": "Clear",
            "dateFormat": "M/D/YYYY",
            "dateSelect": "select date",
            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
            "dayFormat": "D",
            "decadeSelect": "Choose a decade",
            "locale": "en_US",
            "month": "Month",
            "monthBeforeYear": true,
            "monthPlaceholder": "Select month",
            "monthSelect": "Choose a month",
            "nextCentury": "Next century",
            "nextDecade": "Next decade",
            "nextMonth": "Next month (PageDown)",
            "nextYear": "Next year (Control + right)",
            "now": "Now",
            "ok": "Ok",
            "placeholder": "Select date",
            "previousCentury": "Last century",
            "previousDecade": "Last decade",
            "previousMonth": "Previous month (PageUp)",
            "previousYear": "Last year (Control + left)",
            "quarterPlaceholder": "Select quarter",
            "rangeMonthPlaceholder": Array [
              "Start month",
              "End month",
            ],
            "rangePlaceholder": Array [
              "Start date",
              "End date",
            ],
            "rangeWeekPlaceholder": Array [
              "Start week",
              "End week",
            ],
            "rangeYearPlaceholder": Array [
              "Start year",
              "End year",
            ],
            "timeSelect": "select time",
            "today": "Today",
            "weekPlaceholder": "Select week",
            "weekSelect": "Choose a week",
            "year": "Year",
            "yearFormat": "YYYY",
            "yearPlaceholder": "Select year",
            "yearSelect": "Choose a year",
          }
        }
        maxDate="2020-10-22T13:06:36.873Z"
        nextIcon={
          <span
            className="ant-picker-next-icon"
          />
        }
        onChange={[Function]}
        placeholder={
          Array [
            "Start date",
            "End date",
          ]
        }
        prefixCls="ant-picker"
        prevIcon={
          <span
            className="ant-picker-prev-icon"
          />
        }
        separator={
          <span
            aria-label="to"
            className="ant-picker-separator"
          >
            <ForwardRef(SwapRightOutlined) />
          </span>
        }
        suffixIcon={<ForwardRef(CalendarOutlined) />}
        superNextIcon={
          <span
            className="ant-picker-super-next-icon"
          />
        }
        superPrevIcon={
          <span
            className="ant-picker-super-prev-icon"
          />
        }
        transitionName="slide-up"
        value={
          Array [
            "2001-12-01T22:00:00.000Z",
            "2001-12-01T22:00:00.000Z",
          ]
        }
      >
        <InnerRangePicker
          allowClear={true}
          className="ant-picker-full-width"
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          dateFrom="02-12-2001"
          dateTo="02-12-2001"
          disabledDate={[Function]}
          format="DD-MM-YYYY"
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getEndDate": [Function],
              "getFixedDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDate": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          inputReadOnly={true}
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          maxDate="2020-10-22T13:06:36.873Z"
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          pickerRef={
            Object {
              "current": Object {
                "blur": [Function],
                "focus": [Function],
              },
            }
          }
          placeholder={
            Array [
              "Start date",
              "End date",
            ]
          }
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          separator={
            <span
              aria-label="to"
              className="ant-picker-separator"
            >
              <ForwardRef(SwapRightOutlined) />
            </span>
          }
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
          value={
            Array [
              "2001-12-01T22:00:00.000Z",
              "2001-12-01T22:00:00.000Z",
            ]
          }
        >
          <PickerTrigger
            popupElement={
              <div
                className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                style={
                  Object {
                    "minWidth": 0,
                  }
                }
              >
                <div
                  className="ant-picker-range-arrow"
                  style={
                    Object {
                      "left": 0,
                    }
                  }
                />
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "marginLeft": 0,
                    }
                  }
                >
                  <React.Fragment>
                    <div
                      className="ant-picker-panels"
                    >
                      <React.Fragment>
                        <Context.Provider
                          value={
                            Object {
                              "hoverRangedValue": null,
                              "inRange": true,
                              "panelPosition": "left",
                              "rangedValue": Array [
                                "2001-12-01T22:00:00.000Z",
                                "2001-12-01T22:00:00.000Z",
                              ],
                            }
                          }
                        >
                          <PickerPanel
                            allowClear={true}
                            className="ant-picker-panel-focused"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            components={
                              Object {
                                "button": [Function],
                                "rangeItem": [Function],
                              }
                            }
                            dateFrom="02-12-2001"
                            dateRender={null}
                            dateTo="02-12-2001"
                            defaultValue={"2001-12-01T22:00:00.000Z"}
                            disabledDate={[Function]}
                            disabledTime={[Function]}
                            format="DD-MM-YYYY"
                            generateConfig={
                              Object {
                                "addDate": [Function],
                                "addMonth": [Function],
                                "addYear": [Function],
                                "getDate": [Function],
                                "getEndDate": [Function],
                                "getFixedDate": [Function],
                                "getHour": [Function],
                                "getMinute": [Function],
                                "getMonth": [Function],
                                "getNow": [Function],
                                "getSecond": [Function],
                                "getWeekDay": [Function],
                                "getYear": [Function],
                                "isAfter": [Function],
                                "isValidate": [Function],
                                "locale": Object {
                                  "format": [Function],
                                  "getShortMonths": [Function],
                                  "getShortWeekDays": [Function],
                                  "getWeek": [Function],
                                  "getWeekFirstDate": [Function],
                                  "getWeekFirstDay": [Function],
                                  "parse": [Function],
                                },
                                "setDate": [Function],
                                "setHour": [Function],
                                "setMinute": [Function],
                                "setMonth": [Function],
                                "setSecond": [Function],
                                "setYear": [Function],
                              }
                            }
                            inputReadOnly={true}
                            locale={
                              Object {
                                "backToToday": "Back to today",
                                "clear": "Clear",
                                "dateFormat": "M/D/YYYY",
                                "dateSelect": "select date",
                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                "dayFormat": "D",
                                "decadeSelect": "Choose a decade",
                                "locale": "en_US",
                                "month": "Month",
                                "monthBeforeYear": true,
                                "monthPlaceholder": "Select month",
                                "monthSelect": "Choose a month",
                                "nextCentury": "Next century",
                                "nextDecade": "Next decade",
                                "nextMonth": "Next month (PageDown)",
                                "nextYear": "Next year (Control + right)",
                                "now": "Now",
                                "ok": "Ok",
                                "placeholder": "Select date",
                                "previousCentury": "Last century",
                                "previousDecade": "Last decade",
                                "previousMonth": "Previous month (PageUp)",
                                "previousYear": "Last year (Control + left)",
                                "quarterPlaceholder": "Select quarter",
                                "rangeMonthPlaceholder": Array [
                                  "Start month",
                                  "End month",
                                ],
                                "rangePlaceholder": Array [
                                  "Start date",
                                  "End date",
                                ],
                                "rangeWeekPlaceholder": Array [
                                  "Start week",
                                  "End week",
                                ],
                                "rangeYearPlaceholder": Array [
                                  "Start year",
                                  "End year",
                                ],
                                "timeSelect": "select time",
                                "today": "Today",
                                "weekPlaceholder": "Select week",
                                "weekSelect": "Choose a week",
                                "year": "Year",
                                "yearFormat": "YYYY",
                                "yearPlaceholder": "Select year",
                                "yearSelect": "Choose a year",
                              }
                            }
                            maxDate="2020-10-22T13:06:36.873Z"
                            mode="date"
                            nextIcon={
                              <span
                                className="ant-picker-next-icon"
                              />
                            }
                            onOk={null}
                            onPanelChange={[Function]}
                            onPickerValueChange={[Function]}
                            pickerRef={
                              Object {
                                "current": Object {
                                  "blur": [Function],
                                  "focus": [Function],
                                },
                              }
                            }
                            pickerValue={"2001-12-01T22:00:00.000Z"}
                            placeholder={
                              Array [
                                "Start date",
                                "End date",
                              ]
                            }
                            prefixCls="ant-picker"
                            prevIcon={
                              <span
                                className="ant-picker-prev-icon"
                              />
                            }
                            separator={
                              <span
                                aria-label="to"
                                className="ant-picker-separator"
                              >
                                <ForwardRef(SwapRightOutlined) />
                              </span>
                            }
                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                            superNextIcon={
                              <span
                                className="ant-picker-super-next-icon"
                              />
                            }
                            superPrevIcon={
                              <span
                                className="ant-picker-super-prev-icon"
                              />
                            }
                            tabIndex={-1}
                            transitionName="slide-up"
                            value={"2001-12-01T22:00:00.000Z"}
                          />
                        </Context.Provider>
                        <Context.Provider
                          value={
                            Object {
                              "hoverRangedValue": null,
                              "inRange": true,
                              "panelPosition": "right",
                              "rangedValue": Array [
                                "2001-12-01T22:00:00.000Z",
                                "2001-12-01T22:00:00.000Z",
                              ],
                            }
                          }
                        >
                          <PickerPanel
                            allowClear={true}
                            className="ant-picker-panel-focused"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            components={
                              Object {
                                "button": [Function],
                                "rangeItem": [Function],
                              }
                            }
                            dateFrom="02-12-2001"
                            dateRender={null}
                            dateTo="02-12-2001"
                            defaultValue={"2001-12-01T22:00:00.000Z"}
                            disabledDate={[Function]}
                            disabledTime={[Function]}
                            format="DD-MM-YYYY"
                            generateConfig={
                              Object {
                                "addDate": [Function],
                                "addMonth": [Function],
                                "addYear": [Function],
                                "getDate": [Function],
                                "getEndDate": [Function],
                                "getFixedDate": [Function],
                                "getHour": [Function],
                                "getMinute": [Function],
                                "getMonth": [Function],
                                "getNow": [Function],
                                "getSecond": [Function],
                                "getWeekDay": [Function],
                                "getYear": [Function],
                                "isAfter": [Function],
                                "isValidate": [Function],
                                "locale": Object {
                                  "format": [Function],
                                  "getShortMonths": [Function],
                                  "getShortWeekDays": [Function],
                                  "getWeek": [Function],
                                  "getWeekFirstDate": [Function],
                                  "getWeekFirstDay": [Function],
                                  "parse": [Function],
                                },
                                "setDate": [Function],
                                "setHour": [Function],
                                "setMinute": [Function],
                                "setMonth": [Function],
                                "setSecond": [Function],
                                "setYear": [Function],
                              }
                            }
                            inputReadOnly={true}
                            locale={
                              Object {
                                "backToToday": "Back to today",
                                "clear": "Clear",
                                "dateFormat": "M/D/YYYY",
                                "dateSelect": "select date",
                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                "dayFormat": "D",
                                "decadeSelect": "Choose a decade",
                                "locale": "en_US",
                                "month": "Month",
                                "monthBeforeYear": true,
                                "monthPlaceholder": "Select month",
                                "monthSelect": "Choose a month",
                                "nextCentury": "Next century",
                                "nextDecade": "Next decade",
                                "nextMonth": "Next month (PageDown)",
                                "nextYear": "Next year (Control + right)",
                                "now": "Now",
                                "ok": "Ok",
                                "placeholder": "Select date",
                                "previousCentury": "Last century",
                                "previousDecade": "Last decade",
                                "previousMonth": "Previous month (PageUp)",
                                "previousYear": "Last year (Control + left)",
                                "quarterPlaceholder": "Select quarter",
                                "rangeMonthPlaceholder": Array [
                                  "Start month",
                                  "End month",
                                ],
                                "rangePlaceholder": Array [
                                  "Start date",
                                  "End date",
                                ],
                                "rangeWeekPlaceholder": Array [
                                  "Start week",
                                  "End week",
                                ],
                                "rangeYearPlaceholder": Array [
                                  "Start year",
                                  "End year",
                                ],
                                "timeSelect": "select time",
                                "today": "Today",
                                "weekPlaceholder": "Select week",
                                "weekSelect": "Choose a week",
                                "year": "Year",
                                "yearFormat": "YYYY",
                                "yearPlaceholder": "Select year",
                                "yearSelect": "Choose a year",
                              }
                            }
                            maxDate="2020-10-22T13:06:36.873Z"
                            mode="date"
                            nextIcon={
                              <span
                                className="ant-picker-next-icon"
                              />
                            }
                            onOk={null}
                            onPanelChange={[Function]}
                            onPickerValueChange={[Function]}
                            pickerRef={
                              Object {
                                "current": Object {
                                  "blur": [Function],
                                  "focus": [Function],
                                },
                              }
                            }
                            pickerValue={"2002-01-01T22:00:00.000Z"}
                            placeholder={
                              Array [
                                "Start date",
                                "End date",
                              ]
                            }
                            prefixCls="ant-picker"
                            prevIcon={
                              <span
                                className="ant-picker-prev-icon"
                              />
                            }
                            separator={
                              <span
                                aria-label="to"
                                className="ant-picker-separator"
                              >
                                <ForwardRef(SwapRightOutlined) />
                              </span>
                            }
                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                            superNextIcon={
                              <span
                                className="ant-picker-super-next-icon"
                              />
                            }
                            superPrevIcon={
                              <span
                                className="ant-picker-super-prev-icon"
                              />
                            }
                            tabIndex={-1}
                            transitionName="slide-up"
                            value={"2001-12-01T22:00:00.000Z"}
                          />
                        </Context.Provider>
                      </React.Fragment>
                    </div>
                  </React.Fragment>
                </div>
              </div>
            }
            prefixCls="ant-picker"
            range={true}
            transitionName="slide-up"
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div
                  className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                  style={
                    Object {
                      "minWidth": 0,
                    }
                  }
                >
                  <div
                    className="ant-picker-range-arrow"
                    style={
                      Object {
                        "left": 0,
                      }
                    }
                  />
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                    style={
                      Object {
                        "marginLeft": 0,
                      }
                    }
                  >
                    <React.Fragment>
                      <div
                        className="ant-picker-panels"
                      >
                        <React.Fragment>
                          <Context.Provider
                            value={
                              Object {
                                "hoverRangedValue": null,
                                "inRange": true,
                                "panelPosition": "left",
                                "rangedValue": Array [
                                  "2001-12-01T22:00:00.000Z",
                                  "2001-12-01T22:00:00.000Z",
                                ],
                              }
                            }
                          >
                            <PickerPanel
                              allowClear={true}
                              className="ant-picker-panel-focused"
                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                              components={
                                Object {
                                  "button": [Function],
                                  "rangeItem": [Function],
                                }
                              }
                              dateFrom="02-12-2001"
                              dateRender={null}
                              dateTo="02-12-2001"
                              defaultValue={"2001-12-01T22:00:00.000Z"}
                              disabledDate={[Function]}
                              disabledTime={[Function]}
                              format="DD-MM-YYYY"
                              generateConfig={
                                Object {
                                  "addDate": [Function],
                                  "addMonth": [Function],
                                  "addYear": [Function],
                                  "getDate": [Function],
                                  "getEndDate": [Function],
                                  "getFixedDate": [Function],
                                  "getHour": [Function],
                                  "getMinute": [Function],
                                  "getMonth": [Function],
                                  "getNow": [Function],
                                  "getSecond": [Function],
                                  "getWeekDay": [Function],
                                  "getYear": [Function],
                                  "isAfter": [Function],
                                  "isValidate": [Function],
                                  "locale": Object {
                                    "format": [Function],
                                    "getShortMonths": [Function],
                                    "getShortWeekDays": [Function],
                                    "getWeek": [Function],
                                    "getWeekFirstDate": [Function],
                                    "getWeekFirstDay": [Function],
                                    "parse": [Function],
                                  },
                                  "setDate": [Function],
                                  "setHour": [Function],
                                  "setMinute": [Function],
                                  "setMonth": [Function],
                                  "setSecond": [Function],
                                  "setYear": [Function],
                                }
                              }
                              inputReadOnly={true}
                              locale={
                                Object {
                                  "backToToday": "Back to today",
                                  "clear": "Clear",
                                  "dateFormat": "M/D/YYYY",
                                  "dateSelect": "select date",
                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                  "dayFormat": "D",
                                  "decadeSelect": "Choose a decade",
                                  "locale": "en_US",
                                  "month": "Month",
                                  "monthBeforeYear": true,
                                  "monthPlaceholder": "Select month",
                                  "monthSelect": "Choose a month",
                                  "nextCentury": "Next century",
                                  "nextDecade": "Next decade",
                                  "nextMonth": "Next month (PageDown)",
                                  "nextYear": "Next year (Control + right)",
                                  "now": "Now",
                                  "ok": "Ok",
                                  "placeholder": "Select date",
                                  "previousCentury": "Last century",
                                  "previousDecade": "Last decade",
                                  "previousMonth": "Previous month (PageUp)",
                                  "previousYear": "Last year (Control + left)",
                                  "quarterPlaceholder": "Select quarter",
                                  "rangeMonthPlaceholder": Array [
                                    "Start month",
                                    "End month",
                                  ],
                                  "rangePlaceholder": Array [
                                    "Start date",
                                    "End date",
                                  ],
                                  "rangeWeekPlaceholder": Array [
                                    "Start week",
                                    "End week",
                                  ],
                                  "rangeYearPlaceholder": Array [
                                    "Start year",
                                    "End year",
                                  ],
                                  "timeSelect": "select time",
                                  "today": "Today",
                                  "weekPlaceholder": "Select week",
                                  "weekSelect": "Choose a week",
                                  "year": "Year",
                                  "yearFormat": "YYYY",
                                  "yearPlaceholder": "Select year",
                                  "yearSelect": "Choose a year",
                                }
                              }
                              maxDate="2020-10-22T13:06:36.873Z"
                              mode="date"
                              nextIcon={
                                <span
                                  className="ant-picker-next-icon"
                                />
                              }
                              onOk={null}
                              onPanelChange={[Function]}
                              onPickerValueChange={[Function]}
                              pickerRef={
                                Object {
                                  "current": Object {
                                    "blur": [Function],
                                    "focus": [Function],
                                  },
                                }
                              }
                              pickerValue={"2001-12-01T22:00:00.000Z"}
                              placeholder={
                                Array [
                                  "Start date",
                                  "End date",
                                ]
                              }
                              prefixCls="ant-picker"
                              prevIcon={
                                <span
                                  className="ant-picker-prev-icon"
                                />
                              }
                              separator={
                                <span
                                  aria-label="to"
                                  className="ant-picker-separator"
                                >
                                  <ForwardRef(SwapRightOutlined) />
                                </span>
                              }
                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                              superNextIcon={
                                <span
                                  className="ant-picker-super-next-icon"
                                />
                              }
                              superPrevIcon={
                                <span
                                  className="ant-picker-super-prev-icon"
                                />
                              }
                              tabIndex={-1}
                              transitionName="slide-up"
                              value={"2001-12-01T22:00:00.000Z"}
                            />
                          </Context.Provider>
                          <Context.Provider
                            value={
                              Object {
                                "hoverRangedValue": null,
                                "inRange": true,
                                "panelPosition": "right",
                                "rangedValue": Array [
                                  "2001-12-01T22:00:00.000Z",
                                  "2001-12-01T22:00:00.000Z",
                                ],
                              }
                            }
                          >
                            <PickerPanel
                              allowClear={true}
                              className="ant-picker-panel-focused"
                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                              components={
                                Object {
                                  "button": [Function],
                                  "rangeItem": [Function],
                                }
                              }
                              dateFrom="02-12-2001"
                              dateRender={null}
                              dateTo="02-12-2001"
                              defaultValue={"2001-12-01T22:00:00.000Z"}
                              disabledDate={[Function]}
                              disabledTime={[Function]}
                              format="DD-MM-YYYY"
                              generateConfig={
                                Object {
                                  "addDate": [Function],
                                  "addMonth": [Function],
                                  "addYear": [Function],
                                  "getDate": [Function],
                                  "getEndDate": [Function],
                                  "getFixedDate": [Function],
                                  "getHour": [Function],
                                  "getMinute": [Function],
                                  "getMonth": [Function],
                                  "getNow": [Function],
                                  "getSecond": [Function],
                                  "getWeekDay": [Function],
                                  "getYear": [Function],
                                  "isAfter": [Function],
                                  "isValidate": [Function],
                                  "locale": Object {
                                    "format": [Function],
                                    "getShortMonths": [Function],
                                    "getShortWeekDays": [Function],
                                    "getWeek": [Function],
                                    "getWeekFirstDate": [Function],
                                    "getWeekFirstDay": [Function],
                                    "parse": [Function],
                                  },
                                  "setDate": [Function],
                                  "setHour": [Function],
                                  "setMinute": [Function],
                                  "setMonth": [Function],
                                  "setSecond": [Function],
                                  "setYear": [Function],
                                }
                              }
                              inputReadOnly={true}
                              locale={
                                Object {
                                  "backToToday": "Back to today",
                                  "clear": "Clear",
                                  "dateFormat": "M/D/YYYY",
                                  "dateSelect": "select date",
                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                  "dayFormat": "D",
                                  "decadeSelect": "Choose a decade",
                                  "locale": "en_US",
                                  "month": "Month",
                                  "monthBeforeYear": true,
                                  "monthPlaceholder": "Select month",
                                  "monthSelect": "Choose a month",
                                  "nextCentury": "Next century",
                                  "nextDecade": "Next decade",
                                  "nextMonth": "Next month (PageDown)",
                                  "nextYear": "Next year (Control + right)",
                                  "now": "Now",
                                  "ok": "Ok",
                                  "placeholder": "Select date",
                                  "previousCentury": "Last century",
                                  "previousDecade": "Last decade",
                                  "previousMonth": "Previous month (PageUp)",
                                  "previousYear": "Last year (Control + left)",
                                  "quarterPlaceholder": "Select quarter",
                                  "rangeMonthPlaceholder": Array [
                                    "Start month",
                                    "End month",
                                  ],
                                  "rangePlaceholder": Array [
                                    "Start date",
                                    "End date",
                                  ],
                                  "rangeWeekPlaceholder": Array [
                                    "Start week",
                                    "End week",
                                  ],
                                  "rangeYearPlaceholder": Array [
                                    "Start year",
                                    "End year",
                                  ],
                                  "timeSelect": "select time",
                                  "today": "Today",
                                  "weekPlaceholder": "Select week",
                                  "weekSelect": "Choose a week",
                                  "year": "Year",
                                  "yearFormat": "YYYY",
                                  "yearPlaceholder": "Select year",
                                  "yearSelect": "Choose a year",
                                }
                              }
                              maxDate="2020-10-22T13:06:36.873Z"
                              mode="date"
                              nextIcon={
                                <span
                                  className="ant-picker-next-icon"
                                />
                              }
                              onOk={null}
                              onPanelChange={[Function]}
                              onPickerValueChange={[Function]}
                              pickerRef={
                                Object {
                                  "current": Object {
                                    "blur": [Function],
                                    "focus": [Function],
                                  },
                                }
                              }
                              pickerValue={"2002-01-01T22:00:00.000Z"}
                              placeholder={
                                Array [
                                  "Start date",
                                  "End date",
                                ]
                              }
                              prefixCls="ant-picker"
                              prevIcon={
                                <span
                                  className="ant-picker-prev-icon"
                                />
                              }
                              separator={
                                <span
                                  aria-label="to"
                                  className="ant-picker-separator"
                                >
                                  <ForwardRef(SwapRightOutlined) />
                                </span>
                              }
                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                              superNextIcon={
                                <span
                                  className="ant-picker-super-next-icon"
                                />
                              }
                              superPrevIcon={
                                <span
                                  className="ant-picker-super-prev-icon"
                                />
                              }
                              tabIndex={-1}
                              transitionName="slide-up"
                              value={"2001-12-01T22:00:00.000Z"}
                            />
                          </Context.Provider>
                        </React.Fragment>
                      </div>
                    </React.Fragment>
                  </div>
                </div>
              }
              popupAlign={Object {}}
              popupClassName="ant-picker-dropdown-range"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-picker-dropdown"
              showAction={Array []}
            >
              <div
                className="ant-picker ant-picker-range ant-picker-full-width"
                key="trigger"
                onClick={[Function]}
                onMouseDown={[Function]}
              >
                <div
                  className="ant-picker-input ant-picker-input-active"
                >
                  <input
                    autoComplete="off"
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="Start date"
                    readOnly={true}
                    size={12}
                    value="02-12-2001"
                  />
                </div>
                <div
                  className="ant-picker-range-separator"
                >
                  <span
                    aria-label="to"
                    className="ant-picker-separator"
                  >
                    <ForwardRef(SwapRightOutlined)>
                      <AntdIcon
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "0 0 1024 1024",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "swap-right",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="swap-right"
                          className="anticon anticon-swap-right"
                          role="img"
                        >
                          <IconReact
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "0 0 1024 1024",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "swap-right",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              data-icon="swap-right"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-swap-right"
                              viewBox="0 0 1024 1024"
                              width="1em"
                            >
                              <path
                                d="M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z"
                                key="svg-swap-right-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(SwapRightOutlined)>
                  </span>
                </div>
                <div
                  className="ant-picker-input"
                >
                  <input
                    autoComplete="off"
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="End date"
                    readOnly={true}
                    size={12}
                    value="02-12-2001"
                  />
                </div>
                <div
                  className="ant-picker-active-bar"
                  style={
                    Object {
                      "left": 0,
                      "position": "absolute",
                      "width": 0,
                    }
                  }
                />
                <span
                  className="ant-picker-suffix"
                >
                  <ForwardRef(CalendarOutlined)>
                    <AntdIcon
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "calendar",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="calendar"
                        className="anticon anticon-calendar"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "calendar",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="calendar"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-calendar"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                              key="svg-calendar-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(CalendarOutlined)>
                </span>
                <span
                  className="ant-picker-clear"
                  onMouseDown={[Function]}
                  onMouseUp={[Function]}
                >
                  <ForwardRef(CloseCircleFilled)>
                    <AntdIcon
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "close-circle",
                          "theme": "filled",
                        }
                      }
                    >
                      <span
                        aria-label="close-circle"
                        className="anticon anticon-close-circle"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "close-circle",
                              "theme": "filled",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="close-circle"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-close-circle"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                              key="svg-close-circle-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(CloseCircleFilled)>
                </span>
              </div>
            </Trigger>
          </PickerTrigger>
        </InnerRangePicker>
      </RangePicker>
    </LocaleReceiver>
  </RangePicker>
</DateRangePicker>
`;

exports[` DateRangePicker component DateRangePicker rendered correctly with empty props 1`] = `
<DateRangePicker
  dateFrom="02-12-2001"
  dateTo="02-12-2001"
  format="DD-MM-YYYY"
  inputReadOnly={true}
>
  <RangePicker
    className=""
    dateFrom="02-12-2001"
    dateTo="02-12-2001"
    disabledDate={[Function]}
    format="DD-MM-YYYY"
    inputReadOnly={true}
    onChange={[Function]}
    value={
      Array [
        "2001-12-01T22:00:00.000Z",
        "2001-12-01T22:00:00.000Z",
      ]
    }
  >
    <LocaleReceiver
      componentName="DatePicker"
      defaultLocale={[Function]}
    >
      <RangePicker
        allowClear={true}
        className=""
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        components={
          Object {
            "button": [Function],
            "rangeItem": [Function],
          }
        }
        dateFrom="02-12-2001"
        dateTo="02-12-2001"
        disabledDate={[Function]}
        format="DD-MM-YYYY"
        generateConfig={
          Object {
            "addDate": [Function],
            "addMonth": [Function],
            "addYear": [Function],
            "getDate": [Function],
            "getEndDate": [Function],
            "getFixedDate": [Function],
            "getHour": [Function],
            "getMinute": [Function],
            "getMonth": [Function],
            "getNow": [Function],
            "getSecond": [Function],
            "getWeekDay": [Function],
            "getYear": [Function],
            "isAfter": [Function],
            "isValidate": [Function],
            "locale": Object {
              "format": [Function],
              "getShortMonths": [Function],
              "getShortWeekDays": [Function],
              "getWeek": [Function],
              "getWeekFirstDate": [Function],
              "getWeekFirstDay": [Function],
              "parse": [Function],
            },
            "setDate": [Function],
            "setHour": [Function],
            "setMinute": [Function],
            "setMonth": [Function],
            "setSecond": [Function],
            "setYear": [Function],
          }
        }
        inputReadOnly={true}
        locale={
          Object {
            "backToToday": "Back to today",
            "clear": "Clear",
            "dateFormat": "M/D/YYYY",
            "dateSelect": "select date",
            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
            "dayFormat": "D",
            "decadeSelect": "Choose a decade",
            "locale": "en_US",
            "month": "Month",
            "monthBeforeYear": true,
            "monthPlaceholder": "Select month",
            "monthSelect": "Choose a month",
            "nextCentury": "Next century",
            "nextDecade": "Next decade",
            "nextMonth": "Next month (PageDown)",
            "nextYear": "Next year (Control + right)",
            "now": "Now",
            "ok": "Ok",
            "placeholder": "Select date",
            "previousCentury": "Last century",
            "previousDecade": "Last decade",
            "previousMonth": "Previous month (PageUp)",
            "previousYear": "Last year (Control + left)",
            "quarterPlaceholder": "Select quarter",
            "rangeMonthPlaceholder": Array [
              "Start month",
              "End month",
            ],
            "rangePlaceholder": Array [
              "Start date",
              "End date",
            ],
            "rangeWeekPlaceholder": Array [
              "Start week",
              "End week",
            ],
            "rangeYearPlaceholder": Array [
              "Start year",
              "End year",
            ],
            "timeSelect": "select time",
            "today": "Today",
            "weekPlaceholder": "Select week",
            "weekSelect": "Choose a week",
            "year": "Year",
            "yearFormat": "YYYY",
            "yearPlaceholder": "Select year",
            "yearSelect": "Choose a year",
          }
        }
        nextIcon={
          <span
            className="ant-picker-next-icon"
          />
        }
        onChange={[Function]}
        placeholder={
          Array [
            "Start date",
            "End date",
          ]
        }
        prefixCls="ant-picker"
        prevIcon={
          <span
            className="ant-picker-prev-icon"
          />
        }
        separator={
          <span
            aria-label="to"
            className="ant-picker-separator"
          >
            <ForwardRef(SwapRightOutlined) />
          </span>
        }
        suffixIcon={<ForwardRef(CalendarOutlined) />}
        superNextIcon={
          <span
            className="ant-picker-super-next-icon"
          />
        }
        superPrevIcon={
          <span
            className="ant-picker-super-prev-icon"
          />
        }
        transitionName="slide-up"
        value={
          Array [
            "2001-12-01T22:00:00.000Z",
            "2001-12-01T22:00:00.000Z",
          ]
        }
      >
        <InnerRangePicker
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          dateFrom="02-12-2001"
          dateTo="02-12-2001"
          disabledDate={[Function]}
          format="DD-MM-YYYY"
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getEndDate": [Function],
              "getFixedDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDate": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          inputReadOnly={true}
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          pickerRef={
            Object {
              "current": Object {
                "blur": [Function],
                "focus": [Function],
              },
            }
          }
          placeholder={
            Array [
              "Start date",
              "End date",
            ]
          }
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          separator={
            <span
              aria-label="to"
              className="ant-picker-separator"
            >
              <ForwardRef(SwapRightOutlined) />
            </span>
          }
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
          value={
            Array [
              "2001-12-01T22:00:00.000Z",
              "2001-12-01T22:00:00.000Z",
            ]
          }
        >
          <PickerTrigger
            popupElement={
              <div
                className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                style={
                  Object {
                    "minWidth": 0,
                  }
                }
              >
                <div
                  className="ant-picker-range-arrow"
                  style={
                    Object {
                      "left": 0,
                    }
                  }
                />
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "marginLeft": 0,
                    }
                  }
                >
                  <React.Fragment>
                    <div
                      className="ant-picker-panels"
                    >
                      <React.Fragment>
                        <Context.Provider
                          value={
                            Object {
                              "hoverRangedValue": null,
                              "inRange": true,
                              "panelPosition": "left",
                              "rangedValue": Array [
                                "2001-12-01T22:00:00.000Z",
                                "2001-12-01T22:00:00.000Z",
                              ],
                            }
                          }
                        >
                          <PickerPanel
                            allowClear={true}
                            className="ant-picker-panel-focused"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            components={
                              Object {
                                "button": [Function],
                                "rangeItem": [Function],
                              }
                            }
                            dateFrom="02-12-2001"
                            dateRender={null}
                            dateTo="02-12-2001"
                            defaultValue={"2001-12-01T22:00:00.000Z"}
                            disabledDate={[Function]}
                            disabledTime={[Function]}
                            format="DD-MM-YYYY"
                            generateConfig={
                              Object {
                                "addDate": [Function],
                                "addMonth": [Function],
                                "addYear": [Function],
                                "getDate": [Function],
                                "getEndDate": [Function],
                                "getFixedDate": [Function],
                                "getHour": [Function],
                                "getMinute": [Function],
                                "getMonth": [Function],
                                "getNow": [Function],
                                "getSecond": [Function],
                                "getWeekDay": [Function],
                                "getYear": [Function],
                                "isAfter": [Function],
                                "isValidate": [Function],
                                "locale": Object {
                                  "format": [Function],
                                  "getShortMonths": [Function],
                                  "getShortWeekDays": [Function],
                                  "getWeek": [Function],
                                  "getWeekFirstDate": [Function],
                                  "getWeekFirstDay": [Function],
                                  "parse": [Function],
                                },
                                "setDate": [Function],
                                "setHour": [Function],
                                "setMinute": [Function],
                                "setMonth": [Function],
                                "setSecond": [Function],
                                "setYear": [Function],
                              }
                            }
                            inputReadOnly={true}
                            locale={
                              Object {
                                "backToToday": "Back to today",
                                "clear": "Clear",
                                "dateFormat": "M/D/YYYY",
                                "dateSelect": "select date",
                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                "dayFormat": "D",
                                "decadeSelect": "Choose a decade",
                                "locale": "en_US",
                                "month": "Month",
                                "monthBeforeYear": true,
                                "monthPlaceholder": "Select month",
                                "monthSelect": "Choose a month",
                                "nextCentury": "Next century",
                                "nextDecade": "Next decade",
                                "nextMonth": "Next month (PageDown)",
                                "nextYear": "Next year (Control + right)",
                                "now": "Now",
                                "ok": "Ok",
                                "placeholder": "Select date",
                                "previousCentury": "Last century",
                                "previousDecade": "Last decade",
                                "previousMonth": "Previous month (PageUp)",
                                "previousYear": "Last year (Control + left)",
                                "quarterPlaceholder": "Select quarter",
                                "rangeMonthPlaceholder": Array [
                                  "Start month",
                                  "End month",
                                ],
                                "rangePlaceholder": Array [
                                  "Start date",
                                  "End date",
                                ],
                                "rangeWeekPlaceholder": Array [
                                  "Start week",
                                  "End week",
                                ],
                                "rangeYearPlaceholder": Array [
                                  "Start year",
                                  "End year",
                                ],
                                "timeSelect": "select time",
                                "today": "Today",
                                "weekPlaceholder": "Select week",
                                "weekSelect": "Choose a week",
                                "year": "Year",
                                "yearFormat": "YYYY",
                                "yearPlaceholder": "Select year",
                                "yearSelect": "Choose a year",
                              }
                            }
                            mode="date"
                            nextIcon={
                              <span
                                className="ant-picker-next-icon"
                              />
                            }
                            onOk={null}
                            onPanelChange={[Function]}
                            onPickerValueChange={[Function]}
                            pickerRef={
                              Object {
                                "current": Object {
                                  "blur": [Function],
                                  "focus": [Function],
                                },
                              }
                            }
                            pickerValue={"2001-12-01T22:00:00.000Z"}
                            placeholder={
                              Array [
                                "Start date",
                                "End date",
                              ]
                            }
                            prefixCls="ant-picker"
                            prevIcon={
                              <span
                                className="ant-picker-prev-icon"
                              />
                            }
                            separator={
                              <span
                                aria-label="to"
                                className="ant-picker-separator"
                              >
                                <ForwardRef(SwapRightOutlined) />
                              </span>
                            }
                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                            superNextIcon={
                              <span
                                className="ant-picker-super-next-icon"
                              />
                            }
                            superPrevIcon={
                              <span
                                className="ant-picker-super-prev-icon"
                              />
                            }
                            tabIndex={-1}
                            transitionName="slide-up"
                            value={"2001-12-01T22:00:00.000Z"}
                          />
                        </Context.Provider>
                        <Context.Provider
                          value={
                            Object {
                              "hoverRangedValue": null,
                              "inRange": true,
                              "panelPosition": "right",
                              "rangedValue": Array [
                                "2001-12-01T22:00:00.000Z",
                                "2001-12-01T22:00:00.000Z",
                              ],
                            }
                          }
                        >
                          <PickerPanel
                            allowClear={true}
                            className="ant-picker-panel-focused"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            components={
                              Object {
                                "button": [Function],
                                "rangeItem": [Function],
                              }
                            }
                            dateFrom="02-12-2001"
                            dateRender={null}
                            dateTo="02-12-2001"
                            defaultValue={"2001-12-01T22:00:00.000Z"}
                            disabledDate={[Function]}
                            disabledTime={[Function]}
                            format="DD-MM-YYYY"
                            generateConfig={
                              Object {
                                "addDate": [Function],
                                "addMonth": [Function],
                                "addYear": [Function],
                                "getDate": [Function],
                                "getEndDate": [Function],
                                "getFixedDate": [Function],
                                "getHour": [Function],
                                "getMinute": [Function],
                                "getMonth": [Function],
                                "getNow": [Function],
                                "getSecond": [Function],
                                "getWeekDay": [Function],
                                "getYear": [Function],
                                "isAfter": [Function],
                                "isValidate": [Function],
                                "locale": Object {
                                  "format": [Function],
                                  "getShortMonths": [Function],
                                  "getShortWeekDays": [Function],
                                  "getWeek": [Function],
                                  "getWeekFirstDate": [Function],
                                  "getWeekFirstDay": [Function],
                                  "parse": [Function],
                                },
                                "setDate": [Function],
                                "setHour": [Function],
                                "setMinute": [Function],
                                "setMonth": [Function],
                                "setSecond": [Function],
                                "setYear": [Function],
                              }
                            }
                            inputReadOnly={true}
                            locale={
                              Object {
                                "backToToday": "Back to today",
                                "clear": "Clear",
                                "dateFormat": "M/D/YYYY",
                                "dateSelect": "select date",
                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                "dayFormat": "D",
                                "decadeSelect": "Choose a decade",
                                "locale": "en_US",
                                "month": "Month",
                                "monthBeforeYear": true,
                                "monthPlaceholder": "Select month",
                                "monthSelect": "Choose a month",
                                "nextCentury": "Next century",
                                "nextDecade": "Next decade",
                                "nextMonth": "Next month (PageDown)",
                                "nextYear": "Next year (Control + right)",
                                "now": "Now",
                                "ok": "Ok",
                                "placeholder": "Select date",
                                "previousCentury": "Last century",
                                "previousDecade": "Last decade",
                                "previousMonth": "Previous month (PageUp)",
                                "previousYear": "Last year (Control + left)",
                                "quarterPlaceholder": "Select quarter",
                                "rangeMonthPlaceholder": Array [
                                  "Start month",
                                  "End month",
                                ],
                                "rangePlaceholder": Array [
                                  "Start date",
                                  "End date",
                                ],
                                "rangeWeekPlaceholder": Array [
                                  "Start week",
                                  "End week",
                                ],
                                "rangeYearPlaceholder": Array [
                                  "Start year",
                                  "End year",
                                ],
                                "timeSelect": "select time",
                                "today": "Today",
                                "weekPlaceholder": "Select week",
                                "weekSelect": "Choose a week",
                                "year": "Year",
                                "yearFormat": "YYYY",
                                "yearPlaceholder": "Select year",
                                "yearSelect": "Choose a year",
                              }
                            }
                            mode="date"
                            nextIcon={
                              <span
                                className="ant-picker-next-icon"
                              />
                            }
                            onOk={null}
                            onPanelChange={[Function]}
                            onPickerValueChange={[Function]}
                            pickerRef={
                              Object {
                                "current": Object {
                                  "blur": [Function],
                                  "focus": [Function],
                                },
                              }
                            }
                            pickerValue={"2002-01-01T22:00:00.000Z"}
                            placeholder={
                              Array [
                                "Start date",
                                "End date",
                              ]
                            }
                            prefixCls="ant-picker"
                            prevIcon={
                              <span
                                className="ant-picker-prev-icon"
                              />
                            }
                            separator={
                              <span
                                aria-label="to"
                                className="ant-picker-separator"
                              >
                                <ForwardRef(SwapRightOutlined) />
                              </span>
                            }
                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                            superNextIcon={
                              <span
                                className="ant-picker-super-next-icon"
                              />
                            }
                            superPrevIcon={
                              <span
                                className="ant-picker-super-prev-icon"
                              />
                            }
                            tabIndex={-1}
                            transitionName="slide-up"
                            value={"2001-12-01T22:00:00.000Z"}
                          />
                        </Context.Provider>
                      </React.Fragment>
                    </div>
                  </React.Fragment>
                </div>
              </div>
            }
            prefixCls="ant-picker"
            range={true}
            transitionName="slide-up"
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div
                  className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                  style={
                    Object {
                      "minWidth": 0,
                    }
                  }
                >
                  <div
                    className="ant-picker-range-arrow"
                    style={
                      Object {
                        "left": 0,
                      }
                    }
                  />
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                    style={
                      Object {
                        "marginLeft": 0,
                      }
                    }
                  >
                    <React.Fragment>
                      <div
                        className="ant-picker-panels"
                      >
                        <React.Fragment>
                          <Context.Provider
                            value={
                              Object {
                                "hoverRangedValue": null,
                                "inRange": true,
                                "panelPosition": "left",
                                "rangedValue": Array [
                                  "2001-12-01T22:00:00.000Z",
                                  "2001-12-01T22:00:00.000Z",
                                ],
                              }
                            }
                          >
                            <PickerPanel
                              allowClear={true}
                              className="ant-picker-panel-focused"
                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                              components={
                                Object {
                                  "button": [Function],
                                  "rangeItem": [Function],
                                }
                              }
                              dateFrom="02-12-2001"
                              dateRender={null}
                              dateTo="02-12-2001"
                              defaultValue={"2001-12-01T22:00:00.000Z"}
                              disabledDate={[Function]}
                              disabledTime={[Function]}
                              format="DD-MM-YYYY"
                              generateConfig={
                                Object {
                                  "addDate": [Function],
                                  "addMonth": [Function],
                                  "addYear": [Function],
                                  "getDate": [Function],
                                  "getEndDate": [Function],
                                  "getFixedDate": [Function],
                                  "getHour": [Function],
                                  "getMinute": [Function],
                                  "getMonth": [Function],
                                  "getNow": [Function],
                                  "getSecond": [Function],
                                  "getWeekDay": [Function],
                                  "getYear": [Function],
                                  "isAfter": [Function],
                                  "isValidate": [Function],
                                  "locale": Object {
                                    "format": [Function],
                                    "getShortMonths": [Function],
                                    "getShortWeekDays": [Function],
                                    "getWeek": [Function],
                                    "getWeekFirstDate": [Function],
                                    "getWeekFirstDay": [Function],
                                    "parse": [Function],
                                  },
                                  "setDate": [Function],
                                  "setHour": [Function],
                                  "setMinute": [Function],
                                  "setMonth": [Function],
                                  "setSecond": [Function],
                                  "setYear": [Function],
                                }
                              }
                              inputReadOnly={true}
                              locale={
                                Object {
                                  "backToToday": "Back to today",
                                  "clear": "Clear",
                                  "dateFormat": "M/D/YYYY",
                                  "dateSelect": "select date",
                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                  "dayFormat": "D",
                                  "decadeSelect": "Choose a decade",
                                  "locale": "en_US",
                                  "month": "Month",
                                  "monthBeforeYear": true,
                                  "monthPlaceholder": "Select month",
                                  "monthSelect": "Choose a month",
                                  "nextCentury": "Next century",
                                  "nextDecade": "Next decade",
                                  "nextMonth": "Next month (PageDown)",
                                  "nextYear": "Next year (Control + right)",
                                  "now": "Now",
                                  "ok": "Ok",
                                  "placeholder": "Select date",
                                  "previousCentury": "Last century",
                                  "previousDecade": "Last decade",
                                  "previousMonth": "Previous month (PageUp)",
                                  "previousYear": "Last year (Control + left)",
                                  "quarterPlaceholder": "Select quarter",
                                  "rangeMonthPlaceholder": Array [
                                    "Start month",
                                    "End month",
                                  ],
                                  "rangePlaceholder": Array [
                                    "Start date",
                                    "End date",
                                  ],
                                  "rangeWeekPlaceholder": Array [
                                    "Start week",
                                    "End week",
                                  ],
                                  "rangeYearPlaceholder": Array [
                                    "Start year",
                                    "End year",
                                  ],
                                  "timeSelect": "select time",
                                  "today": "Today",
                                  "weekPlaceholder": "Select week",
                                  "weekSelect": "Choose a week",
                                  "year": "Year",
                                  "yearFormat": "YYYY",
                                  "yearPlaceholder": "Select year",
                                  "yearSelect": "Choose a year",
                                }
                              }
                              mode="date"
                              nextIcon={
                                <span
                                  className="ant-picker-next-icon"
                                />
                              }
                              onOk={null}
                              onPanelChange={[Function]}
                              onPickerValueChange={[Function]}
                              pickerRef={
                                Object {
                                  "current": Object {
                                    "blur": [Function],
                                    "focus": [Function],
                                  },
                                }
                              }
                              pickerValue={"2001-12-01T22:00:00.000Z"}
                              placeholder={
                                Array [
                                  "Start date",
                                  "End date",
                                ]
                              }
                              prefixCls="ant-picker"
                              prevIcon={
                                <span
                                  className="ant-picker-prev-icon"
                                />
                              }
                              separator={
                                <span
                                  aria-label="to"
                                  className="ant-picker-separator"
                                >
                                  <ForwardRef(SwapRightOutlined) />
                                </span>
                              }
                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                              superNextIcon={
                                <span
                                  className="ant-picker-super-next-icon"
                                />
                              }
                              superPrevIcon={
                                <span
                                  className="ant-picker-super-prev-icon"
                                />
                              }
                              tabIndex={-1}
                              transitionName="slide-up"
                              value={"2001-12-01T22:00:00.000Z"}
                            />
                          </Context.Provider>
                          <Context.Provider
                            value={
                              Object {
                                "hoverRangedValue": null,
                                "inRange": true,
                                "panelPosition": "right",
                                "rangedValue": Array [
                                  "2001-12-01T22:00:00.000Z",
                                  "2001-12-01T22:00:00.000Z",
                                ],
                              }
                            }
                          >
                            <PickerPanel
                              allowClear={true}
                              className="ant-picker-panel-focused"
                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                              components={
                                Object {
                                  "button": [Function],
                                  "rangeItem": [Function],
                                }
                              }
                              dateFrom="02-12-2001"
                              dateRender={null}
                              dateTo="02-12-2001"
                              defaultValue={"2001-12-01T22:00:00.000Z"}
                              disabledDate={[Function]}
                              disabledTime={[Function]}
                              format="DD-MM-YYYY"
                              generateConfig={
                                Object {
                                  "addDate": [Function],
                                  "addMonth": [Function],
                                  "addYear": [Function],
                                  "getDate": [Function],
                                  "getEndDate": [Function],
                                  "getFixedDate": [Function],
                                  "getHour": [Function],
                                  "getMinute": [Function],
                                  "getMonth": [Function],
                                  "getNow": [Function],
                                  "getSecond": [Function],
                                  "getWeekDay": [Function],
                                  "getYear": [Function],
                                  "isAfter": [Function],
                                  "isValidate": [Function],
                                  "locale": Object {
                                    "format": [Function],
                                    "getShortMonths": [Function],
                                    "getShortWeekDays": [Function],
                                    "getWeek": [Function],
                                    "getWeekFirstDate": [Function],
                                    "getWeekFirstDay": [Function],
                                    "parse": [Function],
                                  },
                                  "setDate": [Function],
                                  "setHour": [Function],
                                  "setMinute": [Function],
                                  "setMonth": [Function],
                                  "setSecond": [Function],
                                  "setYear": [Function],
                                }
                              }
                              inputReadOnly={true}
                              locale={
                                Object {
                                  "backToToday": "Back to today",
                                  "clear": "Clear",
                                  "dateFormat": "M/D/YYYY",
                                  "dateSelect": "select date",
                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                  "dayFormat": "D",
                                  "decadeSelect": "Choose a decade",
                                  "locale": "en_US",
                                  "month": "Month",
                                  "monthBeforeYear": true,
                                  "monthPlaceholder": "Select month",
                                  "monthSelect": "Choose a month",
                                  "nextCentury": "Next century",
                                  "nextDecade": "Next decade",
                                  "nextMonth": "Next month (PageDown)",
                                  "nextYear": "Next year (Control + right)",
                                  "now": "Now",
                                  "ok": "Ok",
                                  "placeholder": "Select date",
                                  "previousCentury": "Last century",
                                  "previousDecade": "Last decade",
                                  "previousMonth": "Previous month (PageUp)",
                                  "previousYear": "Last year (Control + left)",
                                  "quarterPlaceholder": "Select quarter",
                                  "rangeMonthPlaceholder": Array [
                                    "Start month",
                                    "End month",
                                  ],
                                  "rangePlaceholder": Array [
                                    "Start date",
                                    "End date",
                                  ],
                                  "rangeWeekPlaceholder": Array [
                                    "Start week",
                                    "End week",
                                  ],
                                  "rangeYearPlaceholder": Array [
                                    "Start year",
                                    "End year",
                                  ],
                                  "timeSelect": "select time",
                                  "today": "Today",
                                  "weekPlaceholder": "Select week",
                                  "weekSelect": "Choose a week",
                                  "year": "Year",
                                  "yearFormat": "YYYY",
                                  "yearPlaceholder": "Select year",
                                  "yearSelect": "Choose a year",
                                }
                              }
                              mode="date"
                              nextIcon={
                                <span
                                  className="ant-picker-next-icon"
                                />
                              }
                              onOk={null}
                              onPanelChange={[Function]}
                              onPickerValueChange={[Function]}
                              pickerRef={
                                Object {
                                  "current": Object {
                                    "blur": [Function],
                                    "focus": [Function],
                                  },
                                }
                              }
                              pickerValue={"2002-01-01T22:00:00.000Z"}
                              placeholder={
                                Array [
                                  "Start date",
                                  "End date",
                                ]
                              }
                              prefixCls="ant-picker"
                              prevIcon={
                                <span
                                  className="ant-picker-prev-icon"
                                />
                              }
                              separator={
                                <span
                                  aria-label="to"
                                  className="ant-picker-separator"
                                >
                                  <ForwardRef(SwapRightOutlined) />
                                </span>
                              }
                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                              superNextIcon={
                                <span
                                  className="ant-picker-super-next-icon"
                                />
                              }
                              superPrevIcon={
                                <span
                                  className="ant-picker-super-prev-icon"
                                />
                              }
                              tabIndex={-1}
                              transitionName="slide-up"
                              value={"2001-12-01T22:00:00.000Z"}
                            />
                          </Context.Provider>
                        </React.Fragment>
                      </div>
                    </React.Fragment>
                  </div>
                </div>
              }
              popupAlign={Object {}}
              popupClassName="ant-picker-dropdown-range"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-picker-dropdown"
              showAction={Array []}
            >
              <div
                className="ant-picker ant-picker-range"
                key="trigger"
                onClick={[Function]}
                onMouseDown={[Function]}
              >
                <div
                  className="ant-picker-input ant-picker-input-active"
                >
                  <input
                    autoComplete="off"
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="Start date"
                    readOnly={true}
                    size={12}
                    value="02-12-2001"
                  />
                </div>
                <div
                  className="ant-picker-range-separator"
                >
                  <span
                    aria-label="to"
                    className="ant-picker-separator"
                  >
                    <ForwardRef(SwapRightOutlined)>
                      <AntdIcon
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "0 0 1024 1024",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "swap-right",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="swap-right"
                          className="anticon anticon-swap-right"
                          role="img"
                        >
                          <IconReact
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "0 0 1024 1024",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "swap-right",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              data-icon="swap-right"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-swap-right"
                              viewBox="0 0 1024 1024"
                              width="1em"
                            >
                              <path
                                d="M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z"
                                key="svg-swap-right-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(SwapRightOutlined)>
                  </span>
                </div>
                <div
                  className="ant-picker-input"
                >
                  <input
                    autoComplete="off"
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="End date"
                    readOnly={true}
                    size={12}
                    value="02-12-2001"
                  />
                </div>
                <div
                  className="ant-picker-active-bar"
                  style={
                    Object {
                      "left": 0,
                      "position": "absolute",
                      "width": 0,
                    }
                  }
                />
                <span
                  className="ant-picker-suffix"
                >
                  <ForwardRef(CalendarOutlined)>
                    <AntdIcon
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "calendar",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="calendar"
                        className="anticon anticon-calendar"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "calendar",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="calendar"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-calendar"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                              key="svg-calendar-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(CalendarOutlined)>
                </span>
                <span
                  className="ant-picker-clear"
                  onMouseDown={[Function]}
                  onMouseUp={[Function]}
                >
                  <ForwardRef(CloseCircleFilled)>
                    <AntdIcon
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "close-circle",
                          "theme": "filled",
                        }
                      }
                    >
                      <span
                        aria-label="close-circle"
                        className="anticon anticon-close-circle"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "close-circle",
                              "theme": "filled",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="close-circle"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-close-circle"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                              key="svg-close-circle-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(CloseCircleFilled)>
                </span>
              </div>
            </Trigger>
          </PickerTrigger>
        </InnerRangePicker>
      </RangePicker>
    </LocaleReceiver>
  </RangePicker>
</DateRangePicker>
`;

exports[` DateRangePicker component DateRangePicker trigger onChange with empty 1`] = `
<DateRangePicker
  dateFrom="02-12-2001"
  dateTo="02-12-2001"
  format="DD-MM-YYYY"
  fullWidth={true}
  inputReadOnly={true}
  maxDate="2020-10-22T13:06:36.873Z"
  onChange={[MockFunction]}
  useDefaultPreset={false}
>
  <RangePicker
    className="ant-picker-full-width"
    dateFrom="02-12-2001"
    dateTo="02-12-2001"
    disabledDate={[Function]}
    format="DD-MM-YYYY"
    inputReadOnly={true}
    maxDate="2020-10-22T13:06:36.873Z"
    onChange={[Function]}
    value={
      Array [
        "2001-12-01T22:00:00.000Z",
        "2001-12-01T22:00:00.000Z",
      ]
    }
  >
    <LocaleReceiver
      componentName="DatePicker"
      defaultLocale={[Function]}
    >
      <RangePicker
        allowClear={true}
        className="ant-picker-full-width"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        components={
          Object {
            "button": [Function],
            "rangeItem": [Function],
          }
        }
        dateFrom="02-12-2001"
        dateTo="02-12-2001"
        disabledDate={[Function]}
        format="DD-MM-YYYY"
        generateConfig={
          Object {
            "addDate": [Function],
            "addMonth": [Function],
            "addYear": [Function],
            "getDate": [Function],
            "getEndDate": [Function],
            "getFixedDate": [Function],
            "getHour": [Function],
            "getMinute": [Function],
            "getMonth": [Function],
            "getNow": [Function],
            "getSecond": [Function],
            "getWeekDay": [Function],
            "getYear": [Function],
            "isAfter": [Function],
            "isValidate": [Function],
            "locale": Object {
              "format": [Function],
              "getShortMonths": [Function],
              "getShortWeekDays": [Function],
              "getWeek": [Function],
              "getWeekFirstDate": [Function],
              "getWeekFirstDay": [Function],
              "parse": [Function],
            },
            "setDate": [Function],
            "setHour": [Function],
            "setMinute": [Function],
            "setMonth": [Function],
            "setSecond": [Function],
            "setYear": [Function],
          }
        }
        inputReadOnly={true}
        locale={
          Object {
            "backToToday": "Back to today",
            "clear": "Clear",
            "dateFormat": "M/D/YYYY",
            "dateSelect": "select date",
            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
            "dayFormat": "D",
            "decadeSelect": "Choose a decade",
            "locale": "en_US",
            "month": "Month",
            "monthBeforeYear": true,
            "monthPlaceholder": "Select month",
            "monthSelect": "Choose a month",
            "nextCentury": "Next century",
            "nextDecade": "Next decade",
            "nextMonth": "Next month (PageDown)",
            "nextYear": "Next year (Control + right)",
            "now": "Now",
            "ok": "Ok",
            "placeholder": "Select date",
            "previousCentury": "Last century",
            "previousDecade": "Last decade",
            "previousMonth": "Previous month (PageUp)",
            "previousYear": "Last year (Control + left)",
            "quarterPlaceholder": "Select quarter",
            "rangeMonthPlaceholder": Array [
              "Start month",
              "End month",
            ],
            "rangePlaceholder": Array [
              "Start date",
              "End date",
            ],
            "rangeWeekPlaceholder": Array [
              "Start week",
              "End week",
            ],
            "rangeYearPlaceholder": Array [
              "Start year",
              "End year",
            ],
            "timeSelect": "select time",
            "today": "Today",
            "weekPlaceholder": "Select week",
            "weekSelect": "Choose a week",
            "year": "Year",
            "yearFormat": "YYYY",
            "yearPlaceholder": "Select year",
            "yearSelect": "Choose a year",
          }
        }
        maxDate="2020-10-22T13:06:36.873Z"
        nextIcon={
          <span
            className="ant-picker-next-icon"
          />
        }
        onChange={[Function]}
        placeholder={
          Array [
            "Start date",
            "End date",
          ]
        }
        prefixCls="ant-picker"
        prevIcon={
          <span
            className="ant-picker-prev-icon"
          />
        }
        separator={
          <span
            aria-label="to"
            className="ant-picker-separator"
          >
            <ForwardRef(SwapRightOutlined) />
          </span>
        }
        suffixIcon={<ForwardRef(CalendarOutlined) />}
        superNextIcon={
          <span
            className="ant-picker-super-next-icon"
          />
        }
        superPrevIcon={
          <span
            className="ant-picker-super-prev-icon"
          />
        }
        transitionName="slide-up"
        value={
          Array [
            "2001-12-01T22:00:00.000Z",
            "2001-12-01T22:00:00.000Z",
          ]
        }
      >
        <InnerRangePicker
          allowClear={true}
          className="ant-picker-full-width"
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          dateFrom="02-12-2001"
          dateTo="02-12-2001"
          disabledDate={[Function]}
          format="DD-MM-YYYY"
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getEndDate": [Function],
              "getFixedDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDate": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          inputReadOnly={true}
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          maxDate="2020-10-22T13:06:36.873Z"
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          pickerRef={
            Object {
              "current": Object {
                "blur": [Function],
                "focus": [Function],
              },
            }
          }
          placeholder={
            Array [
              "Start date",
              "End date",
            ]
          }
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          separator={
            <span
              aria-label="to"
              className="ant-picker-separator"
            >
              <ForwardRef(SwapRightOutlined) />
            </span>
          }
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
          value={
            Array [
              "2001-12-01T22:00:00.000Z",
              "2001-12-01T22:00:00.000Z",
            ]
          }
        >
          <PickerTrigger
            popupElement={
              <div
                className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                style={
                  Object {
                    "minWidth": 0,
                  }
                }
              >
                <div
                  className="ant-picker-range-arrow"
                  style={
                    Object {
                      "left": 0,
                    }
                  }
                />
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "marginLeft": 0,
                    }
                  }
                >
                  <React.Fragment>
                    <div
                      className="ant-picker-panels"
                    >
                      <React.Fragment>
                        <Context.Provider
                          value={
                            Object {
                              "hoverRangedValue": null,
                              "inRange": true,
                              "panelPosition": "left",
                              "rangedValue": Array [
                                "2001-12-01T22:00:00.000Z",
                                "2001-12-01T22:00:00.000Z",
                              ],
                            }
                          }
                        >
                          <PickerPanel
                            allowClear={true}
                            className="ant-picker-panel-focused"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            components={
                              Object {
                                "button": [Function],
                                "rangeItem": [Function],
                              }
                            }
                            dateFrom="02-12-2001"
                            dateRender={null}
                            dateTo="02-12-2001"
                            defaultValue={"2001-12-01T22:00:00.000Z"}
                            disabledDate={[Function]}
                            disabledTime={[Function]}
                            format="DD-MM-YYYY"
                            generateConfig={
                              Object {
                                "addDate": [Function],
                                "addMonth": [Function],
                                "addYear": [Function],
                                "getDate": [Function],
                                "getEndDate": [Function],
                                "getFixedDate": [Function],
                                "getHour": [Function],
                                "getMinute": [Function],
                                "getMonth": [Function],
                                "getNow": [Function],
                                "getSecond": [Function],
                                "getWeekDay": [Function],
                                "getYear": [Function],
                                "isAfter": [Function],
                                "isValidate": [Function],
                                "locale": Object {
                                  "format": [Function],
                                  "getShortMonths": [Function],
                                  "getShortWeekDays": [Function],
                                  "getWeek": [Function],
                                  "getWeekFirstDate": [Function],
                                  "getWeekFirstDay": [Function],
                                  "parse": [Function],
                                },
                                "setDate": [Function],
                                "setHour": [Function],
                                "setMinute": [Function],
                                "setMonth": [Function],
                                "setSecond": [Function],
                                "setYear": [Function],
                              }
                            }
                            inputReadOnly={true}
                            locale={
                              Object {
                                "backToToday": "Back to today",
                                "clear": "Clear",
                                "dateFormat": "M/D/YYYY",
                                "dateSelect": "select date",
                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                "dayFormat": "D",
                                "decadeSelect": "Choose a decade",
                                "locale": "en_US",
                                "month": "Month",
                                "monthBeforeYear": true,
                                "monthPlaceholder": "Select month",
                                "monthSelect": "Choose a month",
                                "nextCentury": "Next century",
                                "nextDecade": "Next decade",
                                "nextMonth": "Next month (PageDown)",
                                "nextYear": "Next year (Control + right)",
                                "now": "Now",
                                "ok": "Ok",
                                "placeholder": "Select date",
                                "previousCentury": "Last century",
                                "previousDecade": "Last decade",
                                "previousMonth": "Previous month (PageUp)",
                                "previousYear": "Last year (Control + left)",
                                "quarterPlaceholder": "Select quarter",
                                "rangeMonthPlaceholder": Array [
                                  "Start month",
                                  "End month",
                                ],
                                "rangePlaceholder": Array [
                                  "Start date",
                                  "End date",
                                ],
                                "rangeWeekPlaceholder": Array [
                                  "Start week",
                                  "End week",
                                ],
                                "rangeYearPlaceholder": Array [
                                  "Start year",
                                  "End year",
                                ],
                                "timeSelect": "select time",
                                "today": "Today",
                                "weekPlaceholder": "Select week",
                                "weekSelect": "Choose a week",
                                "year": "Year",
                                "yearFormat": "YYYY",
                                "yearPlaceholder": "Select year",
                                "yearSelect": "Choose a year",
                              }
                            }
                            maxDate="2020-10-22T13:06:36.873Z"
                            mode="date"
                            nextIcon={
                              <span
                                className="ant-picker-next-icon"
                              />
                            }
                            onOk={null}
                            onPanelChange={[Function]}
                            onPickerValueChange={[Function]}
                            pickerRef={
                              Object {
                                "current": Object {
                                  "blur": [Function],
                                  "focus": [Function],
                                },
                              }
                            }
                            pickerValue={"2001-12-01T22:00:00.000Z"}
                            placeholder={
                              Array [
                                "Start date",
                                "End date",
                              ]
                            }
                            prefixCls="ant-picker"
                            prevIcon={
                              <span
                                className="ant-picker-prev-icon"
                              />
                            }
                            separator={
                              <span
                                aria-label="to"
                                className="ant-picker-separator"
                              >
                                <ForwardRef(SwapRightOutlined) />
                              </span>
                            }
                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                            superNextIcon={
                              <span
                                className="ant-picker-super-next-icon"
                              />
                            }
                            superPrevIcon={
                              <span
                                className="ant-picker-super-prev-icon"
                              />
                            }
                            tabIndex={-1}
                            transitionName="slide-up"
                            value={"2001-12-01T22:00:00.000Z"}
                          />
                        </Context.Provider>
                        <Context.Provider
                          value={
                            Object {
                              "hoverRangedValue": null,
                              "inRange": true,
                              "panelPosition": "right",
                              "rangedValue": Array [
                                "2001-12-01T22:00:00.000Z",
                                "2001-12-01T22:00:00.000Z",
                              ],
                            }
                          }
                        >
                          <PickerPanel
                            allowClear={true}
                            className="ant-picker-panel-focused"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            components={
                              Object {
                                "button": [Function],
                                "rangeItem": [Function],
                              }
                            }
                            dateFrom="02-12-2001"
                            dateRender={null}
                            dateTo="02-12-2001"
                            defaultValue={"2001-12-01T22:00:00.000Z"}
                            disabledDate={[Function]}
                            disabledTime={[Function]}
                            format="DD-MM-YYYY"
                            generateConfig={
                              Object {
                                "addDate": [Function],
                                "addMonth": [Function],
                                "addYear": [Function],
                                "getDate": [Function],
                                "getEndDate": [Function],
                                "getFixedDate": [Function],
                                "getHour": [Function],
                                "getMinute": [Function],
                                "getMonth": [Function],
                                "getNow": [Function],
                                "getSecond": [Function],
                                "getWeekDay": [Function],
                                "getYear": [Function],
                                "isAfter": [Function],
                                "isValidate": [Function],
                                "locale": Object {
                                  "format": [Function],
                                  "getShortMonths": [Function],
                                  "getShortWeekDays": [Function],
                                  "getWeek": [Function],
                                  "getWeekFirstDate": [Function],
                                  "getWeekFirstDay": [Function],
                                  "parse": [Function],
                                },
                                "setDate": [Function],
                                "setHour": [Function],
                                "setMinute": [Function],
                                "setMonth": [Function],
                                "setSecond": [Function],
                                "setYear": [Function],
                              }
                            }
                            inputReadOnly={true}
                            locale={
                              Object {
                                "backToToday": "Back to today",
                                "clear": "Clear",
                                "dateFormat": "M/D/YYYY",
                                "dateSelect": "select date",
                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                "dayFormat": "D",
                                "decadeSelect": "Choose a decade",
                                "locale": "en_US",
                                "month": "Month",
                                "monthBeforeYear": true,
                                "monthPlaceholder": "Select month",
                                "monthSelect": "Choose a month",
                                "nextCentury": "Next century",
                                "nextDecade": "Next decade",
                                "nextMonth": "Next month (PageDown)",
                                "nextYear": "Next year (Control + right)",
                                "now": "Now",
                                "ok": "Ok",
                                "placeholder": "Select date",
                                "previousCentury": "Last century",
                                "previousDecade": "Last decade",
                                "previousMonth": "Previous month (PageUp)",
                                "previousYear": "Last year (Control + left)",
                                "quarterPlaceholder": "Select quarter",
                                "rangeMonthPlaceholder": Array [
                                  "Start month",
                                  "End month",
                                ],
                                "rangePlaceholder": Array [
                                  "Start date",
                                  "End date",
                                ],
                                "rangeWeekPlaceholder": Array [
                                  "Start week",
                                  "End week",
                                ],
                                "rangeYearPlaceholder": Array [
                                  "Start year",
                                  "End year",
                                ],
                                "timeSelect": "select time",
                                "today": "Today",
                                "weekPlaceholder": "Select week",
                                "weekSelect": "Choose a week",
                                "year": "Year",
                                "yearFormat": "YYYY",
                                "yearPlaceholder": "Select year",
                                "yearSelect": "Choose a year",
                              }
                            }
                            maxDate="2020-10-22T13:06:36.873Z"
                            mode="date"
                            nextIcon={
                              <span
                                className="ant-picker-next-icon"
                              />
                            }
                            onOk={null}
                            onPanelChange={[Function]}
                            onPickerValueChange={[Function]}
                            pickerRef={
                              Object {
                                "current": Object {
                                  "blur": [Function],
                                  "focus": [Function],
                                },
                              }
                            }
                            pickerValue={"2002-01-01T22:00:00.000Z"}
                            placeholder={
                              Array [
                                "Start date",
                                "End date",
                              ]
                            }
                            prefixCls="ant-picker"
                            prevIcon={
                              <span
                                className="ant-picker-prev-icon"
                              />
                            }
                            separator={
                              <span
                                aria-label="to"
                                className="ant-picker-separator"
                              >
                                <ForwardRef(SwapRightOutlined) />
                              </span>
                            }
                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                            superNextIcon={
                              <span
                                className="ant-picker-super-next-icon"
                              />
                            }
                            superPrevIcon={
                              <span
                                className="ant-picker-super-prev-icon"
                              />
                            }
                            tabIndex={-1}
                            transitionName="slide-up"
                            value={"2001-12-01T22:00:00.000Z"}
                          />
                        </Context.Provider>
                      </React.Fragment>
                    </div>
                  </React.Fragment>
                </div>
              </div>
            }
            prefixCls="ant-picker"
            range={true}
            transitionName="slide-up"
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div
                  className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                  style={
                    Object {
                      "minWidth": 0,
                    }
                  }
                >
                  <div
                    className="ant-picker-range-arrow"
                    style={
                      Object {
                        "left": 0,
                      }
                    }
                  />
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                    style={
                      Object {
                        "marginLeft": 0,
                      }
                    }
                  >
                    <React.Fragment>
                      <div
                        className="ant-picker-panels"
                      >
                        <React.Fragment>
                          <Context.Provider
                            value={
                              Object {
                                "hoverRangedValue": null,
                                "inRange": true,
                                "panelPosition": "left",
                                "rangedValue": Array [
                                  "2001-12-01T22:00:00.000Z",
                                  "2001-12-01T22:00:00.000Z",
                                ],
                              }
                            }
                          >
                            <PickerPanel
                              allowClear={true}
                              className="ant-picker-panel-focused"
                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                              components={
                                Object {
                                  "button": [Function],
                                  "rangeItem": [Function],
                                }
                              }
                              dateFrom="02-12-2001"
                              dateRender={null}
                              dateTo="02-12-2001"
                              defaultValue={"2001-12-01T22:00:00.000Z"}
                              disabledDate={[Function]}
                              disabledTime={[Function]}
                              format="DD-MM-YYYY"
                              generateConfig={
                                Object {
                                  "addDate": [Function],
                                  "addMonth": [Function],
                                  "addYear": [Function],
                                  "getDate": [Function],
                                  "getEndDate": [Function],
                                  "getFixedDate": [Function],
                                  "getHour": [Function],
                                  "getMinute": [Function],
                                  "getMonth": [Function],
                                  "getNow": [Function],
                                  "getSecond": [Function],
                                  "getWeekDay": [Function],
                                  "getYear": [Function],
                                  "isAfter": [Function],
                                  "isValidate": [Function],
                                  "locale": Object {
                                    "format": [Function],
                                    "getShortMonths": [Function],
                                    "getShortWeekDays": [Function],
                                    "getWeek": [Function],
                                    "getWeekFirstDate": [Function],
                                    "getWeekFirstDay": [Function],
                                    "parse": [Function],
                                  },
                                  "setDate": [Function],
                                  "setHour": [Function],
                                  "setMinute": [Function],
                                  "setMonth": [Function],
                                  "setSecond": [Function],
                                  "setYear": [Function],
                                }
                              }
                              inputReadOnly={true}
                              locale={
                                Object {
                                  "backToToday": "Back to today",
                                  "clear": "Clear",
                                  "dateFormat": "M/D/YYYY",
                                  "dateSelect": "select date",
                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                  "dayFormat": "D",
                                  "decadeSelect": "Choose a decade",
                                  "locale": "en_US",
                                  "month": "Month",
                                  "monthBeforeYear": true,
                                  "monthPlaceholder": "Select month",
                                  "monthSelect": "Choose a month",
                                  "nextCentury": "Next century",
                                  "nextDecade": "Next decade",
                                  "nextMonth": "Next month (PageDown)",
                                  "nextYear": "Next year (Control + right)",
                                  "now": "Now",
                                  "ok": "Ok",
                                  "placeholder": "Select date",
                                  "previousCentury": "Last century",
                                  "previousDecade": "Last decade",
                                  "previousMonth": "Previous month (PageUp)",
                                  "previousYear": "Last year (Control + left)",
                                  "quarterPlaceholder": "Select quarter",
                                  "rangeMonthPlaceholder": Array [
                                    "Start month",
                                    "End month",
                                  ],
                                  "rangePlaceholder": Array [
                                    "Start date",
                                    "End date",
                                  ],
                                  "rangeWeekPlaceholder": Array [
                                    "Start week",
                                    "End week",
                                  ],
                                  "rangeYearPlaceholder": Array [
                                    "Start year",
                                    "End year",
                                  ],
                                  "timeSelect": "select time",
                                  "today": "Today",
                                  "weekPlaceholder": "Select week",
                                  "weekSelect": "Choose a week",
                                  "year": "Year",
                                  "yearFormat": "YYYY",
                                  "yearPlaceholder": "Select year",
                                  "yearSelect": "Choose a year",
                                }
                              }
                              maxDate="2020-10-22T13:06:36.873Z"
                              mode="date"
                              nextIcon={
                                <span
                                  className="ant-picker-next-icon"
                                />
                              }
                              onOk={null}
                              onPanelChange={[Function]}
                              onPickerValueChange={[Function]}
                              pickerRef={
                                Object {
                                  "current": Object {
                                    "blur": [Function],
                                    "focus": [Function],
                                  },
                                }
                              }
                              pickerValue={"2001-12-01T22:00:00.000Z"}
                              placeholder={
                                Array [
                                  "Start date",
                                  "End date",
                                ]
                              }
                              prefixCls="ant-picker"
                              prevIcon={
                                <span
                                  className="ant-picker-prev-icon"
                                />
                              }
                              separator={
                                <span
                                  aria-label="to"
                                  className="ant-picker-separator"
                                >
                                  <ForwardRef(SwapRightOutlined) />
                                </span>
                              }
                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                              superNextIcon={
                                <span
                                  className="ant-picker-super-next-icon"
                                />
                              }
                              superPrevIcon={
                                <span
                                  className="ant-picker-super-prev-icon"
                                />
                              }
                              tabIndex={-1}
                              transitionName="slide-up"
                              value={"2001-12-01T22:00:00.000Z"}
                            />
                          </Context.Provider>
                          <Context.Provider
                            value={
                              Object {
                                "hoverRangedValue": null,
                                "inRange": true,
                                "panelPosition": "right",
                                "rangedValue": Array [
                                  "2001-12-01T22:00:00.000Z",
                                  "2001-12-01T22:00:00.000Z",
                                ],
                              }
                            }
                          >
                            <PickerPanel
                              allowClear={true}
                              className="ant-picker-panel-focused"
                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                              components={
                                Object {
                                  "button": [Function],
                                  "rangeItem": [Function],
                                }
                              }
                              dateFrom="02-12-2001"
                              dateRender={null}
                              dateTo="02-12-2001"
                              defaultValue={"2001-12-01T22:00:00.000Z"}
                              disabledDate={[Function]}
                              disabledTime={[Function]}
                              format="DD-MM-YYYY"
                              generateConfig={
                                Object {
                                  "addDate": [Function],
                                  "addMonth": [Function],
                                  "addYear": [Function],
                                  "getDate": [Function],
                                  "getEndDate": [Function],
                                  "getFixedDate": [Function],
                                  "getHour": [Function],
                                  "getMinute": [Function],
                                  "getMonth": [Function],
                                  "getNow": [Function],
                                  "getSecond": [Function],
                                  "getWeekDay": [Function],
                                  "getYear": [Function],
                                  "isAfter": [Function],
                                  "isValidate": [Function],
                                  "locale": Object {
                                    "format": [Function],
                                    "getShortMonths": [Function],
                                    "getShortWeekDays": [Function],
                                    "getWeek": [Function],
                                    "getWeekFirstDate": [Function],
                                    "getWeekFirstDay": [Function],
                                    "parse": [Function],
                                  },
                                  "setDate": [Function],
                                  "setHour": [Function],
                                  "setMinute": [Function],
                                  "setMonth": [Function],
                                  "setSecond": [Function],
                                  "setYear": [Function],
                                }
                              }
                              inputReadOnly={true}
                              locale={
                                Object {
                                  "backToToday": "Back to today",
                                  "clear": "Clear",
                                  "dateFormat": "M/D/YYYY",
                                  "dateSelect": "select date",
                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                  "dayFormat": "D",
                                  "decadeSelect": "Choose a decade",
                                  "locale": "en_US",
                                  "month": "Month",
                                  "monthBeforeYear": true,
                                  "monthPlaceholder": "Select month",
                                  "monthSelect": "Choose a month",
                                  "nextCentury": "Next century",
                                  "nextDecade": "Next decade",
                                  "nextMonth": "Next month (PageDown)",
                                  "nextYear": "Next year (Control + right)",
                                  "now": "Now",
                                  "ok": "Ok",
                                  "placeholder": "Select date",
                                  "previousCentury": "Last century",
                                  "previousDecade": "Last decade",
                                  "previousMonth": "Previous month (PageUp)",
                                  "previousYear": "Last year (Control + left)",
                                  "quarterPlaceholder": "Select quarter",
                                  "rangeMonthPlaceholder": Array [
                                    "Start month",
                                    "End month",
                                  ],
                                  "rangePlaceholder": Array [
                                    "Start date",
                                    "End date",
                                  ],
                                  "rangeWeekPlaceholder": Array [
                                    "Start week",
                                    "End week",
                                  ],
                                  "rangeYearPlaceholder": Array [
                                    "Start year",
                                    "End year",
                                  ],
                                  "timeSelect": "select time",
                                  "today": "Today",
                                  "weekPlaceholder": "Select week",
                                  "weekSelect": "Choose a week",
                                  "year": "Year",
                                  "yearFormat": "YYYY",
                                  "yearPlaceholder": "Select year",
                                  "yearSelect": "Choose a year",
                                }
                              }
                              maxDate="2020-10-22T13:06:36.873Z"
                              mode="date"
                              nextIcon={
                                <span
                                  className="ant-picker-next-icon"
                                />
                              }
                              onOk={null}
                              onPanelChange={[Function]}
                              onPickerValueChange={[Function]}
                              pickerRef={
                                Object {
                                  "current": Object {
                                    "blur": [Function],
                                    "focus": [Function],
                                  },
                                }
                              }
                              pickerValue={"2002-01-01T22:00:00.000Z"}
                              placeholder={
                                Array [
                                  "Start date",
                                  "End date",
                                ]
                              }
                              prefixCls="ant-picker"
                              prevIcon={
                                <span
                                  className="ant-picker-prev-icon"
                                />
                              }
                              separator={
                                <span
                                  aria-label="to"
                                  className="ant-picker-separator"
                                >
                                  <ForwardRef(SwapRightOutlined) />
                                </span>
                              }
                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                              superNextIcon={
                                <span
                                  className="ant-picker-super-next-icon"
                                />
                              }
                              superPrevIcon={
                                <span
                                  className="ant-picker-super-prev-icon"
                                />
                              }
                              tabIndex={-1}
                              transitionName="slide-up"
                              value={"2001-12-01T22:00:00.000Z"}
                            />
                          </Context.Provider>
                        </React.Fragment>
                      </div>
                    </React.Fragment>
                  </div>
                </div>
              }
              popupAlign={Object {}}
              popupClassName="ant-picker-dropdown-range"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-picker-dropdown"
              showAction={Array []}
            >
              <div
                className="ant-picker ant-picker-range ant-picker-full-width"
                key="trigger"
                onClick={[Function]}
                onMouseDown={[Function]}
              >
                <div
                  className="ant-picker-input ant-picker-input-active"
                >
                  <input
                    autoComplete="off"
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="Start date"
                    readOnly={true}
                    size={12}
                    value="02-12-2001"
                  />
                </div>
                <div
                  className="ant-picker-range-separator"
                >
                  <span
                    aria-label="to"
                    className="ant-picker-separator"
                  >
                    <ForwardRef(SwapRightOutlined)>
                      <AntdIcon
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "0 0 1024 1024",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "swap-right",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="swap-right"
                          className="anticon anticon-swap-right"
                          role="img"
                        >
                          <IconReact
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "0 0 1024 1024",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "swap-right",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              data-icon="swap-right"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-swap-right"
                              viewBox="0 0 1024 1024"
                              width="1em"
                            >
                              <path
                                d="M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z"
                                key="svg-swap-right-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(SwapRightOutlined)>
                  </span>
                </div>
                <div
                  className="ant-picker-input"
                >
                  <input
                    autoComplete="off"
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="End date"
                    readOnly={true}
                    size={12}
                    value="02-12-2001"
                  />
                </div>
                <div
                  className="ant-picker-active-bar"
                  style={
                    Object {
                      "left": 0,
                      "position": "absolute",
                      "width": 0,
                    }
                  }
                />
                <span
                  className="ant-picker-suffix"
                >
                  <ForwardRef(CalendarOutlined)>
                    <AntdIcon
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "calendar",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="calendar"
                        className="anticon anticon-calendar"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "calendar",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="calendar"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-calendar"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                              key="svg-calendar-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(CalendarOutlined)>
                </span>
                <span
                  className="ant-picker-clear"
                  onMouseDown={[Function]}
                  onMouseUp={[Function]}
                >
                  <ForwardRef(CloseCircleFilled)>
                    <AntdIcon
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "close-circle",
                          "theme": "filled",
                        }
                      }
                    >
                      <span
                        aria-label="close-circle"
                        className="anticon anticon-close-circle"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "close-circle",
                              "theme": "filled",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="close-circle"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-close-circle"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                              key="svg-close-circle-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(CloseCircleFilled)>
                </span>
              </div>
            </Trigger>
          </PickerTrigger>
        </InnerRangePicker>
      </RangePicker>
    </LocaleReceiver>
  </RangePicker>
</DateRangePicker>
`;

exports[` DateRangePicker component DateRangePicker trigger onChange with mock 1`] = `
<DateRangePicker
  dateFrom="02-12-2001"
  dateTo="02-12-2001"
  format="DD-MM-YYYY"
  fullWidth={true}
  inputReadOnly={true}
  maxDate="2020-10-22T13:06:36.873Z"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            "2020-10-22T13:06:36.873Z",
            "2020-11-22T13:06:36.873Z",
          ],
          undefined,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  useDefaultPreset={false}
>
  <RangePicker
    className="ant-picker-full-width"
    dateFrom="02-12-2001"
    dateTo="02-12-2001"
    disabledDate={[Function]}
    format="DD-MM-YYYY"
    inputReadOnly={true}
    maxDate="2020-10-22T13:06:36.873Z"
    onChange={[Function]}
    value={
      Array [
        "2001-12-01T22:00:00.000Z",
        "2001-12-01T22:00:00.000Z",
      ]
    }
  >
    <LocaleReceiver
      componentName="DatePicker"
      defaultLocale={[Function]}
    >
      <RangePicker
        allowClear={true}
        className="ant-picker-full-width"
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        components={
          Object {
            "button": [Function],
            "rangeItem": [Function],
          }
        }
        dateFrom="02-12-2001"
        dateTo="02-12-2001"
        disabledDate={[Function]}
        format="DD-MM-YYYY"
        generateConfig={
          Object {
            "addDate": [Function],
            "addMonth": [Function],
            "addYear": [Function],
            "getDate": [Function],
            "getEndDate": [Function],
            "getFixedDate": [Function],
            "getHour": [Function],
            "getMinute": [Function],
            "getMonth": [Function],
            "getNow": [Function],
            "getSecond": [Function],
            "getWeekDay": [Function],
            "getYear": [Function],
            "isAfter": [Function],
            "isValidate": [Function],
            "locale": Object {
              "format": [Function],
              "getShortMonths": [Function],
              "getShortWeekDays": [Function],
              "getWeek": [Function],
              "getWeekFirstDate": [Function],
              "getWeekFirstDay": [Function],
              "parse": [Function],
            },
            "setDate": [Function],
            "setHour": [Function],
            "setMinute": [Function],
            "setMonth": [Function],
            "setSecond": [Function],
            "setYear": [Function],
          }
        }
        inputReadOnly={true}
        locale={
          Object {
            "backToToday": "Back to today",
            "clear": "Clear",
            "dateFormat": "M/D/YYYY",
            "dateSelect": "select date",
            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
            "dayFormat": "D",
            "decadeSelect": "Choose a decade",
            "locale": "en_US",
            "month": "Month",
            "monthBeforeYear": true,
            "monthPlaceholder": "Select month",
            "monthSelect": "Choose a month",
            "nextCentury": "Next century",
            "nextDecade": "Next decade",
            "nextMonth": "Next month (PageDown)",
            "nextYear": "Next year (Control + right)",
            "now": "Now",
            "ok": "Ok",
            "placeholder": "Select date",
            "previousCentury": "Last century",
            "previousDecade": "Last decade",
            "previousMonth": "Previous month (PageUp)",
            "previousYear": "Last year (Control + left)",
            "quarterPlaceholder": "Select quarter",
            "rangeMonthPlaceholder": Array [
              "Start month",
              "End month",
            ],
            "rangePlaceholder": Array [
              "Start date",
              "End date",
            ],
            "rangeWeekPlaceholder": Array [
              "Start week",
              "End week",
            ],
            "rangeYearPlaceholder": Array [
              "Start year",
              "End year",
            ],
            "timeSelect": "select time",
            "today": "Today",
            "weekPlaceholder": "Select week",
            "weekSelect": "Choose a week",
            "year": "Year",
            "yearFormat": "YYYY",
            "yearPlaceholder": "Select year",
            "yearSelect": "Choose a year",
          }
        }
        maxDate="2020-10-22T13:06:36.873Z"
        nextIcon={
          <span
            className="ant-picker-next-icon"
          />
        }
        onChange={[Function]}
        placeholder={
          Array [
            "Start date",
            "End date",
          ]
        }
        prefixCls="ant-picker"
        prevIcon={
          <span
            className="ant-picker-prev-icon"
          />
        }
        separator={
          <span
            aria-label="to"
            className="ant-picker-separator"
          >
            <ForwardRef(SwapRightOutlined) />
          </span>
        }
        suffixIcon={<ForwardRef(CalendarOutlined) />}
        superNextIcon={
          <span
            className="ant-picker-super-next-icon"
          />
        }
        superPrevIcon={
          <span
            className="ant-picker-super-prev-icon"
          />
        }
        transitionName="slide-up"
        value={
          Array [
            "2001-12-01T22:00:00.000Z",
            "2001-12-01T22:00:00.000Z",
          ]
        }
      >
        <InnerRangePicker
          allowClear={true}
          className="ant-picker-full-width"
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          dateFrom="02-12-2001"
          dateTo="02-12-2001"
          disabledDate={[Function]}
          format="DD-MM-YYYY"
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getEndDate": [Function],
              "getFixedDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDate": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          inputReadOnly={true}
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          maxDate="2020-10-22T13:06:36.873Z"
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          pickerRef={
            Object {
              "current": Object {
                "blur": [Function],
                "focus": [Function],
              },
            }
          }
          placeholder={
            Array [
              "Start date",
              "End date",
            ]
          }
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          separator={
            <span
              aria-label="to"
              className="ant-picker-separator"
            >
              <ForwardRef(SwapRightOutlined) />
            </span>
          }
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
          value={
            Array [
              "2001-12-01T22:00:00.000Z",
              "2001-12-01T22:00:00.000Z",
            ]
          }
        >
          <PickerTrigger
            popupElement={
              <div
                className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                style={
                  Object {
                    "minWidth": 0,
                  }
                }
              >
                <div
                  className="ant-picker-range-arrow"
                  style={
                    Object {
                      "left": 0,
                    }
                  }
                />
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "marginLeft": 0,
                    }
                  }
                >
                  <React.Fragment>
                    <div
                      className="ant-picker-panels"
                    >
                      <React.Fragment>
                        <Context.Provider
                          value={
                            Object {
                              "hoverRangedValue": null,
                              "inRange": true,
                              "panelPosition": "left",
                              "rangedValue": Array [
                                "2001-12-01T22:00:00.000Z",
                                "2001-12-01T22:00:00.000Z",
                              ],
                            }
                          }
                        >
                          <PickerPanel
                            allowClear={true}
                            className="ant-picker-panel-focused"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            components={
                              Object {
                                "button": [Function],
                                "rangeItem": [Function],
                              }
                            }
                            dateFrom="02-12-2001"
                            dateRender={null}
                            dateTo="02-12-2001"
                            defaultValue={"2001-12-01T22:00:00.000Z"}
                            disabledDate={[Function]}
                            disabledTime={[Function]}
                            format="DD-MM-YYYY"
                            generateConfig={
                              Object {
                                "addDate": [Function],
                                "addMonth": [Function],
                                "addYear": [Function],
                                "getDate": [Function],
                                "getEndDate": [Function],
                                "getFixedDate": [Function],
                                "getHour": [Function],
                                "getMinute": [Function],
                                "getMonth": [Function],
                                "getNow": [Function],
                                "getSecond": [Function],
                                "getWeekDay": [Function],
                                "getYear": [Function],
                                "isAfter": [Function],
                                "isValidate": [Function],
                                "locale": Object {
                                  "format": [Function],
                                  "getShortMonths": [Function],
                                  "getShortWeekDays": [Function],
                                  "getWeek": [Function],
                                  "getWeekFirstDate": [Function],
                                  "getWeekFirstDay": [Function],
                                  "parse": [Function],
                                },
                                "setDate": [Function],
                                "setHour": [Function],
                                "setMinute": [Function],
                                "setMonth": [Function],
                                "setSecond": [Function],
                                "setYear": [Function],
                              }
                            }
                            inputReadOnly={true}
                            locale={
                              Object {
                                "backToToday": "Back to today",
                                "clear": "Clear",
                                "dateFormat": "M/D/YYYY",
                                "dateSelect": "select date",
                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                "dayFormat": "D",
                                "decadeSelect": "Choose a decade",
                                "locale": "en_US",
                                "month": "Month",
                                "monthBeforeYear": true,
                                "monthPlaceholder": "Select month",
                                "monthSelect": "Choose a month",
                                "nextCentury": "Next century",
                                "nextDecade": "Next decade",
                                "nextMonth": "Next month (PageDown)",
                                "nextYear": "Next year (Control + right)",
                                "now": "Now",
                                "ok": "Ok",
                                "placeholder": "Select date",
                                "previousCentury": "Last century",
                                "previousDecade": "Last decade",
                                "previousMonth": "Previous month (PageUp)",
                                "previousYear": "Last year (Control + left)",
                                "quarterPlaceholder": "Select quarter",
                                "rangeMonthPlaceholder": Array [
                                  "Start month",
                                  "End month",
                                ],
                                "rangePlaceholder": Array [
                                  "Start date",
                                  "End date",
                                ],
                                "rangeWeekPlaceholder": Array [
                                  "Start week",
                                  "End week",
                                ],
                                "rangeYearPlaceholder": Array [
                                  "Start year",
                                  "End year",
                                ],
                                "timeSelect": "select time",
                                "today": "Today",
                                "weekPlaceholder": "Select week",
                                "weekSelect": "Choose a week",
                                "year": "Year",
                                "yearFormat": "YYYY",
                                "yearPlaceholder": "Select year",
                                "yearSelect": "Choose a year",
                              }
                            }
                            maxDate="2020-10-22T13:06:36.873Z"
                            mode="date"
                            nextIcon={
                              <span
                                className="ant-picker-next-icon"
                              />
                            }
                            onOk={null}
                            onPanelChange={[Function]}
                            onPickerValueChange={[Function]}
                            pickerRef={
                              Object {
                                "current": Object {
                                  "blur": [Function],
                                  "focus": [Function],
                                },
                              }
                            }
                            pickerValue={"2001-12-01T22:00:00.000Z"}
                            placeholder={
                              Array [
                                "Start date",
                                "End date",
                              ]
                            }
                            prefixCls="ant-picker"
                            prevIcon={
                              <span
                                className="ant-picker-prev-icon"
                              />
                            }
                            separator={
                              <span
                                aria-label="to"
                                className="ant-picker-separator"
                              >
                                <ForwardRef(SwapRightOutlined) />
                              </span>
                            }
                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                            superNextIcon={
                              <span
                                className="ant-picker-super-next-icon"
                              />
                            }
                            superPrevIcon={
                              <span
                                className="ant-picker-super-prev-icon"
                              />
                            }
                            tabIndex={-1}
                            transitionName="slide-up"
                            value={"2001-12-01T22:00:00.000Z"}
                          />
                        </Context.Provider>
                        <Context.Provider
                          value={
                            Object {
                              "hoverRangedValue": null,
                              "inRange": true,
                              "panelPosition": "right",
                              "rangedValue": Array [
                                "2001-12-01T22:00:00.000Z",
                                "2001-12-01T22:00:00.000Z",
                              ],
                            }
                          }
                        >
                          <PickerPanel
                            allowClear={true}
                            className="ant-picker-panel-focused"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            components={
                              Object {
                                "button": [Function],
                                "rangeItem": [Function],
                              }
                            }
                            dateFrom="02-12-2001"
                            dateRender={null}
                            dateTo="02-12-2001"
                            defaultValue={"2001-12-01T22:00:00.000Z"}
                            disabledDate={[Function]}
                            disabledTime={[Function]}
                            format="DD-MM-YYYY"
                            generateConfig={
                              Object {
                                "addDate": [Function],
                                "addMonth": [Function],
                                "addYear": [Function],
                                "getDate": [Function],
                                "getEndDate": [Function],
                                "getFixedDate": [Function],
                                "getHour": [Function],
                                "getMinute": [Function],
                                "getMonth": [Function],
                                "getNow": [Function],
                                "getSecond": [Function],
                                "getWeekDay": [Function],
                                "getYear": [Function],
                                "isAfter": [Function],
                                "isValidate": [Function],
                                "locale": Object {
                                  "format": [Function],
                                  "getShortMonths": [Function],
                                  "getShortWeekDays": [Function],
                                  "getWeek": [Function],
                                  "getWeekFirstDate": [Function],
                                  "getWeekFirstDay": [Function],
                                  "parse": [Function],
                                },
                                "setDate": [Function],
                                "setHour": [Function],
                                "setMinute": [Function],
                                "setMonth": [Function],
                                "setSecond": [Function],
                                "setYear": [Function],
                              }
                            }
                            inputReadOnly={true}
                            locale={
                              Object {
                                "backToToday": "Back to today",
                                "clear": "Clear",
                                "dateFormat": "M/D/YYYY",
                                "dateSelect": "select date",
                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                "dayFormat": "D",
                                "decadeSelect": "Choose a decade",
                                "locale": "en_US",
                                "month": "Month",
                                "monthBeforeYear": true,
                                "monthPlaceholder": "Select month",
                                "monthSelect": "Choose a month",
                                "nextCentury": "Next century",
                                "nextDecade": "Next decade",
                                "nextMonth": "Next month (PageDown)",
                                "nextYear": "Next year (Control + right)",
                                "now": "Now",
                                "ok": "Ok",
                                "placeholder": "Select date",
                                "previousCentury": "Last century",
                                "previousDecade": "Last decade",
                                "previousMonth": "Previous month (PageUp)",
                                "previousYear": "Last year (Control + left)",
                                "quarterPlaceholder": "Select quarter",
                                "rangeMonthPlaceholder": Array [
                                  "Start month",
                                  "End month",
                                ],
                                "rangePlaceholder": Array [
                                  "Start date",
                                  "End date",
                                ],
                                "rangeWeekPlaceholder": Array [
                                  "Start week",
                                  "End week",
                                ],
                                "rangeYearPlaceholder": Array [
                                  "Start year",
                                  "End year",
                                ],
                                "timeSelect": "select time",
                                "today": "Today",
                                "weekPlaceholder": "Select week",
                                "weekSelect": "Choose a week",
                                "year": "Year",
                                "yearFormat": "YYYY",
                                "yearPlaceholder": "Select year",
                                "yearSelect": "Choose a year",
                              }
                            }
                            maxDate="2020-10-22T13:06:36.873Z"
                            mode="date"
                            nextIcon={
                              <span
                                className="ant-picker-next-icon"
                              />
                            }
                            onOk={null}
                            onPanelChange={[Function]}
                            onPickerValueChange={[Function]}
                            pickerRef={
                              Object {
                                "current": Object {
                                  "blur": [Function],
                                  "focus": [Function],
                                },
                              }
                            }
                            pickerValue={"2002-01-01T22:00:00.000Z"}
                            placeholder={
                              Array [
                                "Start date",
                                "End date",
                              ]
                            }
                            prefixCls="ant-picker"
                            prevIcon={
                              <span
                                className="ant-picker-prev-icon"
                              />
                            }
                            separator={
                              <span
                                aria-label="to"
                                className="ant-picker-separator"
                              >
                                <ForwardRef(SwapRightOutlined) />
                              </span>
                            }
                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                            superNextIcon={
                              <span
                                className="ant-picker-super-next-icon"
                              />
                            }
                            superPrevIcon={
                              <span
                                className="ant-picker-super-prev-icon"
                              />
                            }
                            tabIndex={-1}
                            transitionName="slide-up"
                            value={"2001-12-01T22:00:00.000Z"}
                          />
                        </Context.Provider>
                      </React.Fragment>
                    </div>
                  </React.Fragment>
                </div>
              </div>
            }
            prefixCls="ant-picker"
            range={true}
            transitionName="slide-up"
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              autoDestroy={false}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <div
                  className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                  style={
                    Object {
                      "minWidth": 0,
                    }
                  }
                >
                  <div
                    className="ant-picker-range-arrow"
                    style={
                      Object {
                        "left": 0,
                      }
                    }
                  />
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                    style={
                      Object {
                        "marginLeft": 0,
                      }
                    }
                  >
                    <React.Fragment>
                      <div
                        className="ant-picker-panels"
                      >
                        <React.Fragment>
                          <Context.Provider
                            value={
                              Object {
                                "hoverRangedValue": null,
                                "inRange": true,
                                "panelPosition": "left",
                                "rangedValue": Array [
                                  "2001-12-01T22:00:00.000Z",
                                  "2001-12-01T22:00:00.000Z",
                                ],
                              }
                            }
                          >
                            <PickerPanel
                              allowClear={true}
                              className="ant-picker-panel-focused"
                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                              components={
                                Object {
                                  "button": [Function],
                                  "rangeItem": [Function],
                                }
                              }
                              dateFrom="02-12-2001"
                              dateRender={null}
                              dateTo="02-12-2001"
                              defaultValue={"2001-12-01T22:00:00.000Z"}
                              disabledDate={[Function]}
                              disabledTime={[Function]}
                              format="DD-MM-YYYY"
                              generateConfig={
                                Object {
                                  "addDate": [Function],
                                  "addMonth": [Function],
                                  "addYear": [Function],
                                  "getDate": [Function],
                                  "getEndDate": [Function],
                                  "getFixedDate": [Function],
                                  "getHour": [Function],
                                  "getMinute": [Function],
                                  "getMonth": [Function],
                                  "getNow": [Function],
                                  "getSecond": [Function],
                                  "getWeekDay": [Function],
                                  "getYear": [Function],
                                  "isAfter": [Function],
                                  "isValidate": [Function],
                                  "locale": Object {
                                    "format": [Function],
                                    "getShortMonths": [Function],
                                    "getShortWeekDays": [Function],
                                    "getWeek": [Function],
                                    "getWeekFirstDate": [Function],
                                    "getWeekFirstDay": [Function],
                                    "parse": [Function],
                                  },
                                  "setDate": [Function],
                                  "setHour": [Function],
                                  "setMinute": [Function],
                                  "setMonth": [Function],
                                  "setSecond": [Function],
                                  "setYear": [Function],
                                }
                              }
                              inputReadOnly={true}
                              locale={
                                Object {
                                  "backToToday": "Back to today",
                                  "clear": "Clear",
                                  "dateFormat": "M/D/YYYY",
                                  "dateSelect": "select date",
                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                  "dayFormat": "D",
                                  "decadeSelect": "Choose a decade",
                                  "locale": "en_US",
                                  "month": "Month",
                                  "monthBeforeYear": true,
                                  "monthPlaceholder": "Select month",
                                  "monthSelect": "Choose a month",
                                  "nextCentury": "Next century",
                                  "nextDecade": "Next decade",
                                  "nextMonth": "Next month (PageDown)",
                                  "nextYear": "Next year (Control + right)",
                                  "now": "Now",
                                  "ok": "Ok",
                                  "placeholder": "Select date",
                                  "previousCentury": "Last century",
                                  "previousDecade": "Last decade",
                                  "previousMonth": "Previous month (PageUp)",
                                  "previousYear": "Last year (Control + left)",
                                  "quarterPlaceholder": "Select quarter",
                                  "rangeMonthPlaceholder": Array [
                                    "Start month",
                                    "End month",
                                  ],
                                  "rangePlaceholder": Array [
                                    "Start date",
                                    "End date",
                                  ],
                                  "rangeWeekPlaceholder": Array [
                                    "Start week",
                                    "End week",
                                  ],
                                  "rangeYearPlaceholder": Array [
                                    "Start year",
                                    "End year",
                                  ],
                                  "timeSelect": "select time",
                                  "today": "Today",
                                  "weekPlaceholder": "Select week",
                                  "weekSelect": "Choose a week",
                                  "year": "Year",
                                  "yearFormat": "YYYY",
                                  "yearPlaceholder": "Select year",
                                  "yearSelect": "Choose a year",
                                }
                              }
                              maxDate="2020-10-22T13:06:36.873Z"
                              mode="date"
                              nextIcon={
                                <span
                                  className="ant-picker-next-icon"
                                />
                              }
                              onOk={null}
                              onPanelChange={[Function]}
                              onPickerValueChange={[Function]}
                              pickerRef={
                                Object {
                                  "current": Object {
                                    "blur": [Function],
                                    "focus": [Function],
                                  },
                                }
                              }
                              pickerValue={"2001-12-01T22:00:00.000Z"}
                              placeholder={
                                Array [
                                  "Start date",
                                  "End date",
                                ]
                              }
                              prefixCls="ant-picker"
                              prevIcon={
                                <span
                                  className="ant-picker-prev-icon"
                                />
                              }
                              separator={
                                <span
                                  aria-label="to"
                                  className="ant-picker-separator"
                                >
                                  <ForwardRef(SwapRightOutlined) />
                                </span>
                              }
                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                              superNextIcon={
                                <span
                                  className="ant-picker-super-next-icon"
                                />
                              }
                              superPrevIcon={
                                <span
                                  className="ant-picker-super-prev-icon"
                                />
                              }
                              tabIndex={-1}
                              transitionName="slide-up"
                              value={"2001-12-01T22:00:00.000Z"}
                            />
                          </Context.Provider>
                          <Context.Provider
                            value={
                              Object {
                                "hoverRangedValue": null,
                                "inRange": true,
                                "panelPosition": "right",
                                "rangedValue": Array [
                                  "2001-12-01T22:00:00.000Z",
                                  "2001-12-01T22:00:00.000Z",
                                ],
                              }
                            }
                          >
                            <PickerPanel
                              allowClear={true}
                              className="ant-picker-panel-focused"
                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                              components={
                                Object {
                                  "button": [Function],
                                  "rangeItem": [Function],
                                }
                              }
                              dateFrom="02-12-2001"
                              dateRender={null}
                              dateTo="02-12-2001"
                              defaultValue={"2001-12-01T22:00:00.000Z"}
                              disabledDate={[Function]}
                              disabledTime={[Function]}
                              format="DD-MM-YYYY"
                              generateConfig={
                                Object {
                                  "addDate": [Function],
                                  "addMonth": [Function],
                                  "addYear": [Function],
                                  "getDate": [Function],
                                  "getEndDate": [Function],
                                  "getFixedDate": [Function],
                                  "getHour": [Function],
                                  "getMinute": [Function],
                                  "getMonth": [Function],
                                  "getNow": [Function],
                                  "getSecond": [Function],
                                  "getWeekDay": [Function],
                                  "getYear": [Function],
                                  "isAfter": [Function],
                                  "isValidate": [Function],
                                  "locale": Object {
                                    "format": [Function],
                                    "getShortMonths": [Function],
                                    "getShortWeekDays": [Function],
                                    "getWeek": [Function],
                                    "getWeekFirstDate": [Function],
                                    "getWeekFirstDay": [Function],
                                    "parse": [Function],
                                  },
                                  "setDate": [Function],
                                  "setHour": [Function],
                                  "setMinute": [Function],
                                  "setMonth": [Function],
                                  "setSecond": [Function],
                                  "setYear": [Function],
                                }
                              }
                              inputReadOnly={true}
                              locale={
                                Object {
                                  "backToToday": "Back to today",
                                  "clear": "Clear",
                                  "dateFormat": "M/D/YYYY",
                                  "dateSelect": "select date",
                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                  "dayFormat": "D",
                                  "decadeSelect": "Choose a decade",
                                  "locale": "en_US",
                                  "month": "Month",
                                  "monthBeforeYear": true,
                                  "monthPlaceholder": "Select month",
                                  "monthSelect": "Choose a month",
                                  "nextCentury": "Next century",
                                  "nextDecade": "Next decade",
                                  "nextMonth": "Next month (PageDown)",
                                  "nextYear": "Next year (Control + right)",
                                  "now": "Now",
                                  "ok": "Ok",
                                  "placeholder": "Select date",
                                  "previousCentury": "Last century",
                                  "previousDecade": "Last decade",
                                  "previousMonth": "Previous month (PageUp)",
                                  "previousYear": "Last year (Control + left)",
                                  "quarterPlaceholder": "Select quarter",
                                  "rangeMonthPlaceholder": Array [
                                    "Start month",
                                    "End month",
                                  ],
                                  "rangePlaceholder": Array [
                                    "Start date",
                                    "End date",
                                  ],
                                  "rangeWeekPlaceholder": Array [
                                    "Start week",
                                    "End week",
                                  ],
                                  "rangeYearPlaceholder": Array [
                                    "Start year",
                                    "End year",
                                  ],
                                  "timeSelect": "select time",
                                  "today": "Today",
                                  "weekPlaceholder": "Select week",
                                  "weekSelect": "Choose a week",
                                  "year": "Year",
                                  "yearFormat": "YYYY",
                                  "yearPlaceholder": "Select year",
                                  "yearSelect": "Choose a year",
                                }
                              }
                              maxDate="2020-10-22T13:06:36.873Z"
                              mode="date"
                              nextIcon={
                                <span
                                  className="ant-picker-next-icon"
                                />
                              }
                              onOk={null}
                              onPanelChange={[Function]}
                              onPickerValueChange={[Function]}
                              pickerRef={
                                Object {
                                  "current": Object {
                                    "blur": [Function],
                                    "focus": [Function],
                                  },
                                }
                              }
                              pickerValue={"2002-01-01T22:00:00.000Z"}
                              placeholder={
                                Array [
                                  "Start date",
                                  "End date",
                                ]
                              }
                              prefixCls="ant-picker"
                              prevIcon={
                                <span
                                  className="ant-picker-prev-icon"
                                />
                              }
                              separator={
                                <span
                                  aria-label="to"
                                  className="ant-picker-separator"
                                >
                                  <ForwardRef(SwapRightOutlined) />
                                </span>
                              }
                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                              superNextIcon={
                                <span
                                  className="ant-picker-super-next-icon"
                                />
                              }
                              superPrevIcon={
                                <span
                                  className="ant-picker-super-prev-icon"
                                />
                              }
                              tabIndex={-1}
                              transitionName="slide-up"
                              value={"2001-12-01T22:00:00.000Z"}
                            />
                          </Context.Provider>
                        </React.Fragment>
                      </div>
                    </React.Fragment>
                  </div>
                </div>
              }
              popupAlign={Object {}}
              popupClassName="ant-picker-dropdown-range"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-picker-dropdown"
              showAction={Array []}
            >
              <div
                className="ant-picker ant-picker-range ant-picker-full-width"
                key="trigger"
                onClick={[Function]}
                onMouseDown={[Function]}
              >
                <div
                  className="ant-picker-input ant-picker-input-active"
                >
                  <input
                    autoComplete="off"
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="Start date"
                    readOnly={true}
                    size={12}
                    value="02-12-2001"
                  />
                </div>
                <div
                  className="ant-picker-range-separator"
                >
                  <span
                    aria-label="to"
                    className="ant-picker-separator"
                  >
                    <ForwardRef(SwapRightOutlined)>
                      <AntdIcon
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "0 0 1024 1024",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "swap-right",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="swap-right"
                          className="anticon anticon-swap-right"
                          role="img"
                        >
                          <IconReact
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "0 0 1024 1024",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "swap-right",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              data-icon="swap-right"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-swap-right"
                              viewBox="0 0 1024 1024"
                              width="1em"
                            >
                              <path
                                d="M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z"
                                key="svg-swap-right-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(SwapRightOutlined)>
                  </span>
                </div>
                <div
                  className="ant-picker-input"
                >
                  <input
                    autoComplete="off"
                    disabled={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    placeholder="End date"
                    readOnly={true}
                    size={12}
                    value="02-12-2001"
                  />
                </div>
                <div
                  className="ant-picker-active-bar"
                  style={
                    Object {
                      "left": 0,
                      "position": "absolute",
                      "width": 0,
                    }
                  }
                />
                <span
                  className="ant-picker-suffix"
                >
                  <ForwardRef(CalendarOutlined)>
                    <AntdIcon
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "calendar",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="calendar"
                        className="anticon anticon-calendar"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "calendar",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="calendar"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-calendar"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                              key="svg-calendar-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(CalendarOutlined)>
                </span>
                <span
                  className="ant-picker-clear"
                  onMouseDown={[Function]}
                  onMouseUp={[Function]}
                >
                  <ForwardRef(CloseCircleFilled)>
                    <AntdIcon
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "close-circle",
                          "theme": "filled",
                        }
                      }
                    >
                      <span
                        aria-label="close-circle"
                        className="anticon anticon-close-circle"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "close-circle",
                              "theme": "filled",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="close-circle"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-close-circle"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                              key="svg-close-circle-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(CloseCircleFilled)>
                </span>
              </div>
            </Trigger>
          </PickerTrigger>
        </InnerRangePicker>
      </RangePicker>
    </LocaleReceiver>
  </RangePicker>
</DateRangePicker>
`;
