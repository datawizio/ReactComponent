// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PeriodSelect should render correctly 1`] = `
<PeriodSelect
  clientDate="2021-06-29"
  clientStartDate="2020-01-01"
  dateConfig={
    Object {
      "datePicker": Object {
        "endDate": "2021-06-09",
        "startDate": "2021-06-03",
      },
      "prevDatePicker": Object {
        "endDate": "2021-06-02",
        "startDate": "2021-05-07",
      },
      "selectedPeriod": "last_7_days",
      "selectedPrevPeriod": "previous",
    }
  }
  format="DD-MM-YYYY"
  limitMaxDate={false}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "datePicker": Object {
              "endDate": "2021-06-09",
              "startDate": "2021-06-03",
            },
            "prevDatePicker": Object {
              "endDate": "2021-06-02",
              "startDate": "2021-05-07",
            },
            "selectedPeriod": "last_7_days",
            "selectedPrevPeriod": "previous",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  periodLabel="SELECT_PERIOD"
  prevPeriodLabel="SELECT_PREV_PERIOD"
  type="iso-8601"
>
  <div
    className="period-picker-wrapper"
  >
    <div
      className="period-container"
    >
      <span
        className="period-title"
      >
        SELECT_PERIOD
      </span>
      <ForwardRef(InternalSelect)
        onChange={[Function]}
        value="last_7_days"
      >
        <Select
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          dropdownClassName=""
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          menuItemSelectedIcon={null}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          onChange={[Function]}
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
          value="last_7_days"
        >
          <ForwardRef(Select)
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            dropdownClassName=""
            inputIcon={[Function]}
            listHeight={256}
            listItemHeight={24}
            menuItemSelectedIcon={null}
            notFoundContent={
              <Context.Consumer>
                [Function]
              </Context.Consumer>
            }
            onChange={[Function]}
            prefixCls="ant-select"
            removeIcon={<ForwardRef(CloseOutlined) />}
            transitionName="slide-up"
            value="last_7_days"
          >
            <div
              className="ant-select ant-select-single ant-select-show-arrow"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
            >
              <SelectTrigger
                containerWidth={null}
                dropdownClassName=""
                empty={false}
                getTriggerDOMNode={[Function]}
                popupElement={
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "LAST_UPDATE_DATE",
                            "key": "0",
                            "value": "last_update_date",
                          },
                          "groupOption": false,
                          "key": "0",
                        },
                        Object {
                          "data": Object {
                            "children": "PENULTIMATE_UPDATE_DATE",
                            "key": "1",
                            "value": "penultimate_update_date",
                          },
                          "groupOption": false,
                          "key": "1",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_7_DAYS",
                            "key": "2",
                            "value": "last_7_days",
                          },
                          "groupOption": false,
                          "key": "2",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_WEEK",
                            "key": "3",
                            "value": "prev_week",
                          },
                          "groupOption": false,
                          "key": "3",
                        },
                        Object {
                          "data": Object {
                            "children": "WEEK_BEGIN",
                            "key": "4",
                            "value": "week_begin",
                          },
                          "groupOption": false,
                          "key": "4",
                        },
                        Object {
                          "data": Object {
                            "children": "MONTH_BEGIN",
                            "key": "5",
                            "value": "month_begin",
                          },
                          "groupOption": false,
                          "key": "5",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_MONTH",
                            "key": "6",
                            "value": "prev_month",
                          },
                          "groupOption": false,
                          "key": "6",
                        },
                        Object {
                          "data": Object {
                            "children": "SEASON_BEGIN",
                            "key": "7",
                            "value": "season_begin",
                          },
                          "groupOption": false,
                          "key": "7",
                        },
                        Object {
                          "data": Object {
                            "children": "YEAR_BEGIN",
                            "key": "8",
                            "value": "year_begin",
                          },
                          "groupOption": false,
                          "key": "8",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_30_DAYS",
                            "key": "9",
                            "value": "last_30_days",
                          },
                          "groupOption": false,
                          "key": "9",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_90_DAYS",
                            "key": "10",
                            "value": "last_90_days",
                          },
                          "groupOption": false,
                          "key": "10",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_180_DAYS",
                            "key": "11",
                            "value": "last_180_days",
                          },
                          "groupOption": false,
                          "key": "11",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_365_DAYS",
                            "key": "12",
                            "value": "last_365_days",
                          },
                          "groupOption": false,
                          "key": "12",
                        },
                        Object {
                          "data": Object {
                            "children": "ALL_TIME",
                            "key": "13",
                            "value": "all_time",
                          },
                          "groupOption": false,
                          "key": "13",
                        },
                        Object {
                          "data": Object {
                            "children": "SET_DATE",
                            "key": "14",
                            "value": "date",
                          },
                          "groupOption": false,
                          "key": "14",
                        },
                      ]
                    }
                    height={256}
                    id="rc_select_TEST_OR_SSR"
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "LAST_UPDATE_DATE",
                          "key": "0",
                          "value": "last_update_date",
                        },
                        Object {
                          "children": "PENULTIMATE_UPDATE_DATE",
                          "key": "1",
                          "value": "penultimate_update_date",
                        },
                        Object {
                          "children": "LAST_7_DAYS",
                          "key": "2",
                          "value": "last_7_days",
                        },
                        Object {
                          "children": "PREV_WEEK",
                          "key": "3",
                          "value": "prev_week",
                        },
                        Object {
                          "children": "WEEK_BEGIN",
                          "key": "4",
                          "value": "week_begin",
                        },
                        Object {
                          "children": "MONTH_BEGIN",
                          "key": "5",
                          "value": "month_begin",
                        },
                        Object {
                          "children": "PREV_MONTH",
                          "key": "6",
                          "value": "prev_month",
                        },
                        Object {
                          "children": "SEASON_BEGIN",
                          "key": "7",
                          "value": "season_begin",
                        },
                        Object {
                          "children": "YEAR_BEGIN",
                          "key": "8",
                          "value": "year_begin",
                        },
                        Object {
                          "children": "LAST_30_DAYS",
                          "key": "9",
                          "value": "last_30_days",
                        },
                        Object {
                          "children": "LAST_90_DAYS",
                          "key": "10",
                          "value": "last_90_days",
                        },
                        Object {
                          "children": "LAST_180_DAYS",
                          "key": "11",
                          "value": "last_180_days",
                        },
                        Object {
                          "children": "LAST_365_DAYS",
                          "key": "12",
                          "value": "last_365_days",
                        },
                        Object {
                          "children": "ALL_TIME",
                          "key": "13",
                          "value": "all_time",
                        },
                        Object {
                          "children": "SET_DATE",
                          "key": "14",
                          "value": "date",
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        "last_7_days",
                      }
                    }
                    virtual={true}
                  />
                }
                prefixCls="ant-select"
                transitionName="slide-up"
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  getTriggerDOMNode={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": "LAST_UPDATE_DATE",
                                "key": "0",
                                "value": "last_update_date",
                              },
                              "groupOption": false,
                              "key": "0",
                            },
                            Object {
                              "data": Object {
                                "children": "PENULTIMATE_UPDATE_DATE",
                                "key": "1",
                                "value": "penultimate_update_date",
                              },
                              "groupOption": false,
                              "key": "1",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_7_DAYS",
                                "key": "2",
                                "value": "last_7_days",
                              },
                              "groupOption": false,
                              "key": "2",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_WEEK",
                                "key": "3",
                                "value": "prev_week",
                              },
                              "groupOption": false,
                              "key": "3",
                            },
                            Object {
                              "data": Object {
                                "children": "WEEK_BEGIN",
                                "key": "4",
                                "value": "week_begin",
                              },
                              "groupOption": false,
                              "key": "4",
                            },
                            Object {
                              "data": Object {
                                "children": "MONTH_BEGIN",
                                "key": "5",
                                "value": "month_begin",
                              },
                              "groupOption": false,
                              "key": "5",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_MONTH",
                                "key": "6",
                                "value": "prev_month",
                              },
                              "groupOption": false,
                              "key": "6",
                            },
                            Object {
                              "data": Object {
                                "children": "SEASON_BEGIN",
                                "key": "7",
                                "value": "season_begin",
                              },
                              "groupOption": false,
                              "key": "7",
                            },
                            Object {
                              "data": Object {
                                "children": "YEAR_BEGIN",
                                "key": "8",
                                "value": "year_begin",
                              },
                              "groupOption": false,
                              "key": "8",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_30_DAYS",
                                "key": "9",
                                "value": "last_30_days",
                              },
                              "groupOption": false,
                              "key": "9",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_90_DAYS",
                                "key": "10",
                                "value": "last_90_days",
                              },
                              "groupOption": false,
                              "key": "10",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_180_DAYS",
                                "key": "11",
                                "value": "last_180_days",
                              },
                              "groupOption": false,
                              "key": "11",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_365_DAYS",
                                "key": "12",
                                "value": "last_365_days",
                              },
                              "groupOption": false,
                              "key": "12",
                            },
                            Object {
                              "data": Object {
                                "children": "ALL_TIME",
                                "key": "13",
                                "value": "all_time",
                              },
                              "groupOption": false,
                              "key": "13",
                            },
                            Object {
                              "data": Object {
                                "children": "SET_DATE",
                                "key": "14",
                                "value": "date",
                              },
                              "groupOption": false,
                              "key": "14",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onActiveValue={[Function]}
                        onMouseEnter={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": "LAST_UPDATE_DATE",
                              "key": "0",
                              "value": "last_update_date",
                            },
                            Object {
                              "children": "PENULTIMATE_UPDATE_DATE",
                              "key": "1",
                              "value": "penultimate_update_date",
                            },
                            Object {
                              "children": "LAST_7_DAYS",
                              "key": "2",
                              "value": "last_7_days",
                            },
                            Object {
                              "children": "PREV_WEEK",
                              "key": "3",
                              "value": "prev_week",
                            },
                            Object {
                              "children": "WEEK_BEGIN",
                              "key": "4",
                              "value": "week_begin",
                            },
                            Object {
                              "children": "MONTH_BEGIN",
                              "key": "5",
                              "value": "month_begin",
                            },
                            Object {
                              "children": "PREV_MONTH",
                              "key": "6",
                              "value": "prev_month",
                            },
                            Object {
                              "children": "SEASON_BEGIN",
                              "key": "7",
                              "value": "season_begin",
                            },
                            Object {
                              "children": "YEAR_BEGIN",
                              "key": "8",
                              "value": "year_begin",
                            },
                            Object {
                              "children": "LAST_30_DAYS",
                              "key": "9",
                              "value": "last_30_days",
                            },
                            Object {
                              "children": "LAST_90_DAYS",
                              "key": "10",
                              "value": "last_90_days",
                            },
                            Object {
                              "children": "LAST_180_DAYS",
                              "key": "11",
                              "value": "last_180_days",
                            },
                            Object {
                              "children": "LAST_365_DAYS",
                              "key": "12",
                              "value": "last_365_days",
                            },
                            Object {
                              "children": "ALL_TIME",
                              "key": "13",
                              "value": "all_time",
                            },
                            Object {
                              "children": "SET_DATE",
                              "key": "14",
                              "value": "date",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={
                          Set {
                            "last_7_days",
                          }
                        }
                        virtual={true}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={
                    Object {
                      "minWidth": null,
                      "width": null,
                    }
                  }
                  popupTransitionName="slide-up"
                  prefixCls="ant-select-dropdown"
                  showAction={Array []}
                >
                  <Selector
                    accessibilityIndex={0}
                    activeValue={null}
                    className=""
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="LAST_7_DAYS"
                          >
                            LAST_7_DAYS
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    id="rc_select_TEST_OR_SSR"
                    inputElement={null}
                    inputIcon={[Function]}
                    key="trigger"
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value="last_7_days"
                    values={
                      Array [
                        Object {
                          "disabled": undefined,
                          "key": "last_7_days",
                          "label": "LAST_7_DAYS",
                          "value": "last_7_days",
                        },
                      ]
                    }
                  >
                    <div
                      className="ant-select-selector"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SingleSelector
                        accessibilityIndex={0}
                        activeValue={null}
                        className=""
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        domRef={
                          Object {
                            "current": <div
                              class="ant-select-selector"
                            >
                              <span
                                class="ant-select-selection-search"
                              >
                                <input
                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                  aria-autocomplete="list"
                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                  aria-haspopup="listbox"
                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                  autocomplete="off"
                                  class="ant-select-selection-search-input"
                                  id="rc_select_TEST_OR_SSR"
                                  readonly=""
                                  role="combobox"
                                  style="opacity: 0;"
                                  type="search"
                                  unselectable="on"
                                  value=""
                                />
                              </span>
                              <span
                                class="ant-select-selection-item"
                                title="LAST_7_DAYS"
                              >
                                LAST_7_DAYS
                              </span>
                            </div>,
                          }
                        }
                        dropdownClassName=""
                        id="rc_select_TEST_OR_SSR"
                        inputElement={null}
                        inputIcon={[Function]}
                        inputRef={
                          Object {
                            "current": <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />,
                          }
                        }
                        listHeight={256}
                        listItemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onInputCompositionEnd={[Function]}
                        onInputCompositionStart={[Function]}
                        onInputKeyDown={[Function]}
                        onInputMouseDown={[Function]}
                        onInputPaste={[Function]}
                        onSearch={[Function]}
                        onSearchSubmit={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        prefixCls="ant-select"
                        removeIcon={<ForwardRef(CloseOutlined) />}
                        searchValue=""
                        showSearch={false}
                        tokenWithEnter={false}
                        transitionName="slide-up"
                        value="last_7_days"
                        values={
                          Array [
                            Object {
                              "disabled": undefined,
                              "key": "last_7_days",
                              "label": "LAST_7_DAYS",
                              "value": "last_7_days",
                            },
                          ]
                        }
                      >
                        <span
                          className="ant-select-selection-search"
                        >
                          <Input
                            accessibilityIndex={0}
                            attrs={Object {}}
                            editable={false}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            prefixCls="ant-select"
                            value=""
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autoComplete="off"
                              className="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              readOnly={true}
                              role="combobox"
                              style={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </Input>
                        </span>
                        <span
                          className="ant-select-selection-item"
                          title="LAST_7_DAYS"
                        >
                          LAST_7_DAYS
                        </span>
                      </SingleSelector>
                    </div>
                  </Selector>
                </Trigger>
              </SelectTrigger>
              <TransBtn
                className="ant-select-arrow"
                customizeIcon={[Function]}
                customizeIconProps={
                  Object {
                    "focused": false,
                    "loading": undefined,
                    "open": undefined,
                    "searchValue": "",
                    "showSearch": false,
                  }
                }
              >
                <span
                  aria-hidden={true}
                  className="ant-select-arrow"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "WebkitUserSelect": "none",
                      "userSelect": "none",
                    }
                  }
                  unselectable="on"
                >
                  <ForwardRef(DownOutlined)
                    className="ant-select-suffix"
                  >
                    <AntdIcon
                      className="ant-select-suffix"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="down"
                        className="anticon anticon-down ant-select-suffix"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "down",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(DownOutlined)>
                </span>
              </TransBtn>
            </div>
          </ForwardRef(Select)>
        </Select>
      </ForwardRef(InternalSelect)>
    </div>
    <div
      className="prev-period-container"
    >
      <span
        className="period-title"
      >
        SELECT_PREV_PERIOD
      </span>
      <ForwardRef(InternalSelect)
        disabled={false}
        onChange={[Function]}
        value="previous"
      >
        <Select
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          disabled={false}
          dropdownClassName=""
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          menuItemSelectedIcon={null}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          onChange={[Function]}
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
          value="previous"
        >
          <ForwardRef(Select)
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            disabled={false}
            dropdownClassName=""
            inputIcon={[Function]}
            listHeight={256}
            listItemHeight={24}
            menuItemSelectedIcon={null}
            notFoundContent={
              <Context.Consumer>
                [Function]
              </Context.Consumer>
            }
            onChange={[Function]}
            prefixCls="ant-select"
            removeIcon={<ForwardRef(CloseOutlined) />}
            transitionName="slide-up"
            value="previous"
          >
            <div
              className="ant-select ant-select-single ant-select-show-arrow"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
            >
              <SelectTrigger
                containerWidth={null}
                disabled={false}
                dropdownClassName=""
                empty={false}
                getTriggerDOMNode={[Function]}
                popupElement={
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "PREVIOUS",
                            "disabled": false,
                            "key": "0",
                            "value": "previous",
                          },
                          "groupOption": false,
                          "key": "0",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_WEEK",
                            "disabled": true,
                            "key": "1",
                            "value": "prev_last_week",
                          },
                          "groupOption": false,
                          "key": "1",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_MONTH",
                            "disabled": false,
                            "key": "2",
                            "value": "prev_last_month",
                          },
                          "groupOption": false,
                          "key": "2",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_QUARTER",
                            "disabled": false,
                            "key": "3",
                            "value": "prev_last_quarter",
                          },
                          "groupOption": false,
                          "key": "3",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_YEAR",
                            "disabled": false,
                            "key": "4",
                            "value": "prev_last_year",
                          },
                          "groupOption": false,
                          "key": "4",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_DATE",
                            "disabled": false,
                            "key": "5",
                            "value": "prev_date",
                          },
                          "groupOption": false,
                          "key": "5",
                        },
                      ]
                    }
                    height={256}
                    id="rc_select_TEST_OR_SSR"
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "PREVIOUS",
                          "disabled": false,
                          "key": "0",
                          "value": "previous",
                        },
                        Object {
                          "children": "PREV_LAST_WEEK",
                          "disabled": true,
                          "key": "1",
                          "value": "prev_last_week",
                        },
                        Object {
                          "children": "PREV_LAST_MONTH",
                          "disabled": false,
                          "key": "2",
                          "value": "prev_last_month",
                        },
                        Object {
                          "children": "PREV_LAST_QUARTER",
                          "disabled": false,
                          "key": "3",
                          "value": "prev_last_quarter",
                        },
                        Object {
                          "children": "PREV_LAST_YEAR",
                          "disabled": false,
                          "key": "4",
                          "value": "prev_last_year",
                        },
                        Object {
                          "children": "PREV_DATE",
                          "disabled": false,
                          "key": "5",
                          "value": "prev_date",
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        "previous",
                      }
                    }
                    virtual={true}
                  />
                }
                prefixCls="ant-select"
                transitionName="slide-up"
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  getTriggerDOMNode={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": "PREVIOUS",
                                "disabled": false,
                                "key": "0",
                                "value": "previous",
                              },
                              "groupOption": false,
                              "key": "0",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_WEEK",
                                "disabled": true,
                                "key": "1",
                                "value": "prev_last_week",
                              },
                              "groupOption": false,
                              "key": "1",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_MONTH",
                                "disabled": false,
                                "key": "2",
                                "value": "prev_last_month",
                              },
                              "groupOption": false,
                              "key": "2",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_QUARTER",
                                "disabled": false,
                                "key": "3",
                                "value": "prev_last_quarter",
                              },
                              "groupOption": false,
                              "key": "3",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_YEAR",
                                "disabled": false,
                                "key": "4",
                                "value": "prev_last_year",
                              },
                              "groupOption": false,
                              "key": "4",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_DATE",
                                "disabled": false,
                                "key": "5",
                                "value": "prev_date",
                              },
                              "groupOption": false,
                              "key": "5",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onActiveValue={[Function]}
                        onMouseEnter={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": "PREVIOUS",
                              "disabled": false,
                              "key": "0",
                              "value": "previous",
                            },
                            Object {
                              "children": "PREV_LAST_WEEK",
                              "disabled": true,
                              "key": "1",
                              "value": "prev_last_week",
                            },
                            Object {
                              "children": "PREV_LAST_MONTH",
                              "disabled": false,
                              "key": "2",
                              "value": "prev_last_month",
                            },
                            Object {
                              "children": "PREV_LAST_QUARTER",
                              "disabled": false,
                              "key": "3",
                              "value": "prev_last_quarter",
                            },
                            Object {
                              "children": "PREV_LAST_YEAR",
                              "disabled": false,
                              "key": "4",
                              "value": "prev_last_year",
                            },
                            Object {
                              "children": "PREV_DATE",
                              "disabled": false,
                              "key": "5",
                              "value": "prev_date",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={
                          Set {
                            "previous",
                          }
                        }
                        virtual={true}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={
                    Object {
                      "minWidth": null,
                      "width": null,
                    }
                  }
                  popupTransitionName="slide-up"
                  prefixCls="ant-select-dropdown"
                  showAction={Array []}
                >
                  <Selector
                    accessibilityIndex={0}
                    activeValue={null}
                    className=""
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    disabled={false}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="PREVIOUS"
                          >
                            PREVIOUS
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    id="rc_select_TEST_OR_SSR"
                    inputElement={null}
                    inputIcon={[Function]}
                    key="trigger"
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value="previous"
                    values={
                      Array [
                        Object {
                          "disabled": false,
                          "key": "previous",
                          "label": "PREVIOUS",
                          "value": "previous",
                        },
                      ]
                    }
                  >
                    <div
                      className="ant-select-selector"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SingleSelector
                        accessibilityIndex={0}
                        activeValue={null}
                        className=""
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        disabled={false}
                        domRef={
                          Object {
                            "current": <div
                              class="ant-select-selector"
                            >
                              <span
                                class="ant-select-selection-search"
                              >
                                <input
                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                  aria-autocomplete="list"
                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                  aria-haspopup="listbox"
                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                  autocomplete="off"
                                  class="ant-select-selection-search-input"
                                  id="rc_select_TEST_OR_SSR"
                                  readonly=""
                                  role="combobox"
                                  style="opacity: 0;"
                                  type="search"
                                  unselectable="on"
                                  value=""
                                />
                              </span>
                              <span
                                class="ant-select-selection-item"
                                title="PREVIOUS"
                              >
                                PREVIOUS
                              </span>
                            </div>,
                          }
                        }
                        dropdownClassName=""
                        id="rc_select_TEST_OR_SSR"
                        inputElement={null}
                        inputIcon={[Function]}
                        inputRef={
                          Object {
                            "current": <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />,
                          }
                        }
                        listHeight={256}
                        listItemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onInputCompositionEnd={[Function]}
                        onInputCompositionStart={[Function]}
                        onInputKeyDown={[Function]}
                        onInputMouseDown={[Function]}
                        onInputPaste={[Function]}
                        onSearch={[Function]}
                        onSearchSubmit={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        prefixCls="ant-select"
                        removeIcon={<ForwardRef(CloseOutlined) />}
                        searchValue=""
                        showSearch={false}
                        tokenWithEnter={false}
                        transitionName="slide-up"
                        value="previous"
                        values={
                          Array [
                            Object {
                              "disabled": false,
                              "key": "previous",
                              "label": "PREVIOUS",
                              "value": "previous",
                            },
                          ]
                        }
                      >
                        <span
                          className="ant-select-selection-search"
                        >
                          <Input
                            accessibilityIndex={0}
                            attrs={Object {}}
                            disabled={false}
                            editable={false}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            prefixCls="ant-select"
                            value=""
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autoComplete="off"
                              className="ant-select-selection-search-input"
                              disabled={false}
                              id="rc_select_TEST_OR_SSR"
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              readOnly={true}
                              role="combobox"
                              style={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </Input>
                        </span>
                        <span
                          className="ant-select-selection-item"
                          title="PREVIOUS"
                        >
                          PREVIOUS
                        </span>
                      </SingleSelector>
                    </div>
                  </Selector>
                </Trigger>
              </SelectTrigger>
              <TransBtn
                className="ant-select-arrow"
                customizeIcon={[Function]}
                customizeIconProps={
                  Object {
                    "focused": false,
                    "loading": undefined,
                    "open": undefined,
                    "searchValue": "",
                    "showSearch": false,
                  }
                }
              >
                <span
                  aria-hidden={true}
                  className="ant-select-arrow"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "WebkitUserSelect": "none",
                      "userSelect": "none",
                    }
                  }
                  unselectable="on"
                >
                  <ForwardRef(DownOutlined)
                    className="ant-select-suffix"
                  >
                    <AntdIcon
                      className="ant-select-suffix"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="down"
                        className="anticon anticon-down ant-select-suffix"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "down",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(DownOutlined)>
                </span>
              </TransBtn>
            </div>
          </ForwardRef(Select)>
        </Select>
      </ForwardRef(InternalSelect)>
    </div>
  </div>
</PeriodSelect>
`;

exports[`PeriodSelect should render correctly with default props 1`] = `
<PeriodSelect
  clientDate="2021-11-28"
  clientStartDate="2020-10-21"
  dateConfig={Object {}}
  limitMaxDate={false}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "datePicker": Object {
              "endDate": "2021-11-28",
              "startDate": "2021-11-22",
            },
            "prevDatePicker": Object {
              "endDate": "2021-11-21",
              "startDate": "2021-11-15",
            },
            "selectedPeriod": "last_7_days",
            "selectedPrevPeriod": "previous",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  periodLabel="SELECT_PERIOD"
  prevPeriodLabel="SELECT_PREV_PERIOD"
  type="iso-8601"
>
  <div
    className="period-picker-wrapper"
  >
    <div
      className="period-container"
    >
      <span
        className="period-title"
      >
        SELECT_PERIOD
      </span>
      <ForwardRef(InternalSelect)
        onChange={[Function]}
        value="last_7_days"
      >
        <Select
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          dropdownClassName=""
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          menuItemSelectedIcon={null}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          onChange={[Function]}
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
          value="last_7_days"
        >
          <ForwardRef(Select)
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            dropdownClassName=""
            inputIcon={[Function]}
            listHeight={256}
            listItemHeight={24}
            menuItemSelectedIcon={null}
            notFoundContent={
              <Context.Consumer>
                [Function]
              </Context.Consumer>
            }
            onChange={[Function]}
            prefixCls="ant-select"
            removeIcon={<ForwardRef(CloseOutlined) />}
            transitionName="slide-up"
            value="last_7_days"
          >
            <div
              className="ant-select ant-select-single ant-select-show-arrow"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
            >
              <SelectTrigger
                containerWidth={null}
                dropdownClassName=""
                empty={false}
                getTriggerDOMNode={[Function]}
                popupElement={
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "LAST_UPDATE_DATE",
                            "key": "0",
                            "value": "last_update_date",
                          },
                          "groupOption": false,
                          "key": "0",
                        },
                        Object {
                          "data": Object {
                            "children": "PENULTIMATE_UPDATE_DATE",
                            "key": "1",
                            "value": "penultimate_update_date",
                          },
                          "groupOption": false,
                          "key": "1",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_7_DAYS",
                            "key": "2",
                            "value": "last_7_days",
                          },
                          "groupOption": false,
                          "key": "2",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_WEEK",
                            "key": "3",
                            "value": "prev_week",
                          },
                          "groupOption": false,
                          "key": "3",
                        },
                        Object {
                          "data": Object {
                            "children": "WEEK_BEGIN",
                            "key": "4",
                            "value": "week_begin",
                          },
                          "groupOption": false,
                          "key": "4",
                        },
                        Object {
                          "data": Object {
                            "children": "MONTH_BEGIN",
                            "key": "5",
                            "value": "month_begin",
                          },
                          "groupOption": false,
                          "key": "5",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_MONTH",
                            "key": "6",
                            "value": "prev_month",
                          },
                          "groupOption": false,
                          "key": "6",
                        },
                        Object {
                          "data": Object {
                            "children": "SEASON_BEGIN",
                            "key": "7",
                            "value": "season_begin",
                          },
                          "groupOption": false,
                          "key": "7",
                        },
                        Object {
                          "data": Object {
                            "children": "YEAR_BEGIN",
                            "key": "8",
                            "value": "year_begin",
                          },
                          "groupOption": false,
                          "key": "8",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_30_DAYS",
                            "key": "9",
                            "value": "last_30_days",
                          },
                          "groupOption": false,
                          "key": "9",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_90_DAYS",
                            "key": "10",
                            "value": "last_90_days",
                          },
                          "groupOption": false,
                          "key": "10",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_180_DAYS",
                            "key": "11",
                            "value": "last_180_days",
                          },
                          "groupOption": false,
                          "key": "11",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_365_DAYS",
                            "key": "12",
                            "value": "last_365_days",
                          },
                          "groupOption": false,
                          "key": "12",
                        },
                        Object {
                          "data": Object {
                            "children": "ALL_TIME",
                            "key": "13",
                            "value": "all_time",
                          },
                          "groupOption": false,
                          "key": "13",
                        },
                        Object {
                          "data": Object {
                            "children": "SET_DATE",
                            "key": "14",
                            "value": "date",
                          },
                          "groupOption": false,
                          "key": "14",
                        },
                      ]
                    }
                    height={256}
                    id="rc_select_TEST_OR_SSR"
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "LAST_UPDATE_DATE",
                          "key": "0",
                          "value": "last_update_date",
                        },
                        Object {
                          "children": "PENULTIMATE_UPDATE_DATE",
                          "key": "1",
                          "value": "penultimate_update_date",
                        },
                        Object {
                          "children": "LAST_7_DAYS",
                          "key": "2",
                          "value": "last_7_days",
                        },
                        Object {
                          "children": "PREV_WEEK",
                          "key": "3",
                          "value": "prev_week",
                        },
                        Object {
                          "children": "WEEK_BEGIN",
                          "key": "4",
                          "value": "week_begin",
                        },
                        Object {
                          "children": "MONTH_BEGIN",
                          "key": "5",
                          "value": "month_begin",
                        },
                        Object {
                          "children": "PREV_MONTH",
                          "key": "6",
                          "value": "prev_month",
                        },
                        Object {
                          "children": "SEASON_BEGIN",
                          "key": "7",
                          "value": "season_begin",
                        },
                        Object {
                          "children": "YEAR_BEGIN",
                          "key": "8",
                          "value": "year_begin",
                        },
                        Object {
                          "children": "LAST_30_DAYS",
                          "key": "9",
                          "value": "last_30_days",
                        },
                        Object {
                          "children": "LAST_90_DAYS",
                          "key": "10",
                          "value": "last_90_days",
                        },
                        Object {
                          "children": "LAST_180_DAYS",
                          "key": "11",
                          "value": "last_180_days",
                        },
                        Object {
                          "children": "LAST_365_DAYS",
                          "key": "12",
                          "value": "last_365_days",
                        },
                        Object {
                          "children": "ALL_TIME",
                          "key": "13",
                          "value": "all_time",
                        },
                        Object {
                          "children": "SET_DATE",
                          "key": "14",
                          "value": "date",
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        "last_7_days",
                      }
                    }
                    virtual={true}
                  />
                }
                prefixCls="ant-select"
                transitionName="slide-up"
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  getTriggerDOMNode={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": "LAST_UPDATE_DATE",
                                "key": "0",
                                "value": "last_update_date",
                              },
                              "groupOption": false,
                              "key": "0",
                            },
                            Object {
                              "data": Object {
                                "children": "PENULTIMATE_UPDATE_DATE",
                                "key": "1",
                                "value": "penultimate_update_date",
                              },
                              "groupOption": false,
                              "key": "1",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_7_DAYS",
                                "key": "2",
                                "value": "last_7_days",
                              },
                              "groupOption": false,
                              "key": "2",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_WEEK",
                                "key": "3",
                                "value": "prev_week",
                              },
                              "groupOption": false,
                              "key": "3",
                            },
                            Object {
                              "data": Object {
                                "children": "WEEK_BEGIN",
                                "key": "4",
                                "value": "week_begin",
                              },
                              "groupOption": false,
                              "key": "4",
                            },
                            Object {
                              "data": Object {
                                "children": "MONTH_BEGIN",
                                "key": "5",
                                "value": "month_begin",
                              },
                              "groupOption": false,
                              "key": "5",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_MONTH",
                                "key": "6",
                                "value": "prev_month",
                              },
                              "groupOption": false,
                              "key": "6",
                            },
                            Object {
                              "data": Object {
                                "children": "SEASON_BEGIN",
                                "key": "7",
                                "value": "season_begin",
                              },
                              "groupOption": false,
                              "key": "7",
                            },
                            Object {
                              "data": Object {
                                "children": "YEAR_BEGIN",
                                "key": "8",
                                "value": "year_begin",
                              },
                              "groupOption": false,
                              "key": "8",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_30_DAYS",
                                "key": "9",
                                "value": "last_30_days",
                              },
                              "groupOption": false,
                              "key": "9",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_90_DAYS",
                                "key": "10",
                                "value": "last_90_days",
                              },
                              "groupOption": false,
                              "key": "10",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_180_DAYS",
                                "key": "11",
                                "value": "last_180_days",
                              },
                              "groupOption": false,
                              "key": "11",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_365_DAYS",
                                "key": "12",
                                "value": "last_365_days",
                              },
                              "groupOption": false,
                              "key": "12",
                            },
                            Object {
                              "data": Object {
                                "children": "ALL_TIME",
                                "key": "13",
                                "value": "all_time",
                              },
                              "groupOption": false,
                              "key": "13",
                            },
                            Object {
                              "data": Object {
                                "children": "SET_DATE",
                                "key": "14",
                                "value": "date",
                              },
                              "groupOption": false,
                              "key": "14",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onActiveValue={[Function]}
                        onMouseEnter={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": "LAST_UPDATE_DATE",
                              "key": "0",
                              "value": "last_update_date",
                            },
                            Object {
                              "children": "PENULTIMATE_UPDATE_DATE",
                              "key": "1",
                              "value": "penultimate_update_date",
                            },
                            Object {
                              "children": "LAST_7_DAYS",
                              "key": "2",
                              "value": "last_7_days",
                            },
                            Object {
                              "children": "PREV_WEEK",
                              "key": "3",
                              "value": "prev_week",
                            },
                            Object {
                              "children": "WEEK_BEGIN",
                              "key": "4",
                              "value": "week_begin",
                            },
                            Object {
                              "children": "MONTH_BEGIN",
                              "key": "5",
                              "value": "month_begin",
                            },
                            Object {
                              "children": "PREV_MONTH",
                              "key": "6",
                              "value": "prev_month",
                            },
                            Object {
                              "children": "SEASON_BEGIN",
                              "key": "7",
                              "value": "season_begin",
                            },
                            Object {
                              "children": "YEAR_BEGIN",
                              "key": "8",
                              "value": "year_begin",
                            },
                            Object {
                              "children": "LAST_30_DAYS",
                              "key": "9",
                              "value": "last_30_days",
                            },
                            Object {
                              "children": "LAST_90_DAYS",
                              "key": "10",
                              "value": "last_90_days",
                            },
                            Object {
                              "children": "LAST_180_DAYS",
                              "key": "11",
                              "value": "last_180_days",
                            },
                            Object {
                              "children": "LAST_365_DAYS",
                              "key": "12",
                              "value": "last_365_days",
                            },
                            Object {
                              "children": "ALL_TIME",
                              "key": "13",
                              "value": "all_time",
                            },
                            Object {
                              "children": "SET_DATE",
                              "key": "14",
                              "value": "date",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={
                          Set {
                            "last_7_days",
                          }
                        }
                        virtual={true}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={
                    Object {
                      "minWidth": null,
                      "width": null,
                    }
                  }
                  popupTransitionName="slide-up"
                  prefixCls="ant-select-dropdown"
                  showAction={Array []}
                >
                  <Selector
                    accessibilityIndex={0}
                    activeValue={null}
                    className=""
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="LAST_7_DAYS"
                          >
                            LAST_7_DAYS
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    id="rc_select_TEST_OR_SSR"
                    inputElement={null}
                    inputIcon={[Function]}
                    key="trigger"
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value="last_7_days"
                    values={
                      Array [
                        Object {
                          "disabled": undefined,
                          "key": "last_7_days",
                          "label": "LAST_7_DAYS",
                          "value": "last_7_days",
                        },
                      ]
                    }
                  >
                    <div
                      className="ant-select-selector"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SingleSelector
                        accessibilityIndex={0}
                        activeValue={null}
                        className=""
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        domRef={
                          Object {
                            "current": <div
                              class="ant-select-selector"
                            >
                              <span
                                class="ant-select-selection-search"
                              >
                                <input
                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                  aria-autocomplete="list"
                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                  aria-haspopup="listbox"
                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                  autocomplete="off"
                                  class="ant-select-selection-search-input"
                                  id="rc_select_TEST_OR_SSR"
                                  readonly=""
                                  role="combobox"
                                  style="opacity: 0;"
                                  type="search"
                                  unselectable="on"
                                  value=""
                                />
                              </span>
                              <span
                                class="ant-select-selection-item"
                                title="LAST_7_DAYS"
                              >
                                LAST_7_DAYS
                              </span>
                            </div>,
                          }
                        }
                        dropdownClassName=""
                        id="rc_select_TEST_OR_SSR"
                        inputElement={null}
                        inputIcon={[Function]}
                        inputRef={
                          Object {
                            "current": <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />,
                          }
                        }
                        listHeight={256}
                        listItemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onInputCompositionEnd={[Function]}
                        onInputCompositionStart={[Function]}
                        onInputKeyDown={[Function]}
                        onInputMouseDown={[Function]}
                        onInputPaste={[Function]}
                        onSearch={[Function]}
                        onSearchSubmit={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        prefixCls="ant-select"
                        removeIcon={<ForwardRef(CloseOutlined) />}
                        searchValue=""
                        showSearch={false}
                        tokenWithEnter={false}
                        transitionName="slide-up"
                        value="last_7_days"
                        values={
                          Array [
                            Object {
                              "disabled": undefined,
                              "key": "last_7_days",
                              "label": "LAST_7_DAYS",
                              "value": "last_7_days",
                            },
                          ]
                        }
                      >
                        <span
                          className="ant-select-selection-search"
                        >
                          <Input
                            accessibilityIndex={0}
                            attrs={Object {}}
                            editable={false}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            prefixCls="ant-select"
                            value=""
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autoComplete="off"
                              className="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              readOnly={true}
                              role="combobox"
                              style={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </Input>
                        </span>
                        <span
                          className="ant-select-selection-item"
                          title="LAST_7_DAYS"
                        >
                          LAST_7_DAYS
                        </span>
                      </SingleSelector>
                    </div>
                  </Selector>
                </Trigger>
              </SelectTrigger>
              <TransBtn
                className="ant-select-arrow"
                customizeIcon={[Function]}
                customizeIconProps={
                  Object {
                    "focused": false,
                    "loading": undefined,
                    "open": undefined,
                    "searchValue": "",
                    "showSearch": false,
                  }
                }
              >
                <span
                  aria-hidden={true}
                  className="ant-select-arrow"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "WebkitUserSelect": "none",
                      "userSelect": "none",
                    }
                  }
                  unselectable="on"
                >
                  <ForwardRef(DownOutlined)
                    className="ant-select-suffix"
                  >
                    <AntdIcon
                      className="ant-select-suffix"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="down"
                        className="anticon anticon-down ant-select-suffix"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "down",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(DownOutlined)>
                </span>
              </TransBtn>
            </div>
          </ForwardRef(Select)>
        </Select>
      </ForwardRef(InternalSelect)>
    </div>
    <div
      className="prev-period-container"
    >
      <span
        className="period-title"
      >
        SELECT_PREV_PERIOD
      </span>
      <ForwardRef(InternalSelect)
        disabled={false}
        onChange={[Function]}
        value="previous"
      >
        <Select
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          disabled={false}
          dropdownClassName=""
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          menuItemSelectedIcon={null}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          onChange={[Function]}
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
          value="previous"
        >
          <ForwardRef(Select)
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            disabled={false}
            dropdownClassName=""
            inputIcon={[Function]}
            listHeight={256}
            listItemHeight={24}
            menuItemSelectedIcon={null}
            notFoundContent={
              <Context.Consumer>
                [Function]
              </Context.Consumer>
            }
            onChange={[Function]}
            prefixCls="ant-select"
            removeIcon={<ForwardRef(CloseOutlined) />}
            transitionName="slide-up"
            value="previous"
          >
            <div
              className="ant-select ant-select-single ant-select-show-arrow"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
            >
              <SelectTrigger
                containerWidth={null}
                disabled={false}
                dropdownClassName=""
                empty={false}
                getTriggerDOMNode={[Function]}
                popupElement={
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "PREVIOUS",
                            "disabled": false,
                            "key": "0",
                            "value": "previous",
                          },
                          "groupOption": false,
                          "key": "0",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_WEEK",
                            "disabled": true,
                            "key": "1",
                            "value": "prev_last_week",
                          },
                          "groupOption": false,
                          "key": "1",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_MONTH",
                            "disabled": false,
                            "key": "2",
                            "value": "prev_last_month",
                          },
                          "groupOption": false,
                          "key": "2",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_QUARTER",
                            "disabled": false,
                            "key": "3",
                            "value": "prev_last_quarter",
                          },
                          "groupOption": false,
                          "key": "3",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_YEAR",
                            "disabled": false,
                            "key": "4",
                            "value": "prev_last_year",
                          },
                          "groupOption": false,
                          "key": "4",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_DATE",
                            "disabled": false,
                            "key": "5",
                            "value": "prev_date",
                          },
                          "groupOption": false,
                          "key": "5",
                        },
                      ]
                    }
                    height={256}
                    id="rc_select_TEST_OR_SSR"
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "PREVIOUS",
                          "disabled": false,
                          "key": "0",
                          "value": "previous",
                        },
                        Object {
                          "children": "PREV_LAST_WEEK",
                          "disabled": true,
                          "key": "1",
                          "value": "prev_last_week",
                        },
                        Object {
                          "children": "PREV_LAST_MONTH",
                          "disabled": false,
                          "key": "2",
                          "value": "prev_last_month",
                        },
                        Object {
                          "children": "PREV_LAST_QUARTER",
                          "disabled": false,
                          "key": "3",
                          "value": "prev_last_quarter",
                        },
                        Object {
                          "children": "PREV_LAST_YEAR",
                          "disabled": false,
                          "key": "4",
                          "value": "prev_last_year",
                        },
                        Object {
                          "children": "PREV_DATE",
                          "disabled": false,
                          "key": "5",
                          "value": "prev_date",
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        "previous",
                      }
                    }
                    virtual={true}
                  />
                }
                prefixCls="ant-select"
                transitionName="slide-up"
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  getTriggerDOMNode={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": "PREVIOUS",
                                "disabled": false,
                                "key": "0",
                                "value": "previous",
                              },
                              "groupOption": false,
                              "key": "0",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_WEEK",
                                "disabled": true,
                                "key": "1",
                                "value": "prev_last_week",
                              },
                              "groupOption": false,
                              "key": "1",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_MONTH",
                                "disabled": false,
                                "key": "2",
                                "value": "prev_last_month",
                              },
                              "groupOption": false,
                              "key": "2",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_QUARTER",
                                "disabled": false,
                                "key": "3",
                                "value": "prev_last_quarter",
                              },
                              "groupOption": false,
                              "key": "3",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_YEAR",
                                "disabled": false,
                                "key": "4",
                                "value": "prev_last_year",
                              },
                              "groupOption": false,
                              "key": "4",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_DATE",
                                "disabled": false,
                                "key": "5",
                                "value": "prev_date",
                              },
                              "groupOption": false,
                              "key": "5",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onActiveValue={[Function]}
                        onMouseEnter={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": "PREVIOUS",
                              "disabled": false,
                              "key": "0",
                              "value": "previous",
                            },
                            Object {
                              "children": "PREV_LAST_WEEK",
                              "disabled": true,
                              "key": "1",
                              "value": "prev_last_week",
                            },
                            Object {
                              "children": "PREV_LAST_MONTH",
                              "disabled": false,
                              "key": "2",
                              "value": "prev_last_month",
                            },
                            Object {
                              "children": "PREV_LAST_QUARTER",
                              "disabled": false,
                              "key": "3",
                              "value": "prev_last_quarter",
                            },
                            Object {
                              "children": "PREV_LAST_YEAR",
                              "disabled": false,
                              "key": "4",
                              "value": "prev_last_year",
                            },
                            Object {
                              "children": "PREV_DATE",
                              "disabled": false,
                              "key": "5",
                              "value": "prev_date",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={
                          Set {
                            "previous",
                          }
                        }
                        virtual={true}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={
                    Object {
                      "minWidth": null,
                      "width": null,
                    }
                  }
                  popupTransitionName="slide-up"
                  prefixCls="ant-select-dropdown"
                  showAction={Array []}
                >
                  <Selector
                    accessibilityIndex={0}
                    activeValue={null}
                    className=""
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    disabled={false}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="PREVIOUS"
                          >
                            PREVIOUS
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    id="rc_select_TEST_OR_SSR"
                    inputElement={null}
                    inputIcon={[Function]}
                    key="trigger"
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value="previous"
                    values={
                      Array [
                        Object {
                          "disabled": false,
                          "key": "previous",
                          "label": "PREVIOUS",
                          "value": "previous",
                        },
                      ]
                    }
                  >
                    <div
                      className="ant-select-selector"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SingleSelector
                        accessibilityIndex={0}
                        activeValue={null}
                        className=""
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        disabled={false}
                        domRef={
                          Object {
                            "current": <div
                              class="ant-select-selector"
                            >
                              <span
                                class="ant-select-selection-search"
                              >
                                <input
                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                  aria-autocomplete="list"
                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                  aria-haspopup="listbox"
                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                  autocomplete="off"
                                  class="ant-select-selection-search-input"
                                  id="rc_select_TEST_OR_SSR"
                                  readonly=""
                                  role="combobox"
                                  style="opacity: 0;"
                                  type="search"
                                  unselectable="on"
                                  value=""
                                />
                              </span>
                              <span
                                class="ant-select-selection-item"
                                title="PREVIOUS"
                              >
                                PREVIOUS
                              </span>
                            </div>,
                          }
                        }
                        dropdownClassName=""
                        id="rc_select_TEST_OR_SSR"
                        inputElement={null}
                        inputIcon={[Function]}
                        inputRef={
                          Object {
                            "current": <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />,
                          }
                        }
                        listHeight={256}
                        listItemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onInputCompositionEnd={[Function]}
                        onInputCompositionStart={[Function]}
                        onInputKeyDown={[Function]}
                        onInputMouseDown={[Function]}
                        onInputPaste={[Function]}
                        onSearch={[Function]}
                        onSearchSubmit={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        prefixCls="ant-select"
                        removeIcon={<ForwardRef(CloseOutlined) />}
                        searchValue=""
                        showSearch={false}
                        tokenWithEnter={false}
                        transitionName="slide-up"
                        value="previous"
                        values={
                          Array [
                            Object {
                              "disabled": false,
                              "key": "previous",
                              "label": "PREVIOUS",
                              "value": "previous",
                            },
                          ]
                        }
                      >
                        <span
                          className="ant-select-selection-search"
                        >
                          <Input
                            accessibilityIndex={0}
                            attrs={Object {}}
                            disabled={false}
                            editable={false}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            prefixCls="ant-select"
                            value=""
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autoComplete="off"
                              className="ant-select-selection-search-input"
                              disabled={false}
                              id="rc_select_TEST_OR_SSR"
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              readOnly={true}
                              role="combobox"
                              style={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </Input>
                        </span>
                        <span
                          className="ant-select-selection-item"
                          title="PREVIOUS"
                        >
                          PREVIOUS
                        </span>
                      </SingleSelector>
                    </div>
                  </Selector>
                </Trigger>
              </SelectTrigger>
              <TransBtn
                className="ant-select-arrow"
                customizeIcon={[Function]}
                customizeIconProps={
                  Object {
                    "focused": false,
                    "loading": undefined,
                    "open": undefined,
                    "searchValue": "",
                    "showSearch": false,
                  }
                }
              >
                <span
                  aria-hidden={true}
                  className="ant-select-arrow"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "WebkitUserSelect": "none",
                      "userSelect": "none",
                    }
                  }
                  unselectable="on"
                >
                  <ForwardRef(DownOutlined)
                    className="ant-select-suffix"
                  >
                    <AntdIcon
                      className="ant-select-suffix"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="down"
                        className="anticon anticon-down ant-select-suffix"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "down",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(DownOutlined)>
                </span>
              </TransBtn>
            </div>
          </ForwardRef(Select)>
        </Select>
      </ForwardRef(InternalSelect)>
    </div>
  </div>
</PeriodSelect>
`;

exports[`PeriodSelect should select period with custom data 1`] = `
<PeriodSelect
  clientDate="2021-06-29"
  clientStartDate="2020-01-01"
  dateConfig={
    Object {
      "datePicker": Object {
        "endDate": "2021-06-09",
        "startDate": "2021-06-03",
      },
      "prevDatePicker": Object {
        "endDate": "2021-06-02",
        "startDate": "2021-05-07",
      },
      "selectedPeriod": "last_7_days",
      "selectedPrevPeriod": "previous",
    }
  }
  format="DD-MM-YYYY"
  limitMaxDate={false}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "datePicker": Object {
              "endDate": "2021-06-09",
              "startDate": "2021-06-03",
            },
            "prevDatePicker": Object {
              "endDate": "2020-06-09",
              "startDate": "2020-06-03",
            },
            "selectedPeriod": "last_7_days",
            "selectedPrevPeriod": "prev_last_year",
          },
        ],
        Array [
          Object {
            "datePicker": Object {
              "endDate": "2021-06-09",
              "startDate": "2021-06-03",
            },
            "prevDatePicker": Object {
              "endDate": "2021-06-02",
              "startDate": "2021-05-07",
            },
            "selectedPeriod": "last_7_days",
            "selectedPrevPeriod": "previous",
          },
        ],
        Array [
          Object {
            "datePicker": Object {
              "endDate": "2021-06-09",
              "startDate": "2021-06-03",
            },
            "prevDatePicker": Object {
              "endDate": "2021-06-02",
              "startDate": "2021-05-07",
            },
            "selectedPeriod": "date",
            "selectedPrevPeriod": "previous",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  periodLabel="SELECT_PERIOD"
  prevPeriodLabel="SELECT_PREV_PERIOD"
  type="iso-8601"
>
  <div
    className="period-picker-wrapper"
  >
    <div
      className="period-container"
    >
      <span
        className="period-title"
      >
        SELECT_PERIOD
      </span>
      <ForwardRef(InternalSelect)
        onChange={[Function]}
        value="date"
      >
        <Select
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          dropdownClassName=""
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          menuItemSelectedIcon={null}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          onChange={[Function]}
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
          value="date"
        >
          <ForwardRef(Select)
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            dropdownClassName=""
            inputIcon={[Function]}
            listHeight={256}
            listItemHeight={24}
            menuItemSelectedIcon={null}
            notFoundContent={
              <Context.Consumer>
                [Function]
              </Context.Consumer>
            }
            onChange={[Function]}
            prefixCls="ant-select"
            removeIcon={<ForwardRef(CloseOutlined) />}
            transitionName="slide-up"
            value="date"
          >
            <div
              className="ant-select ant-select-single ant-select-show-arrow"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
            >
              <SelectTrigger
                containerWidth={null}
                dropdownClassName=""
                empty={false}
                getTriggerDOMNode={[Function]}
                popupElement={
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "LAST_UPDATE_DATE",
                            "key": "0",
                            "value": "last_update_date",
                          },
                          "groupOption": false,
                          "key": "0",
                        },
                        Object {
                          "data": Object {
                            "children": "PENULTIMATE_UPDATE_DATE",
                            "key": "1",
                            "value": "penultimate_update_date",
                          },
                          "groupOption": false,
                          "key": "1",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_7_DAYS",
                            "key": "2",
                            "value": "last_7_days",
                          },
                          "groupOption": false,
                          "key": "2",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_WEEK",
                            "key": "3",
                            "value": "prev_week",
                          },
                          "groupOption": false,
                          "key": "3",
                        },
                        Object {
                          "data": Object {
                            "children": "WEEK_BEGIN",
                            "key": "4",
                            "value": "week_begin",
                          },
                          "groupOption": false,
                          "key": "4",
                        },
                        Object {
                          "data": Object {
                            "children": "MONTH_BEGIN",
                            "key": "5",
                            "value": "month_begin",
                          },
                          "groupOption": false,
                          "key": "5",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_MONTH",
                            "key": "6",
                            "value": "prev_month",
                          },
                          "groupOption": false,
                          "key": "6",
                        },
                        Object {
                          "data": Object {
                            "children": "SEASON_BEGIN",
                            "key": "7",
                            "value": "season_begin",
                          },
                          "groupOption": false,
                          "key": "7",
                        },
                        Object {
                          "data": Object {
                            "children": "YEAR_BEGIN",
                            "key": "8",
                            "value": "year_begin",
                          },
                          "groupOption": false,
                          "key": "8",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_30_DAYS",
                            "key": "9",
                            "value": "last_30_days",
                          },
                          "groupOption": false,
                          "key": "9",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_90_DAYS",
                            "key": "10",
                            "value": "last_90_days",
                          },
                          "groupOption": false,
                          "key": "10",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_180_DAYS",
                            "key": "11",
                            "value": "last_180_days",
                          },
                          "groupOption": false,
                          "key": "11",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_365_DAYS",
                            "key": "12",
                            "value": "last_365_days",
                          },
                          "groupOption": false,
                          "key": "12",
                        },
                        Object {
                          "data": Object {
                            "children": "ALL_TIME",
                            "key": "13",
                            "value": "all_time",
                          },
                          "groupOption": false,
                          "key": "13",
                        },
                        Object {
                          "data": Object {
                            "children": "SET_DATE",
                            "key": "14",
                            "value": "date",
                          },
                          "groupOption": false,
                          "key": "14",
                        },
                      ]
                    }
                    height={256}
                    id="rc_select_TEST_OR_SSR"
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "LAST_UPDATE_DATE",
                          "key": "0",
                          "value": "last_update_date",
                        },
                        Object {
                          "children": "PENULTIMATE_UPDATE_DATE",
                          "key": "1",
                          "value": "penultimate_update_date",
                        },
                        Object {
                          "children": "LAST_7_DAYS",
                          "key": "2",
                          "value": "last_7_days",
                        },
                        Object {
                          "children": "PREV_WEEK",
                          "key": "3",
                          "value": "prev_week",
                        },
                        Object {
                          "children": "WEEK_BEGIN",
                          "key": "4",
                          "value": "week_begin",
                        },
                        Object {
                          "children": "MONTH_BEGIN",
                          "key": "5",
                          "value": "month_begin",
                        },
                        Object {
                          "children": "PREV_MONTH",
                          "key": "6",
                          "value": "prev_month",
                        },
                        Object {
                          "children": "SEASON_BEGIN",
                          "key": "7",
                          "value": "season_begin",
                        },
                        Object {
                          "children": "YEAR_BEGIN",
                          "key": "8",
                          "value": "year_begin",
                        },
                        Object {
                          "children": "LAST_30_DAYS",
                          "key": "9",
                          "value": "last_30_days",
                        },
                        Object {
                          "children": "LAST_90_DAYS",
                          "key": "10",
                          "value": "last_90_days",
                        },
                        Object {
                          "children": "LAST_180_DAYS",
                          "key": "11",
                          "value": "last_180_days",
                        },
                        Object {
                          "children": "LAST_365_DAYS",
                          "key": "12",
                          "value": "last_365_days",
                        },
                        Object {
                          "children": "ALL_TIME",
                          "key": "13",
                          "value": "all_time",
                        },
                        Object {
                          "children": "SET_DATE",
                          "key": "14",
                          "value": "date",
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        "date",
                      }
                    }
                    virtual={true}
                  />
                }
                prefixCls="ant-select"
                transitionName="slide-up"
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  getTriggerDOMNode={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": "LAST_UPDATE_DATE",
                                "key": "0",
                                "value": "last_update_date",
                              },
                              "groupOption": false,
                              "key": "0",
                            },
                            Object {
                              "data": Object {
                                "children": "PENULTIMATE_UPDATE_DATE",
                                "key": "1",
                                "value": "penultimate_update_date",
                              },
                              "groupOption": false,
                              "key": "1",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_7_DAYS",
                                "key": "2",
                                "value": "last_7_days",
                              },
                              "groupOption": false,
                              "key": "2",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_WEEK",
                                "key": "3",
                                "value": "prev_week",
                              },
                              "groupOption": false,
                              "key": "3",
                            },
                            Object {
                              "data": Object {
                                "children": "WEEK_BEGIN",
                                "key": "4",
                                "value": "week_begin",
                              },
                              "groupOption": false,
                              "key": "4",
                            },
                            Object {
                              "data": Object {
                                "children": "MONTH_BEGIN",
                                "key": "5",
                                "value": "month_begin",
                              },
                              "groupOption": false,
                              "key": "5",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_MONTH",
                                "key": "6",
                                "value": "prev_month",
                              },
                              "groupOption": false,
                              "key": "6",
                            },
                            Object {
                              "data": Object {
                                "children": "SEASON_BEGIN",
                                "key": "7",
                                "value": "season_begin",
                              },
                              "groupOption": false,
                              "key": "7",
                            },
                            Object {
                              "data": Object {
                                "children": "YEAR_BEGIN",
                                "key": "8",
                                "value": "year_begin",
                              },
                              "groupOption": false,
                              "key": "8",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_30_DAYS",
                                "key": "9",
                                "value": "last_30_days",
                              },
                              "groupOption": false,
                              "key": "9",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_90_DAYS",
                                "key": "10",
                                "value": "last_90_days",
                              },
                              "groupOption": false,
                              "key": "10",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_180_DAYS",
                                "key": "11",
                                "value": "last_180_days",
                              },
                              "groupOption": false,
                              "key": "11",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_365_DAYS",
                                "key": "12",
                                "value": "last_365_days",
                              },
                              "groupOption": false,
                              "key": "12",
                            },
                            Object {
                              "data": Object {
                                "children": "ALL_TIME",
                                "key": "13",
                                "value": "all_time",
                              },
                              "groupOption": false,
                              "key": "13",
                            },
                            Object {
                              "data": Object {
                                "children": "SET_DATE",
                                "key": "14",
                                "value": "date",
                              },
                              "groupOption": false,
                              "key": "14",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onActiveValue={[Function]}
                        onMouseEnter={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": "LAST_UPDATE_DATE",
                              "key": "0",
                              "value": "last_update_date",
                            },
                            Object {
                              "children": "PENULTIMATE_UPDATE_DATE",
                              "key": "1",
                              "value": "penultimate_update_date",
                            },
                            Object {
                              "children": "LAST_7_DAYS",
                              "key": "2",
                              "value": "last_7_days",
                            },
                            Object {
                              "children": "PREV_WEEK",
                              "key": "3",
                              "value": "prev_week",
                            },
                            Object {
                              "children": "WEEK_BEGIN",
                              "key": "4",
                              "value": "week_begin",
                            },
                            Object {
                              "children": "MONTH_BEGIN",
                              "key": "5",
                              "value": "month_begin",
                            },
                            Object {
                              "children": "PREV_MONTH",
                              "key": "6",
                              "value": "prev_month",
                            },
                            Object {
                              "children": "SEASON_BEGIN",
                              "key": "7",
                              "value": "season_begin",
                            },
                            Object {
                              "children": "YEAR_BEGIN",
                              "key": "8",
                              "value": "year_begin",
                            },
                            Object {
                              "children": "LAST_30_DAYS",
                              "key": "9",
                              "value": "last_30_days",
                            },
                            Object {
                              "children": "LAST_90_DAYS",
                              "key": "10",
                              "value": "last_90_days",
                            },
                            Object {
                              "children": "LAST_180_DAYS",
                              "key": "11",
                              "value": "last_180_days",
                            },
                            Object {
                              "children": "LAST_365_DAYS",
                              "key": "12",
                              "value": "last_365_days",
                            },
                            Object {
                              "children": "ALL_TIME",
                              "key": "13",
                              "value": "all_time",
                            },
                            Object {
                              "children": "SET_DATE",
                              "key": "14",
                              "value": "date",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={
                          Set {
                            "date",
                          }
                        }
                        virtual={true}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={
                    Object {
                      "minWidth": null,
                      "width": null,
                    }
                  }
                  popupTransitionName="slide-up"
                  prefixCls="ant-select-dropdown"
                  showAction={Array []}
                >
                  <Selector
                    accessibilityIndex={0}
                    activeValue={null}
                    className=""
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="SET_DATE"
                          >
                            SET_DATE
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    id="rc_select_TEST_OR_SSR"
                    inputElement={null}
                    inputIcon={[Function]}
                    key="trigger"
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value="date"
                    values={
                      Array [
                        Object {
                          "disabled": undefined,
                          "key": "date",
                          "label": "SET_DATE",
                          "value": "date",
                        },
                      ]
                    }
                  >
                    <div
                      className="ant-select-selector"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SingleSelector
                        accessibilityIndex={0}
                        activeValue={null}
                        className=""
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        domRef={
                          Object {
                            "current": <div
                              class="ant-select-selector"
                            >
                              <span
                                class="ant-select-selection-search"
                              >
                                <input
                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                  aria-autocomplete="list"
                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                  aria-haspopup="listbox"
                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                  autocomplete="off"
                                  class="ant-select-selection-search-input"
                                  id="rc_select_TEST_OR_SSR"
                                  readonly=""
                                  role="combobox"
                                  style="opacity: 0;"
                                  type="search"
                                  unselectable="on"
                                  value=""
                                />
                              </span>
                              <span
                                class="ant-select-selection-item"
                                title="SET_DATE"
                              >
                                SET_DATE
                              </span>
                            </div>,
                          }
                        }
                        dropdownClassName=""
                        id="rc_select_TEST_OR_SSR"
                        inputElement={null}
                        inputIcon={[Function]}
                        inputRef={
                          Object {
                            "current": <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />,
                          }
                        }
                        listHeight={256}
                        listItemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onInputCompositionEnd={[Function]}
                        onInputCompositionStart={[Function]}
                        onInputKeyDown={[Function]}
                        onInputMouseDown={[Function]}
                        onInputPaste={[Function]}
                        onSearch={[Function]}
                        onSearchSubmit={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        prefixCls="ant-select"
                        removeIcon={<ForwardRef(CloseOutlined) />}
                        searchValue=""
                        showSearch={false}
                        tokenWithEnter={false}
                        transitionName="slide-up"
                        value="date"
                        values={
                          Array [
                            Object {
                              "disabled": undefined,
                              "key": "date",
                              "label": "SET_DATE",
                              "value": "date",
                            },
                          ]
                        }
                      >
                        <span
                          className="ant-select-selection-search"
                        >
                          <Input
                            accessibilityIndex={0}
                            attrs={Object {}}
                            editable={false}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            prefixCls="ant-select"
                            value=""
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autoComplete="off"
                              className="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              readOnly={true}
                              role="combobox"
                              style={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </Input>
                        </span>
                        <span
                          className="ant-select-selection-item"
                          title="SET_DATE"
                        >
                          SET_DATE
                        </span>
                      </SingleSelector>
                    </div>
                  </Selector>
                </Trigger>
              </SelectTrigger>
              <TransBtn
                className="ant-select-arrow"
                customizeIcon={[Function]}
                customizeIconProps={
                  Object {
                    "focused": false,
                    "loading": undefined,
                    "open": undefined,
                    "searchValue": "",
                    "showSearch": false,
                  }
                }
              >
                <span
                  aria-hidden={true}
                  className="ant-select-arrow"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "WebkitUserSelect": "none",
                      "userSelect": "none",
                    }
                  }
                  unselectable="on"
                >
                  <ForwardRef(DownOutlined)
                    className="ant-select-suffix"
                  >
                    <AntdIcon
                      className="ant-select-suffix"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="down"
                        className="anticon anticon-down ant-select-suffix"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "down",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(DownOutlined)>
                </span>
              </TransBtn>
            </div>
          </ForwardRef(Select)>
        </Select>
      </ForwardRef(InternalSelect)>
      <DateRangePicker
        dateFrom={"2021-10-22T00:00:00.000Z"}
        dateTo={"2021-11-22T00:00:00.000Z"}
        defaultPickerValue={
          Array [
            "2021-06-29T00:00:00.000Z",
            "2021-06-29T00:00:00.000Z",
          ]
        }
        defaultValue={
          Array [
            "2021-06-03T00:00:00.000Z",
            "2021-06-09T00:00:00.000Z",
          ]
        }
        format="DD-MM-YYYY"
        inputReadOnly={true}
        maxDate={false}
        minDate={"2020-01-01T00:00:00.000Z"}
        onChange={[Function]}
        onClear={[Function]}
        type="iso-8601"
      >
        <RangePicker
          className=""
          dateFrom={"2021-10-22T00:00:00.000Z"}
          dateTo={"2021-11-22T00:00:00.000Z"}
          defaultPickerValue={
            Array [
              "2021-06-29T00:00:00.000Z",
              "2021-06-29T00:00:00.000Z",
            ]
          }
          defaultValue={
            Array [
              "2021-06-03T00:00:00.000Z",
              "2021-06-09T00:00:00.000Z",
            ]
          }
          disabledDate={[Function]}
          format="DD-MM-YYYY"
          inputReadOnly={true}
          maxDate={false}
          minDate={"2020-01-01T00:00:00.000Z"}
          onChange={[Function]}
          onClear={[Function]}
          value={
            Array [
              "2021-10-22T00:00:00.000Z",
              "2021-11-22T00:00:00.000Z",
            ]
          }
        >
          <LocaleReceiver
            componentName="DatePicker"
            defaultLocale={[Function]}
          >
            <RangePicker
              allowClear={true}
              className=""
              clearIcon={<ForwardRef(CloseCircleFilled) />}
              components={
                Object {
                  "button": [Function],
                  "rangeItem": [Function],
                }
              }
              dateFrom={"2021-10-22T00:00:00.000Z"}
              dateTo={"2021-11-22T00:00:00.000Z"}
              defaultPickerValue={
                Array [
                  "2021-06-29T00:00:00.000Z",
                  "2021-06-29T00:00:00.000Z",
                ]
              }
              defaultValue={
                Array [
                  "2021-06-03T00:00:00.000Z",
                  "2021-06-09T00:00:00.000Z",
                ]
              }
              disabledDate={[Function]}
              format="DD-MM-YYYY"
              generateConfig={
                Object {
                  "addDate": [Function],
                  "addMonth": [Function],
                  "addYear": [Function],
                  "getDate": [Function],
                  "getEndDate": [Function],
                  "getFixedDate": [Function],
                  "getHour": [Function],
                  "getMinute": [Function],
                  "getMonth": [Function],
                  "getNow": [Function],
                  "getSecond": [Function],
                  "getStartOfMonth": [Function],
                  "getWeekDay": [Function],
                  "getYear": [Function],
                  "isAfter": [Function],
                  "isValidate": [Function],
                  "locale": Object {
                    "format": [Function],
                    "getShortMonths": [Function],
                    "getShortWeekDays": [Function],
                    "getWeek": [Function],
                    "getWeekFirstDate": [Function],
                    "getWeekFirstDay": [Function],
                    "parse": [Function],
                  },
                  "setDate": [Function],
                  "setHour": [Function],
                  "setMinute": [Function],
                  "setMonth": [Function],
                  "setSecond": [Function],
                  "setYear": [Function],
                }
              }
              inputReadOnly={true}
              locale={
                Object {
                  "backToToday": "Back to today",
                  "clear": "Clear",
                  "dateFormat": "M/D/YYYY",
                  "dateSelect": "select date",
                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                  "dayFormat": "D",
                  "decadeSelect": "Choose a decade",
                  "locale": "en_US",
                  "month": "Month",
                  "monthBeforeYear": true,
                  "monthPlaceholder": "Select month",
                  "monthSelect": "Choose a month",
                  "nextCentury": "Next century",
                  "nextDecade": "Next decade",
                  "nextMonth": "Next month (PageDown)",
                  "nextYear": "Next year (Control + right)",
                  "now": "Now",
                  "ok": "Ok",
                  "placeholder": "Select date",
                  "previousCentury": "Last century",
                  "previousDecade": "Last decade",
                  "previousMonth": "Previous month (PageUp)",
                  "previousYear": "Last year (Control + left)",
                  "quarterPlaceholder": "Select quarter",
                  "rangeMonthPlaceholder": Array [
                    "Start month",
                    "End month",
                  ],
                  "rangePlaceholder": Array [
                    "Start date",
                    "End date",
                  ],
                  "rangeWeekPlaceholder": Array [
                    "Start week",
                    "End week",
                  ],
                  "rangeYearPlaceholder": Array [
                    "Start year",
                    "End year",
                  ],
                  "timeSelect": "select time",
                  "today": "Today",
                  "weekPlaceholder": "Select week",
                  "weekSelect": "Choose a week",
                  "year": "Year",
                  "yearFormat": "YYYY",
                  "yearPlaceholder": "Select year",
                  "yearSelect": "Choose a year",
                }
              }
              maxDate={false}
              minDate={"2020-01-01T00:00:00.000Z"}
              nextIcon={
                <span
                  className="ant-picker-next-icon"
                />
              }
              onChange={[Function]}
              onClear={[Function]}
              placeholder={
                Array [
                  "Start date",
                  "End date",
                ]
              }
              prefixCls="ant-picker"
              prevIcon={
                <span
                  className="ant-picker-prev-icon"
                />
              }
              separator={
                <span
                  aria-label="to"
                  className="ant-picker-separator"
                >
                  <ForwardRef(SwapRightOutlined) />
                </span>
              }
              suffixIcon={<ForwardRef(CalendarOutlined) />}
              superNextIcon={
                <span
                  className="ant-picker-super-next-icon"
                />
              }
              superPrevIcon={
                <span
                  className="ant-picker-super-prev-icon"
                />
              }
              transitionName="slide-up"
              value={
                Array [
                  "2021-10-22T00:00:00.000Z",
                  "2021-11-22T00:00:00.000Z",
                ]
              }
            >
              <InnerRangePicker
                allowClear={true}
                className=""
                clearIcon={<ForwardRef(CloseCircleFilled) />}
                components={
                  Object {
                    "button": [Function],
                    "rangeItem": [Function],
                  }
                }
                dateFrom={"2021-10-22T00:00:00.000Z"}
                dateTo={"2021-11-22T00:00:00.000Z"}
                defaultPickerValue={
                  Array [
                    "2021-06-29T00:00:00.000Z",
                    "2021-06-29T00:00:00.000Z",
                  ]
                }
                defaultValue={
                  Array [
                    "2021-06-03T00:00:00.000Z",
                    "2021-06-09T00:00:00.000Z",
                  ]
                }
                disabledDate={[Function]}
                format="DD-MM-YYYY"
                generateConfig={
                  Object {
                    "addDate": [Function],
                    "addMonth": [Function],
                    "addYear": [Function],
                    "getDate": [Function],
                    "getEndDate": [Function],
                    "getFixedDate": [Function],
                    "getHour": [Function],
                    "getMinute": [Function],
                    "getMonth": [Function],
                    "getNow": [Function],
                    "getSecond": [Function],
                    "getStartOfMonth": [Function],
                    "getWeekDay": [Function],
                    "getYear": [Function],
                    "isAfter": [Function],
                    "isValidate": [Function],
                    "locale": Object {
                      "format": [Function],
                      "getShortMonths": [Function],
                      "getShortWeekDays": [Function],
                      "getWeek": [Function],
                      "getWeekFirstDate": [Function],
                      "getWeekFirstDay": [Function],
                      "parse": [Function],
                    },
                    "setDate": [Function],
                    "setHour": [Function],
                    "setMinute": [Function],
                    "setMonth": [Function],
                    "setSecond": [Function],
                    "setYear": [Function],
                  }
                }
                inputReadOnly={true}
                locale={
                  Object {
                    "backToToday": "Back to today",
                    "clear": "Clear",
                    "dateFormat": "M/D/YYYY",
                    "dateSelect": "select date",
                    "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                    "dayFormat": "D",
                    "decadeSelect": "Choose a decade",
                    "locale": "en_US",
                    "month": "Month",
                    "monthBeforeYear": true,
                    "monthPlaceholder": "Select month",
                    "monthSelect": "Choose a month",
                    "nextCentury": "Next century",
                    "nextDecade": "Next decade",
                    "nextMonth": "Next month (PageDown)",
                    "nextYear": "Next year (Control + right)",
                    "now": "Now",
                    "ok": "Ok",
                    "placeholder": "Select date",
                    "previousCentury": "Last century",
                    "previousDecade": "Last decade",
                    "previousMonth": "Previous month (PageUp)",
                    "previousYear": "Last year (Control + left)",
                    "quarterPlaceholder": "Select quarter",
                    "rangeMonthPlaceholder": Array [
                      "Start month",
                      "End month",
                    ],
                    "rangePlaceholder": Array [
                      "Start date",
                      "End date",
                    ],
                    "rangeWeekPlaceholder": Array [
                      "Start week",
                      "End week",
                    ],
                    "rangeYearPlaceholder": Array [
                      "Start year",
                      "End year",
                    ],
                    "timeSelect": "select time",
                    "today": "Today",
                    "weekPlaceholder": "Select week",
                    "weekSelect": "Choose a week",
                    "year": "Year",
                    "yearFormat": "YYYY",
                    "yearPlaceholder": "Select year",
                    "yearSelect": "Choose a year",
                  }
                }
                maxDate={false}
                minDate={"2020-01-01T00:00:00.000Z"}
                nextIcon={
                  <span
                    className="ant-picker-next-icon"
                  />
                }
                onChange={[Function]}
                onClear={[Function]}
                pickerRef={
                  Object {
                    "current": Object {
                      "blur": [Function],
                      "focus": [Function],
                    },
                  }
                }
                placeholder={
                  Array [
                    "Start date",
                    "End date",
                  ]
                }
                prefixCls="ant-picker"
                prevIcon={
                  <span
                    className="ant-picker-prev-icon"
                  />
                }
                separator={
                  <span
                    aria-label="to"
                    className="ant-picker-separator"
                  >
                    <ForwardRef(SwapRightOutlined) />
                  </span>
                }
                suffixIcon={<ForwardRef(CalendarOutlined) />}
                superNextIcon={
                  <span
                    className="ant-picker-super-next-icon"
                  />
                }
                superPrevIcon={
                  <span
                    className="ant-picker-super-prev-icon"
                  />
                }
                transitionName="slide-up"
                value={
                  Array [
                    "2021-10-22T00:00:00.000Z",
                    "2021-11-22T00:00:00.000Z",
                  ]
                }
              >
                <PickerTrigger
                  popupElement={
                    <div
                      className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                      style={
                        Object {
                          "minWidth": 0,
                        }
                      }
                    >
                      <div
                        className="ant-picker-range-arrow"
                        style={
                          Object {
                            "left": 0,
                          }
                        }
                      />
                      <div
                        className="ant-picker-panel-container"
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "marginLeft": 0,
                          }
                        }
                      >
                        <React.Fragment>
                          <div
                            className="ant-picker-panels"
                          >
                            <React.Fragment>
                              <Context.Provider
                                value={
                                  Object {
                                    "hoverRangedValue": null,
                                    "inRange": true,
                                    "panelPosition": "left",
                                    "rangedValue": Array [
                                      null,
                                      null,
                                    ],
                                  }
                                }
                              >
                                <PickerPanel
                                  allowClear={true}
                                  className="ant-picker-panel-focused"
                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                  components={
                                    Object {
                                      "button": [Function],
                                      "rangeItem": [Function],
                                    }
                                  }
                                  dateFrom={"2021-10-22T00:00:00.000Z"}
                                  dateRender={null}
                                  dateTo={"2021-11-22T00:00:00.000Z"}
                                  defaultValue={null}
                                  disabledDate={[Function]}
                                  disabledTime={[Function]}
                                  format="DD-MM-YYYY"
                                  generateConfig={
                                    Object {
                                      "addDate": [Function],
                                      "addMonth": [Function],
                                      "addYear": [Function],
                                      "getDate": [Function],
                                      "getEndDate": [Function],
                                      "getFixedDate": [Function],
                                      "getHour": [Function],
                                      "getMinute": [Function],
                                      "getMonth": [Function],
                                      "getNow": [Function],
                                      "getSecond": [Function],
                                      "getStartOfMonth": [Function],
                                      "getWeekDay": [Function],
                                      "getYear": [Function],
                                      "isAfter": [Function],
                                      "isValidate": [Function],
                                      "locale": Object {
                                        "format": [Function],
                                        "getShortMonths": [Function],
                                        "getShortWeekDays": [Function],
                                        "getWeek": [Function],
                                        "getWeekFirstDate": [Function],
                                        "getWeekFirstDay": [Function],
                                        "parse": [Function],
                                      },
                                      "setDate": [Function],
                                      "setHour": [Function],
                                      "setMinute": [Function],
                                      "setMonth": [Function],
                                      "setSecond": [Function],
                                      "setYear": [Function],
                                    }
                                  }
                                  inputReadOnly={true}
                                  locale={
                                    Object {
                                      "backToToday": "Back to today",
                                      "clear": "Clear",
                                      "dateFormat": "M/D/YYYY",
                                      "dateSelect": "select date",
                                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                      "dayFormat": "D",
                                      "decadeSelect": "Choose a decade",
                                      "locale": "en_US",
                                      "month": "Month",
                                      "monthBeforeYear": true,
                                      "monthPlaceholder": "Select month",
                                      "monthSelect": "Choose a month",
                                      "nextCentury": "Next century",
                                      "nextDecade": "Next decade",
                                      "nextMonth": "Next month (PageDown)",
                                      "nextYear": "Next year (Control + right)",
                                      "now": "Now",
                                      "ok": "Ok",
                                      "placeholder": "Select date",
                                      "previousCentury": "Last century",
                                      "previousDecade": "Last decade",
                                      "previousMonth": "Previous month (PageUp)",
                                      "previousYear": "Last year (Control + left)",
                                      "quarterPlaceholder": "Select quarter",
                                      "rangeMonthPlaceholder": Array [
                                        "Start month",
                                        "End month",
                                      ],
                                      "rangePlaceholder": Array [
                                        "Start date",
                                        "End date",
                                      ],
                                      "rangeWeekPlaceholder": Array [
                                        "Start week",
                                        "End week",
                                      ],
                                      "rangeYearPlaceholder": Array [
                                        "Start year",
                                        "End year",
                                      ],
                                      "timeSelect": "select time",
                                      "today": "Today",
                                      "weekPlaceholder": "Select week",
                                      "weekSelect": "Choose a week",
                                      "year": "Year",
                                      "yearFormat": "YYYY",
                                      "yearPlaceholder": "Select year",
                                      "yearSelect": "Choose a year",
                                    }
                                  }
                                  maxDate={false}
                                  minDate={"2020-01-01T00:00:00.000Z"}
                                  mode="date"
                                  nextIcon={
                                    <span
                                      className="ant-picker-next-icon"
                                    />
                                  }
                                  onClear={[Function]}
                                  onOk={null}
                                  onPanelChange={[Function]}
                                  onPickerValueChange={[Function]}
                                  pickerRef={
                                    Object {
                                      "current": Object {
                                        "blur": [Function],
                                        "focus": [Function],
                                      },
                                    }
                                  }
                                  pickerValue={"2021-06-29T00:00:00.000Z"}
                                  placeholder={
                                    Array [
                                      "Start date",
                                      "End date",
                                    ]
                                  }
                                  prefixCls="ant-picker"
                                  prevIcon={
                                    <span
                                      className="ant-picker-prev-icon"
                                    />
                                  }
                                  separator={
                                    <span
                                      aria-label="to"
                                      className="ant-picker-separator"
                                    >
                                      <ForwardRef(SwapRightOutlined) />
                                    </span>
                                  }
                                  suffixIcon={<ForwardRef(CalendarOutlined) />}
                                  superNextIcon={
                                    <span
                                      className="ant-picker-super-next-icon"
                                    />
                                  }
                                  superPrevIcon={
                                    <span
                                      className="ant-picker-super-prev-icon"
                                    />
                                  }
                                  tabIndex={-1}
                                  transitionName="slide-up"
                                  value={null}
                                />
                              </Context.Provider>
                              <Context.Provider
                                value={
                                  Object {
                                    "hoverRangedValue": null,
                                    "inRange": true,
                                    "panelPosition": "right",
                                    "rangedValue": Array [
                                      null,
                                      null,
                                    ],
                                  }
                                }
                              >
                                <PickerPanel
                                  allowClear={true}
                                  className="ant-picker-panel-focused"
                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                  components={
                                    Object {
                                      "button": [Function],
                                      "rangeItem": [Function],
                                    }
                                  }
                                  dateFrom={"2021-10-22T00:00:00.000Z"}
                                  dateRender={null}
                                  dateTo={"2021-11-22T00:00:00.000Z"}
                                  defaultValue={null}
                                  disabledDate={[Function]}
                                  disabledTime={[Function]}
                                  format="DD-MM-YYYY"
                                  generateConfig={
                                    Object {
                                      "addDate": [Function],
                                      "addMonth": [Function],
                                      "addYear": [Function],
                                      "getDate": [Function],
                                      "getEndDate": [Function],
                                      "getFixedDate": [Function],
                                      "getHour": [Function],
                                      "getMinute": [Function],
                                      "getMonth": [Function],
                                      "getNow": [Function],
                                      "getSecond": [Function],
                                      "getStartOfMonth": [Function],
                                      "getWeekDay": [Function],
                                      "getYear": [Function],
                                      "isAfter": [Function],
                                      "isValidate": [Function],
                                      "locale": Object {
                                        "format": [Function],
                                        "getShortMonths": [Function],
                                        "getShortWeekDays": [Function],
                                        "getWeek": [Function],
                                        "getWeekFirstDate": [Function],
                                        "getWeekFirstDay": [Function],
                                        "parse": [Function],
                                      },
                                      "setDate": [Function],
                                      "setHour": [Function],
                                      "setMinute": [Function],
                                      "setMonth": [Function],
                                      "setSecond": [Function],
                                      "setYear": [Function],
                                    }
                                  }
                                  inputReadOnly={true}
                                  locale={
                                    Object {
                                      "backToToday": "Back to today",
                                      "clear": "Clear",
                                      "dateFormat": "M/D/YYYY",
                                      "dateSelect": "select date",
                                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                      "dayFormat": "D",
                                      "decadeSelect": "Choose a decade",
                                      "locale": "en_US",
                                      "month": "Month",
                                      "monthBeforeYear": true,
                                      "monthPlaceholder": "Select month",
                                      "monthSelect": "Choose a month",
                                      "nextCentury": "Next century",
                                      "nextDecade": "Next decade",
                                      "nextMonth": "Next month (PageDown)",
                                      "nextYear": "Next year (Control + right)",
                                      "now": "Now",
                                      "ok": "Ok",
                                      "placeholder": "Select date",
                                      "previousCentury": "Last century",
                                      "previousDecade": "Last decade",
                                      "previousMonth": "Previous month (PageUp)",
                                      "previousYear": "Last year (Control + left)",
                                      "quarterPlaceholder": "Select quarter",
                                      "rangeMonthPlaceholder": Array [
                                        "Start month",
                                        "End month",
                                      ],
                                      "rangePlaceholder": Array [
                                        "Start date",
                                        "End date",
                                      ],
                                      "rangeWeekPlaceholder": Array [
                                        "Start week",
                                        "End week",
                                      ],
                                      "rangeYearPlaceholder": Array [
                                        "Start year",
                                        "End year",
                                      ],
                                      "timeSelect": "select time",
                                      "today": "Today",
                                      "weekPlaceholder": "Select week",
                                      "weekSelect": "Choose a week",
                                      "year": "Year",
                                      "yearFormat": "YYYY",
                                      "yearPlaceholder": "Select year",
                                      "yearSelect": "Choose a year",
                                    }
                                  }
                                  maxDate={false}
                                  minDate={"2020-01-01T00:00:00.000Z"}
                                  mode="date"
                                  nextIcon={
                                    <span
                                      className="ant-picker-next-icon"
                                    />
                                  }
                                  onClear={[Function]}
                                  onOk={null}
                                  onPanelChange={[Function]}
                                  onPickerValueChange={[Function]}
                                  pickerRef={
                                    Object {
                                      "current": Object {
                                        "blur": [Function],
                                        "focus": [Function],
                                      },
                                    }
                                  }
                                  pickerValue={"2021-07-29T00:00:00.000Z"}
                                  placeholder={
                                    Array [
                                      "Start date",
                                      "End date",
                                    ]
                                  }
                                  prefixCls="ant-picker"
                                  prevIcon={
                                    <span
                                      className="ant-picker-prev-icon"
                                    />
                                  }
                                  separator={
                                    <span
                                      aria-label="to"
                                      className="ant-picker-separator"
                                    >
                                      <ForwardRef(SwapRightOutlined) />
                                    </span>
                                  }
                                  suffixIcon={<ForwardRef(CalendarOutlined) />}
                                  superNextIcon={
                                    <span
                                      className="ant-picker-super-next-icon"
                                    />
                                  }
                                  superPrevIcon={
                                    <span
                                      className="ant-picker-super-prev-icon"
                                    />
                                  }
                                  tabIndex={-1}
                                  transitionName="slide-up"
                                  value={null}
                                />
                              </Context.Provider>
                            </React.Fragment>
                          </div>
                        </React.Fragment>
                      </div>
                    </div>
                  }
                  prefixCls="ant-picker"
                  range={true}
                  transitionName="slide-up"
                  visible={false}
                >
                  <Trigger
                    action={Array []}
                    afterPopupVisibleChange={[Function]}
                    autoDestroy={false}
                    blurDelay={0.15}
                    builtinPlacements={
                      Object {
                        "bottomLeft": Object {
                          "offset": Array [
                            0,
                            4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tl",
                            "bl",
                          ],
                        },
                        "bottomRight": Object {
                          "offset": Array [
                            0,
                            4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tr",
                            "br",
                          ],
                        },
                        "topLeft": Object {
                          "offset": Array [
                            0,
                            -4,
                          ],
                          "overflow": Object {
                            "adjustX": 0,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "bl",
                            "tl",
                          ],
                        },
                        "topRight": Object {
                          "offset": Array [
                            0,
                            -4,
                          ],
                          "overflow": Object {
                            "adjustX": 0,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "br",
                            "tr",
                          ],
                        },
                      }
                    }
                    defaultPopupVisible={false}
                    destroyPopupOnHide={false}
                    focusDelay={0}
                    getDocument={[Function]}
                    getPopupClassNameFromAlign={[Function]}
                    hideAction={Array []}
                    mask={false}
                    maskClosable={true}
                    mouseEnterDelay={0}
                    mouseLeaveDelay={0.1}
                    onPopupAlign={[Function]}
                    onPopupVisibleChange={[Function]}
                    popup={
                      <div
                        className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                        style={
                          Object {
                            "minWidth": 0,
                          }
                        }
                      >
                        <div
                          className="ant-picker-range-arrow"
                          style={
                            Object {
                              "left": 0,
                            }
                          }
                        />
                        <div
                          className="ant-picker-panel-container"
                          onMouseDown={[Function]}
                          style={
                            Object {
                              "marginLeft": 0,
                            }
                          }
                        >
                          <React.Fragment>
                            <div
                              className="ant-picker-panels"
                            >
                              <React.Fragment>
                                <Context.Provider
                                  value={
                                    Object {
                                      "hoverRangedValue": null,
                                      "inRange": true,
                                      "panelPosition": "left",
                                      "rangedValue": Array [
                                        null,
                                        null,
                                      ],
                                    }
                                  }
                                >
                                  <PickerPanel
                                    allowClear={true}
                                    className="ant-picker-panel-focused"
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    components={
                                      Object {
                                        "button": [Function],
                                        "rangeItem": [Function],
                                      }
                                    }
                                    dateFrom={"2021-10-22T00:00:00.000Z"}
                                    dateRender={null}
                                    dateTo={"2021-11-22T00:00:00.000Z"}
                                    defaultValue={null}
                                    disabledDate={[Function]}
                                    disabledTime={[Function]}
                                    format="DD-MM-YYYY"
                                    generateConfig={
                                      Object {
                                        "addDate": [Function],
                                        "addMonth": [Function],
                                        "addYear": [Function],
                                        "getDate": [Function],
                                        "getEndDate": [Function],
                                        "getFixedDate": [Function],
                                        "getHour": [Function],
                                        "getMinute": [Function],
                                        "getMonth": [Function],
                                        "getNow": [Function],
                                        "getSecond": [Function],
                                        "getStartOfMonth": [Function],
                                        "getWeekDay": [Function],
                                        "getYear": [Function],
                                        "isAfter": [Function],
                                        "isValidate": [Function],
                                        "locale": Object {
                                          "format": [Function],
                                          "getShortMonths": [Function],
                                          "getShortWeekDays": [Function],
                                          "getWeek": [Function],
                                          "getWeekFirstDate": [Function],
                                          "getWeekFirstDay": [Function],
                                          "parse": [Function],
                                        },
                                        "setDate": [Function],
                                        "setHour": [Function],
                                        "setMinute": [Function],
                                        "setMonth": [Function],
                                        "setSecond": [Function],
                                        "setYear": [Function],
                                      }
                                    }
                                    inputReadOnly={true}
                                    locale={
                                      Object {
                                        "backToToday": "Back to today",
                                        "clear": "Clear",
                                        "dateFormat": "M/D/YYYY",
                                        "dateSelect": "select date",
                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                        "dayFormat": "D",
                                        "decadeSelect": "Choose a decade",
                                        "locale": "en_US",
                                        "month": "Month",
                                        "monthBeforeYear": true,
                                        "monthPlaceholder": "Select month",
                                        "monthSelect": "Choose a month",
                                        "nextCentury": "Next century",
                                        "nextDecade": "Next decade",
                                        "nextMonth": "Next month (PageDown)",
                                        "nextYear": "Next year (Control + right)",
                                        "now": "Now",
                                        "ok": "Ok",
                                        "placeholder": "Select date",
                                        "previousCentury": "Last century",
                                        "previousDecade": "Last decade",
                                        "previousMonth": "Previous month (PageUp)",
                                        "previousYear": "Last year (Control + left)",
                                        "quarterPlaceholder": "Select quarter",
                                        "rangeMonthPlaceholder": Array [
                                          "Start month",
                                          "End month",
                                        ],
                                        "rangePlaceholder": Array [
                                          "Start date",
                                          "End date",
                                        ],
                                        "rangeWeekPlaceholder": Array [
                                          "Start week",
                                          "End week",
                                        ],
                                        "rangeYearPlaceholder": Array [
                                          "Start year",
                                          "End year",
                                        ],
                                        "timeSelect": "select time",
                                        "today": "Today",
                                        "weekPlaceholder": "Select week",
                                        "weekSelect": "Choose a week",
                                        "year": "Year",
                                        "yearFormat": "YYYY",
                                        "yearPlaceholder": "Select year",
                                        "yearSelect": "Choose a year",
                                      }
                                    }
                                    maxDate={false}
                                    minDate={"2020-01-01T00:00:00.000Z"}
                                    mode="date"
                                    nextIcon={
                                      <span
                                        className="ant-picker-next-icon"
                                      />
                                    }
                                    onClear={[Function]}
                                    onOk={null}
                                    onPanelChange={[Function]}
                                    onPickerValueChange={[Function]}
                                    pickerRef={
                                      Object {
                                        "current": Object {
                                          "blur": [Function],
                                          "focus": [Function],
                                        },
                                      }
                                    }
                                    pickerValue={"2021-06-29T00:00:00.000Z"}
                                    placeholder={
                                      Array [
                                        "Start date",
                                        "End date",
                                      ]
                                    }
                                    prefixCls="ant-picker"
                                    prevIcon={
                                      <span
                                        className="ant-picker-prev-icon"
                                      />
                                    }
                                    separator={
                                      <span
                                        aria-label="to"
                                        className="ant-picker-separator"
                                      >
                                        <ForwardRef(SwapRightOutlined) />
                                      </span>
                                    }
                                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                                    superNextIcon={
                                      <span
                                        className="ant-picker-super-next-icon"
                                      />
                                    }
                                    superPrevIcon={
                                      <span
                                        className="ant-picker-super-prev-icon"
                                      />
                                    }
                                    tabIndex={-1}
                                    transitionName="slide-up"
                                    value={null}
                                  />
                                </Context.Provider>
                                <Context.Provider
                                  value={
                                    Object {
                                      "hoverRangedValue": null,
                                      "inRange": true,
                                      "panelPosition": "right",
                                      "rangedValue": Array [
                                        null,
                                        null,
                                      ],
                                    }
                                  }
                                >
                                  <PickerPanel
                                    allowClear={true}
                                    className="ant-picker-panel-focused"
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    components={
                                      Object {
                                        "button": [Function],
                                        "rangeItem": [Function],
                                      }
                                    }
                                    dateFrom={"2021-10-22T00:00:00.000Z"}
                                    dateRender={null}
                                    dateTo={"2021-11-22T00:00:00.000Z"}
                                    defaultValue={null}
                                    disabledDate={[Function]}
                                    disabledTime={[Function]}
                                    format="DD-MM-YYYY"
                                    generateConfig={
                                      Object {
                                        "addDate": [Function],
                                        "addMonth": [Function],
                                        "addYear": [Function],
                                        "getDate": [Function],
                                        "getEndDate": [Function],
                                        "getFixedDate": [Function],
                                        "getHour": [Function],
                                        "getMinute": [Function],
                                        "getMonth": [Function],
                                        "getNow": [Function],
                                        "getSecond": [Function],
                                        "getStartOfMonth": [Function],
                                        "getWeekDay": [Function],
                                        "getYear": [Function],
                                        "isAfter": [Function],
                                        "isValidate": [Function],
                                        "locale": Object {
                                          "format": [Function],
                                          "getShortMonths": [Function],
                                          "getShortWeekDays": [Function],
                                          "getWeek": [Function],
                                          "getWeekFirstDate": [Function],
                                          "getWeekFirstDay": [Function],
                                          "parse": [Function],
                                        },
                                        "setDate": [Function],
                                        "setHour": [Function],
                                        "setMinute": [Function],
                                        "setMonth": [Function],
                                        "setSecond": [Function],
                                        "setYear": [Function],
                                      }
                                    }
                                    inputReadOnly={true}
                                    locale={
                                      Object {
                                        "backToToday": "Back to today",
                                        "clear": "Clear",
                                        "dateFormat": "M/D/YYYY",
                                        "dateSelect": "select date",
                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                        "dayFormat": "D",
                                        "decadeSelect": "Choose a decade",
                                        "locale": "en_US",
                                        "month": "Month",
                                        "monthBeforeYear": true,
                                        "monthPlaceholder": "Select month",
                                        "monthSelect": "Choose a month",
                                        "nextCentury": "Next century",
                                        "nextDecade": "Next decade",
                                        "nextMonth": "Next month (PageDown)",
                                        "nextYear": "Next year (Control + right)",
                                        "now": "Now",
                                        "ok": "Ok",
                                        "placeholder": "Select date",
                                        "previousCentury": "Last century",
                                        "previousDecade": "Last decade",
                                        "previousMonth": "Previous month (PageUp)",
                                        "previousYear": "Last year (Control + left)",
                                        "quarterPlaceholder": "Select quarter",
                                        "rangeMonthPlaceholder": Array [
                                          "Start month",
                                          "End month",
                                        ],
                                        "rangePlaceholder": Array [
                                          "Start date",
                                          "End date",
                                        ],
                                        "rangeWeekPlaceholder": Array [
                                          "Start week",
                                          "End week",
                                        ],
                                        "rangeYearPlaceholder": Array [
                                          "Start year",
                                          "End year",
                                        ],
                                        "timeSelect": "select time",
                                        "today": "Today",
                                        "weekPlaceholder": "Select week",
                                        "weekSelect": "Choose a week",
                                        "year": "Year",
                                        "yearFormat": "YYYY",
                                        "yearPlaceholder": "Select year",
                                        "yearSelect": "Choose a year",
                                      }
                                    }
                                    maxDate={false}
                                    minDate={"2020-01-01T00:00:00.000Z"}
                                    mode="date"
                                    nextIcon={
                                      <span
                                        className="ant-picker-next-icon"
                                      />
                                    }
                                    onClear={[Function]}
                                    onOk={null}
                                    onPanelChange={[Function]}
                                    onPickerValueChange={[Function]}
                                    pickerRef={
                                      Object {
                                        "current": Object {
                                          "blur": [Function],
                                          "focus": [Function],
                                        },
                                      }
                                    }
                                    pickerValue={"2021-07-29T00:00:00.000Z"}
                                    placeholder={
                                      Array [
                                        "Start date",
                                        "End date",
                                      ]
                                    }
                                    prefixCls="ant-picker"
                                    prevIcon={
                                      <span
                                        className="ant-picker-prev-icon"
                                      />
                                    }
                                    separator={
                                      <span
                                        aria-label="to"
                                        className="ant-picker-separator"
                                      >
                                        <ForwardRef(SwapRightOutlined) />
                                      </span>
                                    }
                                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                                    superNextIcon={
                                      <span
                                        className="ant-picker-super-next-icon"
                                      />
                                    }
                                    superPrevIcon={
                                      <span
                                        className="ant-picker-super-prev-icon"
                                      />
                                    }
                                    tabIndex={-1}
                                    transitionName="slide-up"
                                    value={null}
                                  />
                                </Context.Provider>
                              </React.Fragment>
                            </div>
                          </React.Fragment>
                        </div>
                      </div>
                    }
                    popupAlign={Object {}}
                    popupClassName="ant-picker-dropdown-range"
                    popupPlacement="bottomLeft"
                    popupStyle={Object {}}
                    popupTransitionName="slide-up"
                    popupVisible={false}
                    prefixCls="ant-picker-dropdown"
                    showAction={Array []}
                  >
                    <div
                      className="ant-picker ant-picker-range"
                      key="trigger"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <div
                        className="ant-picker-input ant-picker-input-active"
                      >
                        <input
                          autoComplete="off"
                          disabled={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          placeholder="Start date"
                          readOnly={true}
                          size={12}
                          value="03-06-2021"
                        />
                      </div>
                      <div
                        className="ant-picker-range-separator"
                      >
                        <span
                          aria-label="to"
                          className="ant-picker-separator"
                        >
                          <ForwardRef(SwapRightOutlined)>
                            <AntdIcon
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "0 0 1024 1024",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "swap-right",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <span
                                aria-label="swap-right"
                                className="anticon anticon-swap-right"
                                role="img"
                              >
                                <IconReact
                                  icon={
                                    Object {
                                      "icon": Object {
                                        "attrs": Object {
                                          "focusable": "false",
                                          "viewBox": "0 0 1024 1024",
                                        },
                                        "children": Array [
                                          Object {
                                            "attrs": Object {
                                              "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                            },
                                            "tag": "path",
                                          },
                                        ],
                                        "tag": "svg",
                                      },
                                      "name": "swap-right",
                                      "theme": "outlined",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    data-icon="swap-right"
                                    fill="currentColor"
                                    focusable="false"
                                    height="1em"
                                    key="svg-swap-right"
                                    viewBox="0 0 1024 1024"
                                    width="1em"
                                  >
                                    <path
                                      d="M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z"
                                      key="svg-swap-right-svg-0"
                                    />
                                  </svg>
                                </IconReact>
                              </span>
                            </AntdIcon>
                          </ForwardRef(SwapRightOutlined)>
                        </span>
                      </div>
                      <div
                        className="ant-picker-input"
                      >
                        <input
                          autoComplete="off"
                          disabled={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          placeholder="End date"
                          readOnly={true}
                          size={12}
                          value="09-06-2021"
                        />
                      </div>
                      <div
                        className="ant-picker-active-bar"
                        style={
                          Object {
                            "left": 0,
                            "position": "absolute",
                            "width": 0,
                          }
                        }
                      />
                      <span
                        className="ant-picker-suffix"
                      >
                        <ForwardRef(CalendarOutlined)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "calendar",
                                "theme": "outlined",
                              }
                            }
                          >
                            <span
                              aria-label="calendar"
                              className="anticon anticon-calendar"
                              role="img"
                            >
                              <IconReact
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "calendar",
                                    "theme": "outlined",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  data-icon="calendar"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-calendar"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                    key="svg-calendar-svg-0"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(CalendarOutlined)>
                      </span>
                      <span
                        className="ant-picker-clear"
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                      >
                        <ForwardRef(CloseCircleFilled)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "close-circle",
                                "theme": "filled",
                              }
                            }
                          >
                            <span
                              aria-label="close-circle"
                              className="anticon anticon-close-circle"
                              role="img"
                            >
                              <IconReact
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "close-circle",
                                    "theme": "filled",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  data-icon="close-circle"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-close-circle"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                    key="svg-close-circle-svg-0"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(CloseCircleFilled)>
                      </span>
                    </div>
                  </Trigger>
                </PickerTrigger>
              </InnerRangePicker>
            </RangePicker>
          </LocaleReceiver>
        </RangePicker>
      </DateRangePicker>
    </div>
    <div
      className="prev-period-container"
    >
      <span
        className="period-title"
      >
        SELECT_PREV_PERIOD
      </span>
      <ForwardRef(InternalSelect)
        disabled={false}
        onChange={[Function]}
        value="previous"
      >
        <Select
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          disabled={false}
          dropdownClassName=""
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          menuItemSelectedIcon={null}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          onChange={[Function]}
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
          value="previous"
        >
          <ForwardRef(Select)
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            disabled={false}
            dropdownClassName=""
            inputIcon={[Function]}
            listHeight={256}
            listItemHeight={24}
            menuItemSelectedIcon={null}
            notFoundContent={
              <Context.Consumer>
                [Function]
              </Context.Consumer>
            }
            onChange={[Function]}
            prefixCls="ant-select"
            removeIcon={<ForwardRef(CloseOutlined) />}
            transitionName="slide-up"
            value="previous"
          >
            <div
              className="ant-select ant-select-single ant-select-show-arrow"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
            >
              <SelectTrigger
                containerWidth={null}
                disabled={false}
                dropdownClassName=""
                empty={false}
                getTriggerDOMNode={[Function]}
                popupElement={
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "PREVIOUS",
                            "disabled": false,
                            "key": "0",
                            "value": "previous",
                          },
                          "groupOption": false,
                          "key": "0",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_WEEK",
                            "disabled": true,
                            "key": "1",
                            "value": "prev_last_week",
                          },
                          "groupOption": false,
                          "key": "1",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_MONTH",
                            "disabled": true,
                            "key": "2",
                            "value": "prev_last_month",
                          },
                          "groupOption": false,
                          "key": "2",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_QUARTER",
                            "disabled": false,
                            "key": "3",
                            "value": "prev_last_quarter",
                          },
                          "groupOption": false,
                          "key": "3",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_YEAR",
                            "disabled": false,
                            "key": "4",
                            "value": "prev_last_year",
                          },
                          "groupOption": false,
                          "key": "4",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_DATE",
                            "disabled": false,
                            "key": "5",
                            "value": "prev_date",
                          },
                          "groupOption": false,
                          "key": "5",
                        },
                      ]
                    }
                    height={256}
                    id="rc_select_TEST_OR_SSR"
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "PREVIOUS",
                          "disabled": false,
                          "key": "0",
                          "value": "previous",
                        },
                        Object {
                          "children": "PREV_LAST_WEEK",
                          "disabled": true,
                          "key": "1",
                          "value": "prev_last_week",
                        },
                        Object {
                          "children": "PREV_LAST_MONTH",
                          "disabled": true,
                          "key": "2",
                          "value": "prev_last_month",
                        },
                        Object {
                          "children": "PREV_LAST_QUARTER",
                          "disabled": false,
                          "key": "3",
                          "value": "prev_last_quarter",
                        },
                        Object {
                          "children": "PREV_LAST_YEAR",
                          "disabled": false,
                          "key": "4",
                          "value": "prev_last_year",
                        },
                        Object {
                          "children": "PREV_DATE",
                          "disabled": false,
                          "key": "5",
                          "value": "prev_date",
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        "previous",
                      }
                    }
                    virtual={true}
                  />
                }
                prefixCls="ant-select"
                transitionName="slide-up"
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  getTriggerDOMNode={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": "PREVIOUS",
                                "disabled": false,
                                "key": "0",
                                "value": "previous",
                              },
                              "groupOption": false,
                              "key": "0",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_WEEK",
                                "disabled": true,
                                "key": "1",
                                "value": "prev_last_week",
                              },
                              "groupOption": false,
                              "key": "1",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_MONTH",
                                "disabled": true,
                                "key": "2",
                                "value": "prev_last_month",
                              },
                              "groupOption": false,
                              "key": "2",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_QUARTER",
                                "disabled": false,
                                "key": "3",
                                "value": "prev_last_quarter",
                              },
                              "groupOption": false,
                              "key": "3",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_YEAR",
                                "disabled": false,
                                "key": "4",
                                "value": "prev_last_year",
                              },
                              "groupOption": false,
                              "key": "4",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_DATE",
                                "disabled": false,
                                "key": "5",
                                "value": "prev_date",
                              },
                              "groupOption": false,
                              "key": "5",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onActiveValue={[Function]}
                        onMouseEnter={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": "PREVIOUS",
                              "disabled": false,
                              "key": "0",
                              "value": "previous",
                            },
                            Object {
                              "children": "PREV_LAST_WEEK",
                              "disabled": true,
                              "key": "1",
                              "value": "prev_last_week",
                            },
                            Object {
                              "children": "PREV_LAST_MONTH",
                              "disabled": true,
                              "key": "2",
                              "value": "prev_last_month",
                            },
                            Object {
                              "children": "PREV_LAST_QUARTER",
                              "disabled": false,
                              "key": "3",
                              "value": "prev_last_quarter",
                            },
                            Object {
                              "children": "PREV_LAST_YEAR",
                              "disabled": false,
                              "key": "4",
                              "value": "prev_last_year",
                            },
                            Object {
                              "children": "PREV_DATE",
                              "disabled": false,
                              "key": "5",
                              "value": "prev_date",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={
                          Set {
                            "previous",
                          }
                        }
                        virtual={true}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={
                    Object {
                      "minWidth": null,
                      "width": null,
                    }
                  }
                  popupTransitionName="slide-up"
                  prefixCls="ant-select-dropdown"
                  showAction={Array []}
                >
                  <Selector
                    accessibilityIndex={0}
                    activeValue={null}
                    className=""
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    disabled={false}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="PREVIOUS"
                          >
                            PREVIOUS
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    id="rc_select_TEST_OR_SSR"
                    inputElement={null}
                    inputIcon={[Function]}
                    key="trigger"
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value="previous"
                    values={
                      Array [
                        Object {
                          "disabled": false,
                          "key": "previous",
                          "label": "PREVIOUS",
                          "value": "previous",
                        },
                      ]
                    }
                  >
                    <div
                      className="ant-select-selector"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SingleSelector
                        accessibilityIndex={0}
                        activeValue={null}
                        className=""
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        disabled={false}
                        domRef={
                          Object {
                            "current": <div
                              class="ant-select-selector"
                            >
                              <span
                                class="ant-select-selection-search"
                              >
                                <input
                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                  aria-autocomplete="list"
                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                  aria-haspopup="listbox"
                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                  autocomplete="off"
                                  class="ant-select-selection-search-input"
                                  id="rc_select_TEST_OR_SSR"
                                  readonly=""
                                  role="combobox"
                                  style="opacity: 0;"
                                  type="search"
                                  unselectable="on"
                                  value=""
                                />
                              </span>
                              <span
                                class="ant-select-selection-item"
                                title="PREVIOUS"
                              >
                                PREVIOUS
                              </span>
                            </div>,
                          }
                        }
                        dropdownClassName=""
                        id="rc_select_TEST_OR_SSR"
                        inputElement={null}
                        inputIcon={[Function]}
                        inputRef={
                          Object {
                            "current": <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />,
                          }
                        }
                        listHeight={256}
                        listItemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onInputCompositionEnd={[Function]}
                        onInputCompositionStart={[Function]}
                        onInputKeyDown={[Function]}
                        onInputMouseDown={[Function]}
                        onInputPaste={[Function]}
                        onSearch={[Function]}
                        onSearchSubmit={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        prefixCls="ant-select"
                        removeIcon={<ForwardRef(CloseOutlined) />}
                        searchValue=""
                        showSearch={false}
                        tokenWithEnter={false}
                        transitionName="slide-up"
                        value="previous"
                        values={
                          Array [
                            Object {
                              "disabled": false,
                              "key": "previous",
                              "label": "PREVIOUS",
                              "value": "previous",
                            },
                          ]
                        }
                      >
                        <span
                          className="ant-select-selection-search"
                        >
                          <Input
                            accessibilityIndex={0}
                            attrs={Object {}}
                            disabled={false}
                            editable={false}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            prefixCls="ant-select"
                            value=""
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autoComplete="off"
                              className="ant-select-selection-search-input"
                              disabled={false}
                              id="rc_select_TEST_OR_SSR"
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              readOnly={true}
                              role="combobox"
                              style={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </Input>
                        </span>
                        <span
                          className="ant-select-selection-item"
                          title="PREVIOUS"
                        >
                          PREVIOUS
                        </span>
                      </SingleSelector>
                    </div>
                  </Selector>
                </Trigger>
              </SelectTrigger>
              <TransBtn
                className="ant-select-arrow"
                customizeIcon={[Function]}
                customizeIconProps={
                  Object {
                    "focused": false,
                    "loading": undefined,
                    "open": undefined,
                    "searchValue": "",
                    "showSearch": false,
                  }
                }
              >
                <span
                  aria-hidden={true}
                  className="ant-select-arrow"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "WebkitUserSelect": "none",
                      "userSelect": "none",
                    }
                  }
                  unselectable="on"
                >
                  <ForwardRef(DownOutlined)
                    className="ant-select-suffix"
                  >
                    <AntdIcon
                      className="ant-select-suffix"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="down"
                        className="anticon anticon-down ant-select-suffix"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "down",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(DownOutlined)>
                </span>
              </TransBtn>
            </div>
          </ForwardRef(Select)>
        </Select>
      </ForwardRef(InternalSelect)>
    </div>
  </div>
</PeriodSelect>
`;

exports[`PeriodSelect should select prev period with custom data 1`] = `
<PeriodSelect
  clientDate="2021-06-29"
  clientStartDate="2020-01-01"
  dateConfig={
    Object {
      "datePicker": Object {
        "endDate": "2021-06-09",
        "startDate": "2021-06-03",
      },
      "prevDatePicker": Object {
        "endDate": "2021-06-02",
        "startDate": "2021-05-07",
      },
      "selectedPeriod": "last_7_days",
      "selectedPrevPeriod": "previous",
    }
  }
  format="DD-MM-YYYY"
  limitMaxDate={false}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "datePicker": Object {
              "endDate": "2021-11-22",
              "startDate": "2021-10-22",
            },
            "prevDatePicker": Object {
              "endDate": "2021-10-21",
              "startDate": "2021-09-20",
            },
            "selectedPeriod": "date",
            "selectedPrevPeriod": "previous",
          },
        ],
        Array [
          Object {
            "datePicker": Object {
              "endDate": "2021-06-09",
              "startDate": "2021-06-03",
            },
            "prevDatePicker": Object {
              "endDate": "2021-06-02",
              "startDate": "2021-05-07",
            },
            "selectedPeriod": "last_7_days",
            "selectedPrevPeriod": "previous",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  periodLabel="SELECT_PERIOD"
  prevPeriodLabel="SELECT_PREV_PERIOD"
  type="iso-8601"
>
  <div
    className="period-picker-wrapper"
  >
    <div
      className="period-container"
    >
      <span
        className="period-title"
      >
        SELECT_PERIOD
      </span>
      <ForwardRef(InternalSelect)
        onChange={[Function]}
        value="last_7_days"
      >
        <Select
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          dropdownClassName=""
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          menuItemSelectedIcon={null}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          onChange={[Function]}
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
          value="last_7_days"
        >
          <ForwardRef(Select)
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            dropdownClassName=""
            inputIcon={[Function]}
            listHeight={256}
            listItemHeight={24}
            menuItemSelectedIcon={null}
            notFoundContent={
              <Context.Consumer>
                [Function]
              </Context.Consumer>
            }
            onChange={[Function]}
            prefixCls="ant-select"
            removeIcon={<ForwardRef(CloseOutlined) />}
            transitionName="slide-up"
            value="last_7_days"
          >
            <div
              className="ant-select ant-select-single ant-select-show-arrow"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
            >
              <SelectTrigger
                containerWidth={null}
                dropdownClassName=""
                empty={false}
                getTriggerDOMNode={[Function]}
                popupElement={
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "LAST_UPDATE_DATE",
                            "key": "0",
                            "value": "last_update_date",
                          },
                          "groupOption": false,
                          "key": "0",
                        },
                        Object {
                          "data": Object {
                            "children": "PENULTIMATE_UPDATE_DATE",
                            "key": "1",
                            "value": "penultimate_update_date",
                          },
                          "groupOption": false,
                          "key": "1",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_7_DAYS",
                            "key": "2",
                            "value": "last_7_days",
                          },
                          "groupOption": false,
                          "key": "2",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_WEEK",
                            "key": "3",
                            "value": "prev_week",
                          },
                          "groupOption": false,
                          "key": "3",
                        },
                        Object {
                          "data": Object {
                            "children": "WEEK_BEGIN",
                            "key": "4",
                            "value": "week_begin",
                          },
                          "groupOption": false,
                          "key": "4",
                        },
                        Object {
                          "data": Object {
                            "children": "MONTH_BEGIN",
                            "key": "5",
                            "value": "month_begin",
                          },
                          "groupOption": false,
                          "key": "5",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_MONTH",
                            "key": "6",
                            "value": "prev_month",
                          },
                          "groupOption": false,
                          "key": "6",
                        },
                        Object {
                          "data": Object {
                            "children": "SEASON_BEGIN",
                            "key": "7",
                            "value": "season_begin",
                          },
                          "groupOption": false,
                          "key": "7",
                        },
                        Object {
                          "data": Object {
                            "children": "YEAR_BEGIN",
                            "key": "8",
                            "value": "year_begin",
                          },
                          "groupOption": false,
                          "key": "8",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_30_DAYS",
                            "key": "9",
                            "value": "last_30_days",
                          },
                          "groupOption": false,
                          "key": "9",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_90_DAYS",
                            "key": "10",
                            "value": "last_90_days",
                          },
                          "groupOption": false,
                          "key": "10",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_180_DAYS",
                            "key": "11",
                            "value": "last_180_days",
                          },
                          "groupOption": false,
                          "key": "11",
                        },
                        Object {
                          "data": Object {
                            "children": "LAST_365_DAYS",
                            "key": "12",
                            "value": "last_365_days",
                          },
                          "groupOption": false,
                          "key": "12",
                        },
                        Object {
                          "data": Object {
                            "children": "ALL_TIME",
                            "key": "13",
                            "value": "all_time",
                          },
                          "groupOption": false,
                          "key": "13",
                        },
                        Object {
                          "data": Object {
                            "children": "SET_DATE",
                            "key": "14",
                            "value": "date",
                          },
                          "groupOption": false,
                          "key": "14",
                        },
                      ]
                    }
                    height={256}
                    id="rc_select_TEST_OR_SSR"
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "LAST_UPDATE_DATE",
                          "key": "0",
                          "value": "last_update_date",
                        },
                        Object {
                          "children": "PENULTIMATE_UPDATE_DATE",
                          "key": "1",
                          "value": "penultimate_update_date",
                        },
                        Object {
                          "children": "LAST_7_DAYS",
                          "key": "2",
                          "value": "last_7_days",
                        },
                        Object {
                          "children": "PREV_WEEK",
                          "key": "3",
                          "value": "prev_week",
                        },
                        Object {
                          "children": "WEEK_BEGIN",
                          "key": "4",
                          "value": "week_begin",
                        },
                        Object {
                          "children": "MONTH_BEGIN",
                          "key": "5",
                          "value": "month_begin",
                        },
                        Object {
                          "children": "PREV_MONTH",
                          "key": "6",
                          "value": "prev_month",
                        },
                        Object {
                          "children": "SEASON_BEGIN",
                          "key": "7",
                          "value": "season_begin",
                        },
                        Object {
                          "children": "YEAR_BEGIN",
                          "key": "8",
                          "value": "year_begin",
                        },
                        Object {
                          "children": "LAST_30_DAYS",
                          "key": "9",
                          "value": "last_30_days",
                        },
                        Object {
                          "children": "LAST_90_DAYS",
                          "key": "10",
                          "value": "last_90_days",
                        },
                        Object {
                          "children": "LAST_180_DAYS",
                          "key": "11",
                          "value": "last_180_days",
                        },
                        Object {
                          "children": "LAST_365_DAYS",
                          "key": "12",
                          "value": "last_365_days",
                        },
                        Object {
                          "children": "ALL_TIME",
                          "key": "13",
                          "value": "all_time",
                        },
                        Object {
                          "children": "SET_DATE",
                          "key": "14",
                          "value": "date",
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        "last_7_days",
                      }
                    }
                    virtual={true}
                  />
                }
                prefixCls="ant-select"
                transitionName="slide-up"
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  getTriggerDOMNode={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": "LAST_UPDATE_DATE",
                                "key": "0",
                                "value": "last_update_date",
                              },
                              "groupOption": false,
                              "key": "0",
                            },
                            Object {
                              "data": Object {
                                "children": "PENULTIMATE_UPDATE_DATE",
                                "key": "1",
                                "value": "penultimate_update_date",
                              },
                              "groupOption": false,
                              "key": "1",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_7_DAYS",
                                "key": "2",
                                "value": "last_7_days",
                              },
                              "groupOption": false,
                              "key": "2",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_WEEK",
                                "key": "3",
                                "value": "prev_week",
                              },
                              "groupOption": false,
                              "key": "3",
                            },
                            Object {
                              "data": Object {
                                "children": "WEEK_BEGIN",
                                "key": "4",
                                "value": "week_begin",
                              },
                              "groupOption": false,
                              "key": "4",
                            },
                            Object {
                              "data": Object {
                                "children": "MONTH_BEGIN",
                                "key": "5",
                                "value": "month_begin",
                              },
                              "groupOption": false,
                              "key": "5",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_MONTH",
                                "key": "6",
                                "value": "prev_month",
                              },
                              "groupOption": false,
                              "key": "6",
                            },
                            Object {
                              "data": Object {
                                "children": "SEASON_BEGIN",
                                "key": "7",
                                "value": "season_begin",
                              },
                              "groupOption": false,
                              "key": "7",
                            },
                            Object {
                              "data": Object {
                                "children": "YEAR_BEGIN",
                                "key": "8",
                                "value": "year_begin",
                              },
                              "groupOption": false,
                              "key": "8",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_30_DAYS",
                                "key": "9",
                                "value": "last_30_days",
                              },
                              "groupOption": false,
                              "key": "9",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_90_DAYS",
                                "key": "10",
                                "value": "last_90_days",
                              },
                              "groupOption": false,
                              "key": "10",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_180_DAYS",
                                "key": "11",
                                "value": "last_180_days",
                              },
                              "groupOption": false,
                              "key": "11",
                            },
                            Object {
                              "data": Object {
                                "children": "LAST_365_DAYS",
                                "key": "12",
                                "value": "last_365_days",
                              },
                              "groupOption": false,
                              "key": "12",
                            },
                            Object {
                              "data": Object {
                                "children": "ALL_TIME",
                                "key": "13",
                                "value": "all_time",
                              },
                              "groupOption": false,
                              "key": "13",
                            },
                            Object {
                              "data": Object {
                                "children": "SET_DATE",
                                "key": "14",
                                "value": "date",
                              },
                              "groupOption": false,
                              "key": "14",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onActiveValue={[Function]}
                        onMouseEnter={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": "LAST_UPDATE_DATE",
                              "key": "0",
                              "value": "last_update_date",
                            },
                            Object {
                              "children": "PENULTIMATE_UPDATE_DATE",
                              "key": "1",
                              "value": "penultimate_update_date",
                            },
                            Object {
                              "children": "LAST_7_DAYS",
                              "key": "2",
                              "value": "last_7_days",
                            },
                            Object {
                              "children": "PREV_WEEK",
                              "key": "3",
                              "value": "prev_week",
                            },
                            Object {
                              "children": "WEEK_BEGIN",
                              "key": "4",
                              "value": "week_begin",
                            },
                            Object {
                              "children": "MONTH_BEGIN",
                              "key": "5",
                              "value": "month_begin",
                            },
                            Object {
                              "children": "PREV_MONTH",
                              "key": "6",
                              "value": "prev_month",
                            },
                            Object {
                              "children": "SEASON_BEGIN",
                              "key": "7",
                              "value": "season_begin",
                            },
                            Object {
                              "children": "YEAR_BEGIN",
                              "key": "8",
                              "value": "year_begin",
                            },
                            Object {
                              "children": "LAST_30_DAYS",
                              "key": "9",
                              "value": "last_30_days",
                            },
                            Object {
                              "children": "LAST_90_DAYS",
                              "key": "10",
                              "value": "last_90_days",
                            },
                            Object {
                              "children": "LAST_180_DAYS",
                              "key": "11",
                              "value": "last_180_days",
                            },
                            Object {
                              "children": "LAST_365_DAYS",
                              "key": "12",
                              "value": "last_365_days",
                            },
                            Object {
                              "children": "ALL_TIME",
                              "key": "13",
                              "value": "all_time",
                            },
                            Object {
                              "children": "SET_DATE",
                              "key": "14",
                              "value": "date",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={
                          Set {
                            "last_7_days",
                          }
                        }
                        virtual={true}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={
                    Object {
                      "minWidth": null,
                      "width": null,
                    }
                  }
                  popupTransitionName="slide-up"
                  prefixCls="ant-select-dropdown"
                  showAction={Array []}
                >
                  <Selector
                    accessibilityIndex={0}
                    activeValue={null}
                    className=""
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="LAST_7_DAYS"
                          >
                            LAST_7_DAYS
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    id="rc_select_TEST_OR_SSR"
                    inputElement={null}
                    inputIcon={[Function]}
                    key="trigger"
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value="last_7_days"
                    values={
                      Array [
                        Object {
                          "disabled": undefined,
                          "key": "last_7_days",
                          "label": "LAST_7_DAYS",
                          "value": "last_7_days",
                        },
                      ]
                    }
                  >
                    <div
                      className="ant-select-selector"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SingleSelector
                        accessibilityIndex={0}
                        activeValue={null}
                        className=""
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        domRef={
                          Object {
                            "current": <div
                              class="ant-select-selector"
                            >
                              <span
                                class="ant-select-selection-search"
                              >
                                <input
                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                  aria-autocomplete="list"
                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                  aria-haspopup="listbox"
                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                  autocomplete="off"
                                  class="ant-select-selection-search-input"
                                  id="rc_select_TEST_OR_SSR"
                                  readonly=""
                                  role="combobox"
                                  style="opacity: 0;"
                                  type="search"
                                  unselectable="on"
                                  value=""
                                />
                              </span>
                              <span
                                class="ant-select-selection-item"
                                title="LAST_7_DAYS"
                              >
                                LAST_7_DAYS
                              </span>
                            </div>,
                          }
                        }
                        dropdownClassName=""
                        id="rc_select_TEST_OR_SSR"
                        inputElement={null}
                        inputIcon={[Function]}
                        inputRef={
                          Object {
                            "current": <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />,
                          }
                        }
                        listHeight={256}
                        listItemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onInputCompositionEnd={[Function]}
                        onInputCompositionStart={[Function]}
                        onInputKeyDown={[Function]}
                        onInputMouseDown={[Function]}
                        onInputPaste={[Function]}
                        onSearch={[Function]}
                        onSearchSubmit={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        prefixCls="ant-select"
                        removeIcon={<ForwardRef(CloseOutlined) />}
                        searchValue=""
                        showSearch={false}
                        tokenWithEnter={false}
                        transitionName="slide-up"
                        value="last_7_days"
                        values={
                          Array [
                            Object {
                              "disabled": undefined,
                              "key": "last_7_days",
                              "label": "LAST_7_DAYS",
                              "value": "last_7_days",
                            },
                          ]
                        }
                      >
                        <span
                          className="ant-select-selection-search"
                        >
                          <Input
                            accessibilityIndex={0}
                            attrs={Object {}}
                            editable={false}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            prefixCls="ant-select"
                            value=""
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autoComplete="off"
                              className="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              readOnly={true}
                              role="combobox"
                              style={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </Input>
                        </span>
                        <span
                          className="ant-select-selection-item"
                          title="LAST_7_DAYS"
                        >
                          LAST_7_DAYS
                        </span>
                      </SingleSelector>
                    </div>
                  </Selector>
                </Trigger>
              </SelectTrigger>
              <TransBtn
                className="ant-select-arrow"
                customizeIcon={[Function]}
                customizeIconProps={
                  Object {
                    "focused": false,
                    "loading": undefined,
                    "open": undefined,
                    "searchValue": "",
                    "showSearch": false,
                  }
                }
              >
                <span
                  aria-hidden={true}
                  className="ant-select-arrow"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "WebkitUserSelect": "none",
                      "userSelect": "none",
                    }
                  }
                  unselectable="on"
                >
                  <ForwardRef(DownOutlined)
                    className="ant-select-suffix"
                  >
                    <AntdIcon
                      className="ant-select-suffix"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="down"
                        className="anticon anticon-down ant-select-suffix"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "down",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(DownOutlined)>
                </span>
              </TransBtn>
            </div>
          </ForwardRef(Select)>
        </Select>
      </ForwardRef(InternalSelect)>
    </div>
    <div
      className="prev-period-container"
    >
      <span
        className="period-title"
      >
        SELECT_PREV_PERIOD
      </span>
      <ForwardRef(InternalSelect)
        disabled={false}
        onChange={[Function]}
        value="prev_date"
      >
        <Select
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          disabled={false}
          dropdownClassName=""
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          menuItemSelectedIcon={null}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          onChange={[Function]}
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          transitionName="slide-up"
          value="prev_date"
        >
          <ForwardRef(Select)
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            disabled={false}
            dropdownClassName=""
            inputIcon={[Function]}
            listHeight={256}
            listItemHeight={24}
            menuItemSelectedIcon={null}
            notFoundContent={
              <Context.Consumer>
                [Function]
              </Context.Consumer>
            }
            onChange={[Function]}
            prefixCls="ant-select"
            removeIcon={<ForwardRef(CloseOutlined) />}
            transitionName="slide-up"
            value="prev_date"
          >
            <div
              className="ant-select ant-select-single ant-select-show-arrow"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
            >
              <SelectTrigger
                containerWidth={null}
                disabled={false}
                dropdownClassName=""
                empty={false}
                getTriggerDOMNode={[Function]}
                popupElement={
                  <ForwardRef(OptionList)
                    childrenAsData={true}
                    defaultActiveFirstOption={true}
                    flattenOptions={
                      Array [
                        Object {
                          "data": Object {
                            "children": "PREVIOUS",
                            "disabled": false,
                            "key": "0",
                            "value": "previous",
                          },
                          "groupOption": false,
                          "key": "0",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_WEEK",
                            "disabled": true,
                            "key": "1",
                            "value": "prev_last_week",
                          },
                          "groupOption": false,
                          "key": "1",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_MONTH",
                            "disabled": false,
                            "key": "2",
                            "value": "prev_last_month",
                          },
                          "groupOption": false,
                          "key": "2",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_QUARTER",
                            "disabled": false,
                            "key": "3",
                            "value": "prev_last_quarter",
                          },
                          "groupOption": false,
                          "key": "3",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_LAST_YEAR",
                            "disabled": false,
                            "key": "4",
                            "value": "prev_last_year",
                          },
                          "groupOption": false,
                          "key": "4",
                        },
                        Object {
                          "data": Object {
                            "children": "PREV_DATE",
                            "disabled": false,
                            "key": "5",
                            "value": "prev_date",
                          },
                          "groupOption": false,
                          "key": "5",
                        },
                      ]
                    }
                    height={256}
                    id="rc_select_TEST_OR_SSR"
                    itemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onActiveValue={[Function]}
                    onMouseEnter={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    options={
                      Array [
                        Object {
                          "children": "PREVIOUS",
                          "disabled": false,
                          "key": "0",
                          "value": "previous",
                        },
                        Object {
                          "children": "PREV_LAST_WEEK",
                          "disabled": true,
                          "key": "1",
                          "value": "prev_last_week",
                        },
                        Object {
                          "children": "PREV_LAST_MONTH",
                          "disabled": false,
                          "key": "2",
                          "value": "prev_last_month",
                        },
                        Object {
                          "children": "PREV_LAST_QUARTER",
                          "disabled": false,
                          "key": "3",
                          "value": "prev_last_quarter",
                        },
                        Object {
                          "children": "PREV_LAST_YEAR",
                          "disabled": false,
                          "key": "4",
                          "value": "prev_last_year",
                        },
                        Object {
                          "children": "PREV_DATE",
                          "disabled": false,
                          "key": "5",
                          "value": "prev_date",
                        },
                      ]
                    }
                    prefixCls="ant-select"
                    searchValue=""
                    values={
                      Set {
                        "prev_date",
                      }
                    }
                    virtual={true}
                  />
                }
                prefixCls="ant-select"
                transitionName="slide-up"
              >
                <Trigger
                  action={Array []}
                  afterPopupVisibleChange={[Function]}
                  autoDestroy={false}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottomLeft": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                      },
                      "bottomRight": Object {
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                      },
                      "topLeft": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                      },
                      "topRight": Object {
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 0,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  getTriggerDOMNode={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  popup={
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": "PREVIOUS",
                                "disabled": false,
                                "key": "0",
                                "value": "previous",
                              },
                              "groupOption": false,
                              "key": "0",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_WEEK",
                                "disabled": true,
                                "key": "1",
                                "value": "prev_last_week",
                              },
                              "groupOption": false,
                              "key": "1",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_MONTH",
                                "disabled": false,
                                "key": "2",
                                "value": "prev_last_month",
                              },
                              "groupOption": false,
                              "key": "2",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_QUARTER",
                                "disabled": false,
                                "key": "3",
                                "value": "prev_last_quarter",
                              },
                              "groupOption": false,
                              "key": "3",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_LAST_YEAR",
                                "disabled": false,
                                "key": "4",
                                "value": "prev_last_year",
                              },
                              "groupOption": false,
                              "key": "4",
                            },
                            Object {
                              "data": Object {
                                "children": "PREV_DATE",
                                "disabled": false,
                                "key": "5",
                                "value": "prev_date",
                              },
                              "groupOption": false,
                              "key": "5",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onActiveValue={[Function]}
                        onMouseEnter={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": "PREVIOUS",
                              "disabled": false,
                              "key": "0",
                              "value": "previous",
                            },
                            Object {
                              "children": "PREV_LAST_WEEK",
                              "disabled": true,
                              "key": "1",
                              "value": "prev_last_week",
                            },
                            Object {
                              "children": "PREV_LAST_MONTH",
                              "disabled": false,
                              "key": "2",
                              "value": "prev_last_month",
                            },
                            Object {
                              "children": "PREV_LAST_QUARTER",
                              "disabled": false,
                              "key": "3",
                              "value": "prev_last_quarter",
                            },
                            Object {
                              "children": "PREV_LAST_YEAR",
                              "disabled": false,
                              "key": "4",
                              "value": "prev_last_year",
                            },
                            Object {
                              "children": "PREV_DATE",
                              "disabled": false,
                              "key": "5",
                              "value": "prev_date",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={
                          Set {
                            "prev_date",
                          }
                        }
                        virtual={true}
                      />
                    </div>
                  }
                  popupAlign={Object {}}
                  popupClassName=""
                  popupPlacement="bottomLeft"
                  popupStyle={
                    Object {
                      "minWidth": null,
                      "width": null,
                    }
                  }
                  popupTransitionName="slide-up"
                  prefixCls="ant-select-dropdown"
                  showAction={Array []}
                >
                  <Selector
                    accessibilityIndex={0}
                    activeValue={null}
                    className=""
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    disabled={false}
                    domRef={
                      Object {
                        "current": <div
                          class="ant-select-selector"
                        >
                          <span
                            class="ant-select-selection-search"
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </span>
                          <span
                            class="ant-select-selection-item"
                            title="PREV_DATE"
                          >
                            PREV_DATE
                          </span>
                        </div>,
                      }
                    }
                    dropdownClassName=""
                    id="rc_select_TEST_OR_SSR"
                    inputElement={null}
                    inputIcon={[Function]}
                    key="trigger"
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    multiple={false}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    onSearch={[Function]}
                    onSearchSubmit={[Function]}
                    onSelect={[Function]}
                    onToggleOpen={[Function]}
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    searchValue=""
                    showSearch={false}
                    tokenWithEnter={false}
                    transitionName="slide-up"
                    value="prev_date"
                    values={
                      Array [
                        Object {
                          "disabled": false,
                          "key": "prev_date",
                          "label": "PREV_DATE",
                          "value": "prev_date",
                        },
                      ]
                    }
                  >
                    <div
                      className="ant-select-selector"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SingleSelector
                        accessibilityIndex={0}
                        activeValue={null}
                        className=""
                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                        disabled={false}
                        domRef={
                          Object {
                            "current": <div
                              class="ant-select-selector"
                            >
                              <span
                                class="ant-select-selection-search"
                              >
                                <input
                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                  aria-autocomplete="list"
                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                  aria-haspopup="listbox"
                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                  autocomplete="off"
                                  class="ant-select-selection-search-input"
                                  id="rc_select_TEST_OR_SSR"
                                  readonly=""
                                  role="combobox"
                                  style="opacity: 0;"
                                  type="search"
                                  unselectable="on"
                                  value=""
                                />
                              </span>
                              <span
                                class="ant-select-selection-item"
                                title="PREV_DATE"
                              >
                                PREV_DATE
                              </span>
                            </div>,
                          }
                        }
                        dropdownClassName=""
                        id="rc_select_TEST_OR_SSR"
                        inputElement={null}
                        inputIcon={[Function]}
                        inputRef={
                          Object {
                            "current": <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autocomplete="off"
                              class="ant-select-selection-search-input"
                              id="rc_select_TEST_OR_SSR"
                              readonly=""
                              role="combobox"
                              style="opacity: 0;"
                              type="search"
                              unselectable="on"
                              value=""
                            />,
                          }
                        }
                        listHeight={256}
                        listItemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onChange={[Function]}
                        onInputChange={[Function]}
                        onInputCompositionEnd={[Function]}
                        onInputCompositionStart={[Function]}
                        onInputKeyDown={[Function]}
                        onInputMouseDown={[Function]}
                        onInputPaste={[Function]}
                        onSearch={[Function]}
                        onSearchSubmit={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        prefixCls="ant-select"
                        removeIcon={<ForwardRef(CloseOutlined) />}
                        searchValue=""
                        showSearch={false}
                        tokenWithEnter={false}
                        transitionName="slide-up"
                        value="prev_date"
                        values={
                          Array [
                            Object {
                              "disabled": false,
                              "key": "prev_date",
                              "label": "PREV_DATE",
                              "value": "prev_date",
                            },
                          ]
                        }
                      >
                        <span
                          className="ant-select-selection-search"
                        >
                          <Input
                            accessibilityIndex={0}
                            attrs={Object {}}
                            disabled={false}
                            editable={false}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            prefixCls="ant-select"
                            value=""
                          >
                            <input
                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                              aria-autocomplete="list"
                              aria-controls="rc_select_TEST_OR_SSR_list"
                              aria-haspopup="listbox"
                              aria-owns="rc_select_TEST_OR_SSR_list"
                              autoComplete="off"
                              className="ant-select-selection-search-input"
                              disabled={false}
                              id="rc_select_TEST_OR_SSR"
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              readOnly={true}
                              role="combobox"
                              style={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              type="search"
                              unselectable="on"
                              value=""
                            />
                          </Input>
                        </span>
                        <span
                          className="ant-select-selection-item"
                          title="PREV_DATE"
                        >
                          PREV_DATE
                        </span>
                      </SingleSelector>
                    </div>
                  </Selector>
                </Trigger>
              </SelectTrigger>
              <TransBtn
                className="ant-select-arrow"
                customizeIcon={[Function]}
                customizeIconProps={
                  Object {
                    "focused": false,
                    "loading": undefined,
                    "open": undefined,
                    "searchValue": "",
                    "showSearch": false,
                  }
                }
              >
                <span
                  aria-hidden={true}
                  className="ant-select-arrow"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "WebkitUserSelect": "none",
                      "userSelect": "none",
                    }
                  }
                  unselectable="on"
                >
                  <ForwardRef(DownOutlined)
                    className="ant-select-suffix"
                  >
                    <AntdIcon
                      className="ant-select-suffix"
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "down",
                          "theme": "outlined",
                        }
                      }
                    >
                      <span
                        aria-label="down"
                        className="anticon anticon-down ant-select-suffix"
                        role="img"
                      >
                        <IconReact
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "down",
                              "theme": "outlined",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </span>
                    </AntdIcon>
                  </ForwardRef(DownOutlined)>
                </span>
              </TransBtn>
            </div>
          </ForwardRef(Select)>
        </Select>
      </ForwardRef(InternalSelect)>
      <DateRangePicker
        dateFrom={"2021-10-22T00:00:00.000Z"}
        dateTo={"2021-11-22T00:00:00.000Z"}
        defaultPickerValue={
          Array [
            "2021-06-29T00:00:00.000Z",
            "2021-06-29T00:00:00.000Z",
          ]
        }
        defaultValue={
          Array [
            "2021-05-07T00:00:00.000Z",
            "2021-06-02T00:00:00.000Z",
          ]
        }
        format="DD-MM-YYYY"
        inputReadOnly={true}
        maxDate={false}
        minDate={"2020-01-01T00:00:00.000Z"}
        onChange={[Function]}
        onClear={[Function]}
        type="iso-8601"
      >
        <RangePicker
          className=""
          dateFrom={"2021-10-22T00:00:00.000Z"}
          dateTo={"2021-11-22T00:00:00.000Z"}
          defaultPickerValue={
            Array [
              "2021-06-29T00:00:00.000Z",
              "2021-06-29T00:00:00.000Z",
            ]
          }
          defaultValue={
            Array [
              "2021-05-07T00:00:00.000Z",
              "2021-06-02T00:00:00.000Z",
            ]
          }
          disabledDate={[Function]}
          format="DD-MM-YYYY"
          inputReadOnly={true}
          maxDate={false}
          minDate={"2020-01-01T00:00:00.000Z"}
          onChange={[Function]}
          onClear={[Function]}
          value={
            Array [
              "2021-10-22T00:00:00.000Z",
              "2021-11-22T00:00:00.000Z",
            ]
          }
        >
          <LocaleReceiver
            componentName="DatePicker"
            defaultLocale={[Function]}
          >
            <RangePicker
              allowClear={true}
              className=""
              clearIcon={<ForwardRef(CloseCircleFilled) />}
              components={
                Object {
                  "button": [Function],
                  "rangeItem": [Function],
                }
              }
              dateFrom={"2021-10-22T00:00:00.000Z"}
              dateTo={"2021-11-22T00:00:00.000Z"}
              defaultPickerValue={
                Array [
                  "2021-06-29T00:00:00.000Z",
                  "2021-06-29T00:00:00.000Z",
                ]
              }
              defaultValue={
                Array [
                  "2021-05-07T00:00:00.000Z",
                  "2021-06-02T00:00:00.000Z",
                ]
              }
              disabledDate={[Function]}
              format="DD-MM-YYYY"
              generateConfig={
                Object {
                  "addDate": [Function],
                  "addMonth": [Function],
                  "addYear": [Function],
                  "getDate": [Function],
                  "getEndDate": [Function],
                  "getFixedDate": [Function],
                  "getHour": [Function],
                  "getMinute": [Function],
                  "getMonth": [Function],
                  "getNow": [Function],
                  "getSecond": [Function],
                  "getStartOfMonth": [Function],
                  "getWeekDay": [Function],
                  "getYear": [Function],
                  "isAfter": [Function],
                  "isValidate": [Function],
                  "locale": Object {
                    "format": [Function],
                    "getShortMonths": [Function],
                    "getShortWeekDays": [Function],
                    "getWeek": [Function],
                    "getWeekFirstDate": [Function],
                    "getWeekFirstDay": [Function],
                    "parse": [Function],
                  },
                  "setDate": [Function],
                  "setHour": [Function],
                  "setMinute": [Function],
                  "setMonth": [Function],
                  "setSecond": [Function],
                  "setYear": [Function],
                }
              }
              inputReadOnly={true}
              locale={
                Object {
                  "backToToday": "Back to today",
                  "clear": "Clear",
                  "dateFormat": "M/D/YYYY",
                  "dateSelect": "select date",
                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                  "dayFormat": "D",
                  "decadeSelect": "Choose a decade",
                  "locale": "en_US",
                  "month": "Month",
                  "monthBeforeYear": true,
                  "monthPlaceholder": "Select month",
                  "monthSelect": "Choose a month",
                  "nextCentury": "Next century",
                  "nextDecade": "Next decade",
                  "nextMonth": "Next month (PageDown)",
                  "nextYear": "Next year (Control + right)",
                  "now": "Now",
                  "ok": "Ok",
                  "placeholder": "Select date",
                  "previousCentury": "Last century",
                  "previousDecade": "Last decade",
                  "previousMonth": "Previous month (PageUp)",
                  "previousYear": "Last year (Control + left)",
                  "quarterPlaceholder": "Select quarter",
                  "rangeMonthPlaceholder": Array [
                    "Start month",
                    "End month",
                  ],
                  "rangePlaceholder": Array [
                    "Start date",
                    "End date",
                  ],
                  "rangeWeekPlaceholder": Array [
                    "Start week",
                    "End week",
                  ],
                  "rangeYearPlaceholder": Array [
                    "Start year",
                    "End year",
                  ],
                  "timeSelect": "select time",
                  "today": "Today",
                  "weekPlaceholder": "Select week",
                  "weekSelect": "Choose a week",
                  "year": "Year",
                  "yearFormat": "YYYY",
                  "yearPlaceholder": "Select year",
                  "yearSelect": "Choose a year",
                }
              }
              maxDate={false}
              minDate={"2020-01-01T00:00:00.000Z"}
              nextIcon={
                <span
                  className="ant-picker-next-icon"
                />
              }
              onChange={[Function]}
              onClear={[Function]}
              placeholder={
                Array [
                  "Start date",
                  "End date",
                ]
              }
              prefixCls="ant-picker"
              prevIcon={
                <span
                  className="ant-picker-prev-icon"
                />
              }
              separator={
                <span
                  aria-label="to"
                  className="ant-picker-separator"
                >
                  <ForwardRef(SwapRightOutlined) />
                </span>
              }
              suffixIcon={<ForwardRef(CalendarOutlined) />}
              superNextIcon={
                <span
                  className="ant-picker-super-next-icon"
                />
              }
              superPrevIcon={
                <span
                  className="ant-picker-super-prev-icon"
                />
              }
              transitionName="slide-up"
              value={
                Array [
                  "2021-10-22T00:00:00.000Z",
                  "2021-11-22T00:00:00.000Z",
                ]
              }
            >
              <InnerRangePicker
                allowClear={true}
                className=""
                clearIcon={<ForwardRef(CloseCircleFilled) />}
                components={
                  Object {
                    "button": [Function],
                    "rangeItem": [Function],
                  }
                }
                dateFrom={"2021-10-22T00:00:00.000Z"}
                dateTo={"2021-11-22T00:00:00.000Z"}
                defaultPickerValue={
                  Array [
                    "2021-06-29T00:00:00.000Z",
                    "2021-06-29T00:00:00.000Z",
                  ]
                }
                defaultValue={
                  Array [
                    "2021-05-07T00:00:00.000Z",
                    "2021-06-02T00:00:00.000Z",
                  ]
                }
                disabledDate={[Function]}
                format="DD-MM-YYYY"
                generateConfig={
                  Object {
                    "addDate": [Function],
                    "addMonth": [Function],
                    "addYear": [Function],
                    "getDate": [Function],
                    "getEndDate": [Function],
                    "getFixedDate": [Function],
                    "getHour": [Function],
                    "getMinute": [Function],
                    "getMonth": [Function],
                    "getNow": [Function],
                    "getSecond": [Function],
                    "getStartOfMonth": [Function],
                    "getWeekDay": [Function],
                    "getYear": [Function],
                    "isAfter": [Function],
                    "isValidate": [Function],
                    "locale": Object {
                      "format": [Function],
                      "getShortMonths": [Function],
                      "getShortWeekDays": [Function],
                      "getWeek": [Function],
                      "getWeekFirstDate": [Function],
                      "getWeekFirstDay": [Function],
                      "parse": [Function],
                    },
                    "setDate": [Function],
                    "setHour": [Function],
                    "setMinute": [Function],
                    "setMonth": [Function],
                    "setSecond": [Function],
                    "setYear": [Function],
                  }
                }
                inputReadOnly={true}
                locale={
                  Object {
                    "backToToday": "Back to today",
                    "clear": "Clear",
                    "dateFormat": "M/D/YYYY",
                    "dateSelect": "select date",
                    "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                    "dayFormat": "D",
                    "decadeSelect": "Choose a decade",
                    "locale": "en_US",
                    "month": "Month",
                    "monthBeforeYear": true,
                    "monthPlaceholder": "Select month",
                    "monthSelect": "Choose a month",
                    "nextCentury": "Next century",
                    "nextDecade": "Next decade",
                    "nextMonth": "Next month (PageDown)",
                    "nextYear": "Next year (Control + right)",
                    "now": "Now",
                    "ok": "Ok",
                    "placeholder": "Select date",
                    "previousCentury": "Last century",
                    "previousDecade": "Last decade",
                    "previousMonth": "Previous month (PageUp)",
                    "previousYear": "Last year (Control + left)",
                    "quarterPlaceholder": "Select quarter",
                    "rangeMonthPlaceholder": Array [
                      "Start month",
                      "End month",
                    ],
                    "rangePlaceholder": Array [
                      "Start date",
                      "End date",
                    ],
                    "rangeWeekPlaceholder": Array [
                      "Start week",
                      "End week",
                    ],
                    "rangeYearPlaceholder": Array [
                      "Start year",
                      "End year",
                    ],
                    "timeSelect": "select time",
                    "today": "Today",
                    "weekPlaceholder": "Select week",
                    "weekSelect": "Choose a week",
                    "year": "Year",
                    "yearFormat": "YYYY",
                    "yearPlaceholder": "Select year",
                    "yearSelect": "Choose a year",
                  }
                }
                maxDate={false}
                minDate={"2020-01-01T00:00:00.000Z"}
                nextIcon={
                  <span
                    className="ant-picker-next-icon"
                  />
                }
                onChange={[Function]}
                onClear={[Function]}
                pickerRef={
                  Object {
                    "current": Object {
                      "blur": [Function],
                      "focus": [Function],
                    },
                  }
                }
                placeholder={
                  Array [
                    "Start date",
                    "End date",
                  ]
                }
                prefixCls="ant-picker"
                prevIcon={
                  <span
                    className="ant-picker-prev-icon"
                  />
                }
                separator={
                  <span
                    aria-label="to"
                    className="ant-picker-separator"
                  >
                    <ForwardRef(SwapRightOutlined) />
                  </span>
                }
                suffixIcon={<ForwardRef(CalendarOutlined) />}
                superNextIcon={
                  <span
                    className="ant-picker-super-next-icon"
                  />
                }
                superPrevIcon={
                  <span
                    className="ant-picker-super-prev-icon"
                  />
                }
                transitionName="slide-up"
                value={
                  Array [
                    "2021-10-22T00:00:00.000Z",
                    "2021-11-22T00:00:00.000Z",
                  ]
                }
              >
                <PickerTrigger
                  popupElement={
                    <div
                      className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                      style={
                        Object {
                          "minWidth": 0,
                        }
                      }
                    >
                      <div
                        className="ant-picker-range-arrow"
                        style={
                          Object {
                            "left": 0,
                          }
                        }
                      />
                      <div
                        className="ant-picker-panel-container"
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "marginLeft": 0,
                          }
                        }
                      >
                        <React.Fragment>
                          <div
                            className="ant-picker-panels"
                          >
                            <React.Fragment>
                              <Context.Provider
                                value={
                                  Object {
                                    "hoverRangedValue": null,
                                    "inRange": true,
                                    "panelPosition": "left",
                                    "rangedValue": Array [
                                      null,
                                      null,
                                    ],
                                  }
                                }
                              >
                                <PickerPanel
                                  allowClear={true}
                                  className="ant-picker-panel-focused"
                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                  components={
                                    Object {
                                      "button": [Function],
                                      "rangeItem": [Function],
                                    }
                                  }
                                  dateFrom={"2021-10-22T00:00:00.000Z"}
                                  dateRender={null}
                                  dateTo={"2021-11-22T00:00:00.000Z"}
                                  defaultValue={null}
                                  disabledDate={[Function]}
                                  disabledTime={[Function]}
                                  format="DD-MM-YYYY"
                                  generateConfig={
                                    Object {
                                      "addDate": [Function],
                                      "addMonth": [Function],
                                      "addYear": [Function],
                                      "getDate": [Function],
                                      "getEndDate": [Function],
                                      "getFixedDate": [Function],
                                      "getHour": [Function],
                                      "getMinute": [Function],
                                      "getMonth": [Function],
                                      "getNow": [Function],
                                      "getSecond": [Function],
                                      "getStartOfMonth": [Function],
                                      "getWeekDay": [Function],
                                      "getYear": [Function],
                                      "isAfter": [Function],
                                      "isValidate": [Function],
                                      "locale": Object {
                                        "format": [Function],
                                        "getShortMonths": [Function],
                                        "getShortWeekDays": [Function],
                                        "getWeek": [Function],
                                        "getWeekFirstDate": [Function],
                                        "getWeekFirstDay": [Function],
                                        "parse": [Function],
                                      },
                                      "setDate": [Function],
                                      "setHour": [Function],
                                      "setMinute": [Function],
                                      "setMonth": [Function],
                                      "setSecond": [Function],
                                      "setYear": [Function],
                                    }
                                  }
                                  inputReadOnly={true}
                                  locale={
                                    Object {
                                      "backToToday": "Back to today",
                                      "clear": "Clear",
                                      "dateFormat": "M/D/YYYY",
                                      "dateSelect": "select date",
                                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                      "dayFormat": "D",
                                      "decadeSelect": "Choose a decade",
                                      "locale": "en_US",
                                      "month": "Month",
                                      "monthBeforeYear": true,
                                      "monthPlaceholder": "Select month",
                                      "monthSelect": "Choose a month",
                                      "nextCentury": "Next century",
                                      "nextDecade": "Next decade",
                                      "nextMonth": "Next month (PageDown)",
                                      "nextYear": "Next year (Control + right)",
                                      "now": "Now",
                                      "ok": "Ok",
                                      "placeholder": "Select date",
                                      "previousCentury": "Last century",
                                      "previousDecade": "Last decade",
                                      "previousMonth": "Previous month (PageUp)",
                                      "previousYear": "Last year (Control + left)",
                                      "quarterPlaceholder": "Select quarter",
                                      "rangeMonthPlaceholder": Array [
                                        "Start month",
                                        "End month",
                                      ],
                                      "rangePlaceholder": Array [
                                        "Start date",
                                        "End date",
                                      ],
                                      "rangeWeekPlaceholder": Array [
                                        "Start week",
                                        "End week",
                                      ],
                                      "rangeYearPlaceholder": Array [
                                        "Start year",
                                        "End year",
                                      ],
                                      "timeSelect": "select time",
                                      "today": "Today",
                                      "weekPlaceholder": "Select week",
                                      "weekSelect": "Choose a week",
                                      "year": "Year",
                                      "yearFormat": "YYYY",
                                      "yearPlaceholder": "Select year",
                                      "yearSelect": "Choose a year",
                                    }
                                  }
                                  maxDate={false}
                                  minDate={"2020-01-01T00:00:00.000Z"}
                                  mode="date"
                                  nextIcon={
                                    <span
                                      className="ant-picker-next-icon"
                                    />
                                  }
                                  onClear={[Function]}
                                  onOk={null}
                                  onPanelChange={[Function]}
                                  onPickerValueChange={[Function]}
                                  pickerRef={
                                    Object {
                                      "current": Object {
                                        "blur": [Function],
                                        "focus": [Function],
                                      },
                                    }
                                  }
                                  pickerValue={"2021-06-29T00:00:00.000Z"}
                                  placeholder={
                                    Array [
                                      "Start date",
                                      "End date",
                                    ]
                                  }
                                  prefixCls="ant-picker"
                                  prevIcon={
                                    <span
                                      className="ant-picker-prev-icon"
                                    />
                                  }
                                  separator={
                                    <span
                                      aria-label="to"
                                      className="ant-picker-separator"
                                    >
                                      <ForwardRef(SwapRightOutlined) />
                                    </span>
                                  }
                                  suffixIcon={<ForwardRef(CalendarOutlined) />}
                                  superNextIcon={
                                    <span
                                      className="ant-picker-super-next-icon"
                                    />
                                  }
                                  superPrevIcon={
                                    <span
                                      className="ant-picker-super-prev-icon"
                                    />
                                  }
                                  tabIndex={-1}
                                  transitionName="slide-up"
                                  value={null}
                                />
                              </Context.Provider>
                              <Context.Provider
                                value={
                                  Object {
                                    "hoverRangedValue": null,
                                    "inRange": true,
                                    "panelPosition": "right",
                                    "rangedValue": Array [
                                      null,
                                      null,
                                    ],
                                  }
                                }
                              >
                                <PickerPanel
                                  allowClear={true}
                                  className="ant-picker-panel-focused"
                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                  components={
                                    Object {
                                      "button": [Function],
                                      "rangeItem": [Function],
                                    }
                                  }
                                  dateFrom={"2021-10-22T00:00:00.000Z"}
                                  dateRender={null}
                                  dateTo={"2021-11-22T00:00:00.000Z"}
                                  defaultValue={null}
                                  disabledDate={[Function]}
                                  disabledTime={[Function]}
                                  format="DD-MM-YYYY"
                                  generateConfig={
                                    Object {
                                      "addDate": [Function],
                                      "addMonth": [Function],
                                      "addYear": [Function],
                                      "getDate": [Function],
                                      "getEndDate": [Function],
                                      "getFixedDate": [Function],
                                      "getHour": [Function],
                                      "getMinute": [Function],
                                      "getMonth": [Function],
                                      "getNow": [Function],
                                      "getSecond": [Function],
                                      "getStartOfMonth": [Function],
                                      "getWeekDay": [Function],
                                      "getYear": [Function],
                                      "isAfter": [Function],
                                      "isValidate": [Function],
                                      "locale": Object {
                                        "format": [Function],
                                        "getShortMonths": [Function],
                                        "getShortWeekDays": [Function],
                                        "getWeek": [Function],
                                        "getWeekFirstDate": [Function],
                                        "getWeekFirstDay": [Function],
                                        "parse": [Function],
                                      },
                                      "setDate": [Function],
                                      "setHour": [Function],
                                      "setMinute": [Function],
                                      "setMonth": [Function],
                                      "setSecond": [Function],
                                      "setYear": [Function],
                                    }
                                  }
                                  inputReadOnly={true}
                                  locale={
                                    Object {
                                      "backToToday": "Back to today",
                                      "clear": "Clear",
                                      "dateFormat": "M/D/YYYY",
                                      "dateSelect": "select date",
                                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                      "dayFormat": "D",
                                      "decadeSelect": "Choose a decade",
                                      "locale": "en_US",
                                      "month": "Month",
                                      "monthBeforeYear": true,
                                      "monthPlaceholder": "Select month",
                                      "monthSelect": "Choose a month",
                                      "nextCentury": "Next century",
                                      "nextDecade": "Next decade",
                                      "nextMonth": "Next month (PageDown)",
                                      "nextYear": "Next year (Control + right)",
                                      "now": "Now",
                                      "ok": "Ok",
                                      "placeholder": "Select date",
                                      "previousCentury": "Last century",
                                      "previousDecade": "Last decade",
                                      "previousMonth": "Previous month (PageUp)",
                                      "previousYear": "Last year (Control + left)",
                                      "quarterPlaceholder": "Select quarter",
                                      "rangeMonthPlaceholder": Array [
                                        "Start month",
                                        "End month",
                                      ],
                                      "rangePlaceholder": Array [
                                        "Start date",
                                        "End date",
                                      ],
                                      "rangeWeekPlaceholder": Array [
                                        "Start week",
                                        "End week",
                                      ],
                                      "rangeYearPlaceholder": Array [
                                        "Start year",
                                        "End year",
                                      ],
                                      "timeSelect": "select time",
                                      "today": "Today",
                                      "weekPlaceholder": "Select week",
                                      "weekSelect": "Choose a week",
                                      "year": "Year",
                                      "yearFormat": "YYYY",
                                      "yearPlaceholder": "Select year",
                                      "yearSelect": "Choose a year",
                                    }
                                  }
                                  maxDate={false}
                                  minDate={"2020-01-01T00:00:00.000Z"}
                                  mode="date"
                                  nextIcon={
                                    <span
                                      className="ant-picker-next-icon"
                                    />
                                  }
                                  onClear={[Function]}
                                  onOk={null}
                                  onPanelChange={[Function]}
                                  onPickerValueChange={[Function]}
                                  pickerRef={
                                    Object {
                                      "current": Object {
                                        "blur": [Function],
                                        "focus": [Function],
                                      },
                                    }
                                  }
                                  pickerValue={"2021-07-29T00:00:00.000Z"}
                                  placeholder={
                                    Array [
                                      "Start date",
                                      "End date",
                                    ]
                                  }
                                  prefixCls="ant-picker"
                                  prevIcon={
                                    <span
                                      className="ant-picker-prev-icon"
                                    />
                                  }
                                  separator={
                                    <span
                                      aria-label="to"
                                      className="ant-picker-separator"
                                    >
                                      <ForwardRef(SwapRightOutlined) />
                                    </span>
                                  }
                                  suffixIcon={<ForwardRef(CalendarOutlined) />}
                                  superNextIcon={
                                    <span
                                      className="ant-picker-super-next-icon"
                                    />
                                  }
                                  superPrevIcon={
                                    <span
                                      className="ant-picker-super-prev-icon"
                                    />
                                  }
                                  tabIndex={-1}
                                  transitionName="slide-up"
                                  value={null}
                                />
                              </Context.Provider>
                            </React.Fragment>
                          </div>
                        </React.Fragment>
                      </div>
                    </div>
                  }
                  prefixCls="ant-picker"
                  range={true}
                  transitionName="slide-up"
                  visible={false}
                >
                  <Trigger
                    action={Array []}
                    afterPopupVisibleChange={[Function]}
                    autoDestroy={false}
                    blurDelay={0.15}
                    builtinPlacements={
                      Object {
                        "bottomLeft": Object {
                          "offset": Array [
                            0,
                            4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tl",
                            "bl",
                          ],
                        },
                        "bottomRight": Object {
                          "offset": Array [
                            0,
                            4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tr",
                            "br",
                          ],
                        },
                        "topLeft": Object {
                          "offset": Array [
                            0,
                            -4,
                          ],
                          "overflow": Object {
                            "adjustX": 0,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "bl",
                            "tl",
                          ],
                        },
                        "topRight": Object {
                          "offset": Array [
                            0,
                            -4,
                          ],
                          "overflow": Object {
                            "adjustX": 0,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "br",
                            "tr",
                          ],
                        },
                      }
                    }
                    defaultPopupVisible={false}
                    destroyPopupOnHide={false}
                    focusDelay={0}
                    getDocument={[Function]}
                    getPopupClassNameFromAlign={[Function]}
                    hideAction={Array []}
                    mask={false}
                    maskClosable={true}
                    mouseEnterDelay={0}
                    mouseLeaveDelay={0.1}
                    onPopupAlign={[Function]}
                    onPopupVisibleChange={[Function]}
                    popup={
                      <div
                        className="ant-picker-range-wrapper ant-picker-date-range-wrapper"
                        style={
                          Object {
                            "minWidth": 0,
                          }
                        }
                      >
                        <div
                          className="ant-picker-range-arrow"
                          style={
                            Object {
                              "left": 0,
                            }
                          }
                        />
                        <div
                          className="ant-picker-panel-container"
                          onMouseDown={[Function]}
                          style={
                            Object {
                              "marginLeft": 0,
                            }
                          }
                        >
                          <React.Fragment>
                            <div
                              className="ant-picker-panels"
                            >
                              <React.Fragment>
                                <Context.Provider
                                  value={
                                    Object {
                                      "hoverRangedValue": null,
                                      "inRange": true,
                                      "panelPosition": "left",
                                      "rangedValue": Array [
                                        null,
                                        null,
                                      ],
                                    }
                                  }
                                >
                                  <PickerPanel
                                    allowClear={true}
                                    className="ant-picker-panel-focused"
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    components={
                                      Object {
                                        "button": [Function],
                                        "rangeItem": [Function],
                                      }
                                    }
                                    dateFrom={"2021-10-22T00:00:00.000Z"}
                                    dateRender={null}
                                    dateTo={"2021-11-22T00:00:00.000Z"}
                                    defaultValue={null}
                                    disabledDate={[Function]}
                                    disabledTime={[Function]}
                                    format="DD-MM-YYYY"
                                    generateConfig={
                                      Object {
                                        "addDate": [Function],
                                        "addMonth": [Function],
                                        "addYear": [Function],
                                        "getDate": [Function],
                                        "getEndDate": [Function],
                                        "getFixedDate": [Function],
                                        "getHour": [Function],
                                        "getMinute": [Function],
                                        "getMonth": [Function],
                                        "getNow": [Function],
                                        "getSecond": [Function],
                                        "getStartOfMonth": [Function],
                                        "getWeekDay": [Function],
                                        "getYear": [Function],
                                        "isAfter": [Function],
                                        "isValidate": [Function],
                                        "locale": Object {
                                          "format": [Function],
                                          "getShortMonths": [Function],
                                          "getShortWeekDays": [Function],
                                          "getWeek": [Function],
                                          "getWeekFirstDate": [Function],
                                          "getWeekFirstDay": [Function],
                                          "parse": [Function],
                                        },
                                        "setDate": [Function],
                                        "setHour": [Function],
                                        "setMinute": [Function],
                                        "setMonth": [Function],
                                        "setSecond": [Function],
                                        "setYear": [Function],
                                      }
                                    }
                                    inputReadOnly={true}
                                    locale={
                                      Object {
                                        "backToToday": "Back to today",
                                        "clear": "Clear",
                                        "dateFormat": "M/D/YYYY",
                                        "dateSelect": "select date",
                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                        "dayFormat": "D",
                                        "decadeSelect": "Choose a decade",
                                        "locale": "en_US",
                                        "month": "Month",
                                        "monthBeforeYear": true,
                                        "monthPlaceholder": "Select month",
                                        "monthSelect": "Choose a month",
                                        "nextCentury": "Next century",
                                        "nextDecade": "Next decade",
                                        "nextMonth": "Next month (PageDown)",
                                        "nextYear": "Next year (Control + right)",
                                        "now": "Now",
                                        "ok": "Ok",
                                        "placeholder": "Select date",
                                        "previousCentury": "Last century",
                                        "previousDecade": "Last decade",
                                        "previousMonth": "Previous month (PageUp)",
                                        "previousYear": "Last year (Control + left)",
                                        "quarterPlaceholder": "Select quarter",
                                        "rangeMonthPlaceholder": Array [
                                          "Start month",
                                          "End month",
                                        ],
                                        "rangePlaceholder": Array [
                                          "Start date",
                                          "End date",
                                        ],
                                        "rangeWeekPlaceholder": Array [
                                          "Start week",
                                          "End week",
                                        ],
                                        "rangeYearPlaceholder": Array [
                                          "Start year",
                                          "End year",
                                        ],
                                        "timeSelect": "select time",
                                        "today": "Today",
                                        "weekPlaceholder": "Select week",
                                        "weekSelect": "Choose a week",
                                        "year": "Year",
                                        "yearFormat": "YYYY",
                                        "yearPlaceholder": "Select year",
                                        "yearSelect": "Choose a year",
                                      }
                                    }
                                    maxDate={false}
                                    minDate={"2020-01-01T00:00:00.000Z"}
                                    mode="date"
                                    nextIcon={
                                      <span
                                        className="ant-picker-next-icon"
                                      />
                                    }
                                    onClear={[Function]}
                                    onOk={null}
                                    onPanelChange={[Function]}
                                    onPickerValueChange={[Function]}
                                    pickerRef={
                                      Object {
                                        "current": Object {
                                          "blur": [Function],
                                          "focus": [Function],
                                        },
                                      }
                                    }
                                    pickerValue={"2021-06-29T00:00:00.000Z"}
                                    placeholder={
                                      Array [
                                        "Start date",
                                        "End date",
                                      ]
                                    }
                                    prefixCls="ant-picker"
                                    prevIcon={
                                      <span
                                        className="ant-picker-prev-icon"
                                      />
                                    }
                                    separator={
                                      <span
                                        aria-label="to"
                                        className="ant-picker-separator"
                                      >
                                        <ForwardRef(SwapRightOutlined) />
                                      </span>
                                    }
                                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                                    superNextIcon={
                                      <span
                                        className="ant-picker-super-next-icon"
                                      />
                                    }
                                    superPrevIcon={
                                      <span
                                        className="ant-picker-super-prev-icon"
                                      />
                                    }
                                    tabIndex={-1}
                                    transitionName="slide-up"
                                    value={null}
                                  />
                                </Context.Provider>
                                <Context.Provider
                                  value={
                                    Object {
                                      "hoverRangedValue": null,
                                      "inRange": true,
                                      "panelPosition": "right",
                                      "rangedValue": Array [
                                        null,
                                        null,
                                      ],
                                    }
                                  }
                                >
                                  <PickerPanel
                                    allowClear={true}
                                    className="ant-picker-panel-focused"
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    components={
                                      Object {
                                        "button": [Function],
                                        "rangeItem": [Function],
                                      }
                                    }
                                    dateFrom={"2021-10-22T00:00:00.000Z"}
                                    dateRender={null}
                                    dateTo={"2021-11-22T00:00:00.000Z"}
                                    defaultValue={null}
                                    disabledDate={[Function]}
                                    disabledTime={[Function]}
                                    format="DD-MM-YYYY"
                                    generateConfig={
                                      Object {
                                        "addDate": [Function],
                                        "addMonth": [Function],
                                        "addYear": [Function],
                                        "getDate": [Function],
                                        "getEndDate": [Function],
                                        "getFixedDate": [Function],
                                        "getHour": [Function],
                                        "getMinute": [Function],
                                        "getMonth": [Function],
                                        "getNow": [Function],
                                        "getSecond": [Function],
                                        "getStartOfMonth": [Function],
                                        "getWeekDay": [Function],
                                        "getYear": [Function],
                                        "isAfter": [Function],
                                        "isValidate": [Function],
                                        "locale": Object {
                                          "format": [Function],
                                          "getShortMonths": [Function],
                                          "getShortWeekDays": [Function],
                                          "getWeek": [Function],
                                          "getWeekFirstDate": [Function],
                                          "getWeekFirstDay": [Function],
                                          "parse": [Function],
                                        },
                                        "setDate": [Function],
                                        "setHour": [Function],
                                        "setMinute": [Function],
                                        "setMonth": [Function],
                                        "setSecond": [Function],
                                        "setYear": [Function],
                                      }
                                    }
                                    inputReadOnly={true}
                                    locale={
                                      Object {
                                        "backToToday": "Back to today",
                                        "clear": "Clear",
                                        "dateFormat": "M/D/YYYY",
                                        "dateSelect": "select date",
                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                        "dayFormat": "D",
                                        "decadeSelect": "Choose a decade",
                                        "locale": "en_US",
                                        "month": "Month",
                                        "monthBeforeYear": true,
                                        "monthPlaceholder": "Select month",
                                        "monthSelect": "Choose a month",
                                        "nextCentury": "Next century",
                                        "nextDecade": "Next decade",
                                        "nextMonth": "Next month (PageDown)",
                                        "nextYear": "Next year (Control + right)",
                                        "now": "Now",
                                        "ok": "Ok",
                                        "placeholder": "Select date",
                                        "previousCentury": "Last century",
                                        "previousDecade": "Last decade",
                                        "previousMonth": "Previous month (PageUp)",
                                        "previousYear": "Last year (Control + left)",
                                        "quarterPlaceholder": "Select quarter",
                                        "rangeMonthPlaceholder": Array [
                                          "Start month",
                                          "End month",
                                        ],
                                        "rangePlaceholder": Array [
                                          "Start date",
                                          "End date",
                                        ],
                                        "rangeWeekPlaceholder": Array [
                                          "Start week",
                                          "End week",
                                        ],
                                        "rangeYearPlaceholder": Array [
                                          "Start year",
                                          "End year",
                                        ],
                                        "timeSelect": "select time",
                                        "today": "Today",
                                        "weekPlaceholder": "Select week",
                                        "weekSelect": "Choose a week",
                                        "year": "Year",
                                        "yearFormat": "YYYY",
                                        "yearPlaceholder": "Select year",
                                        "yearSelect": "Choose a year",
                                      }
                                    }
                                    maxDate={false}
                                    minDate={"2020-01-01T00:00:00.000Z"}
                                    mode="date"
                                    nextIcon={
                                      <span
                                        className="ant-picker-next-icon"
                                      />
                                    }
                                    onClear={[Function]}
                                    onOk={null}
                                    onPanelChange={[Function]}
                                    onPickerValueChange={[Function]}
                                    pickerRef={
                                      Object {
                                        "current": Object {
                                          "blur": [Function],
                                          "focus": [Function],
                                        },
                                      }
                                    }
                                    pickerValue={"2021-07-29T00:00:00.000Z"}
                                    placeholder={
                                      Array [
                                        "Start date",
                                        "End date",
                                      ]
                                    }
                                    prefixCls="ant-picker"
                                    prevIcon={
                                      <span
                                        className="ant-picker-prev-icon"
                                      />
                                    }
                                    separator={
                                      <span
                                        aria-label="to"
                                        className="ant-picker-separator"
                                      >
                                        <ForwardRef(SwapRightOutlined) />
                                      </span>
                                    }
                                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                                    superNextIcon={
                                      <span
                                        className="ant-picker-super-next-icon"
                                      />
                                    }
                                    superPrevIcon={
                                      <span
                                        className="ant-picker-super-prev-icon"
                                      />
                                    }
                                    tabIndex={-1}
                                    transitionName="slide-up"
                                    value={null}
                                  />
                                </Context.Provider>
                              </React.Fragment>
                            </div>
                          </React.Fragment>
                        </div>
                      </div>
                    }
                    popupAlign={Object {}}
                    popupClassName="ant-picker-dropdown-range"
                    popupPlacement="bottomLeft"
                    popupStyle={Object {}}
                    popupTransitionName="slide-up"
                    popupVisible={false}
                    prefixCls="ant-picker-dropdown"
                    showAction={Array []}
                  >
                    <div
                      className="ant-picker ant-picker-range"
                      key="trigger"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                    >
                      <div
                        className="ant-picker-input ant-picker-input-active"
                      >
                        <input
                          autoComplete="off"
                          disabled={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          placeholder="Start date"
                          readOnly={true}
                          size={12}
                          value="07-05-2021"
                        />
                      </div>
                      <div
                        className="ant-picker-range-separator"
                      >
                        <span
                          aria-label="to"
                          className="ant-picker-separator"
                        >
                          <ForwardRef(SwapRightOutlined)>
                            <AntdIcon
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "0 0 1024 1024",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "swap-right",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <span
                                aria-label="swap-right"
                                className="anticon anticon-swap-right"
                                role="img"
                              >
                                <IconReact
                                  icon={
                                    Object {
                                      "icon": Object {
                                        "attrs": Object {
                                          "focusable": "false",
                                          "viewBox": "0 0 1024 1024",
                                        },
                                        "children": Array [
                                          Object {
                                            "attrs": Object {
                                              "d": "M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z",
                                            },
                                            "tag": "path",
                                          },
                                        ],
                                        "tag": "svg",
                                      },
                                      "name": "swap-right",
                                      "theme": "outlined",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    data-icon="swap-right"
                                    fill="currentColor"
                                    focusable="false"
                                    height="1em"
                                    key="svg-swap-right"
                                    viewBox="0 0 1024 1024"
                                    width="1em"
                                  >
                                    <path
                                      d="M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z"
                                      key="svg-swap-right-svg-0"
                                    />
                                  </svg>
                                </IconReact>
                              </span>
                            </AntdIcon>
                          </ForwardRef(SwapRightOutlined)>
                        </span>
                      </div>
                      <div
                        className="ant-picker-input"
                      >
                        <input
                          autoComplete="off"
                          disabled={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          placeholder="End date"
                          readOnly={true}
                          size={12}
                          value="02-06-2021"
                        />
                      </div>
                      <div
                        className="ant-picker-active-bar"
                        style={
                          Object {
                            "left": 0,
                            "position": "absolute",
                            "width": 0,
                          }
                        }
                      />
                      <span
                        className="ant-picker-suffix"
                      >
                        <ForwardRef(CalendarOutlined)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "calendar",
                                "theme": "outlined",
                              }
                            }
                          >
                            <span
                              aria-label="calendar"
                              className="anticon anticon-calendar"
                              role="img"
                            >
                              <IconReact
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "calendar",
                                    "theme": "outlined",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  data-icon="calendar"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-calendar"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                    key="svg-calendar-svg-0"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(CalendarOutlined)>
                      </span>
                      <span
                        className="ant-picker-clear"
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                      >
                        <ForwardRef(CloseCircleFilled)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "close-circle",
                                "theme": "filled",
                              }
                            }
                          >
                            <span
                              aria-label="close-circle"
                              className="anticon anticon-close-circle"
                              role="img"
                            >
                              <IconReact
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "close-circle",
                                    "theme": "filled",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  data-icon="close-circle"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-close-circle"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                    key="svg-close-circle-svg-0"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(CloseCircleFilled)>
                      </span>
                    </div>
                  </Trigger>
                </PickerTrigger>
              </InnerRangePicker>
            </RangePicker>
          </LocaleReceiver>
        </RangePicker>
      </DateRangePicker>
    </div>
  </div>
</PeriodSelect>
`;
