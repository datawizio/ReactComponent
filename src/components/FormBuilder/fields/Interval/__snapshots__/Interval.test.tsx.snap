// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormBuilder Interval component FormBuilder Interval  with empty value 1`] = `
<Interval
  label="label"
  onChange={[MockFunction]}
  value={
    Object {
      "from": "2020-03-04T00:00:00.000Z",
      "to": "2020-03-06T00:00:00.000Z",
    }
  }
>
  <IntervalItem
    label="FROM"
    maxDate={"2020-03-06T00:00:00.000Z"}
    onChange={[Function]}
    picker="month"
    value={"2020-03-04T00:00:00.000Z"}
  >
    <div
      className="field-interval-label"
    >
      FROM
      :
    </div>
    <Picker
      disabledDate={[Function]}
      onChange={[Function]}
      picker="month"
      placeholder="UNLIMITED"
      value={"2020-03-04T00:00:00.000Z"}
    >
      <LocaleReceiver
        componentName="DatePicker"
        defaultLocale={[Function]}
      >
        <Picker
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          disabledDate={[Function]}
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          picker="month"
          placeholder="UNLIMITED"
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          showToday={true}
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
          value={"2020-03-04T00:00:00.000Z"}
        >
          <InnerPicker
            allowClear={true}
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            components={
              Object {
                "button": [Function],
                "rangeItem": [Function],
              }
            }
            disabledDate={[Function]}
            generateConfig={
              Object {
                "addDate": [Function],
                "addMonth": [Function],
                "addYear": [Function],
                "getDate": [Function],
                "getHour": [Function],
                "getMinute": [Function],
                "getMonth": [Function],
                "getNow": [Function],
                "getSecond": [Function],
                "getWeekDay": [Function],
                "getYear": [Function],
                "isAfter": [Function],
                "isValidate": [Function],
                "locale": Object {
                  "format": [Function],
                  "getShortMonths": [Function],
                  "getShortWeekDays": [Function],
                  "getWeek": [Function],
                  "getWeekFirstDay": [Function],
                  "parse": [Function],
                },
                "setDate": [Function],
                "setHour": [Function],
                "setMinute": [Function],
                "setMonth": [Function],
                "setSecond": [Function],
                "setYear": [Function],
              }
            }
            locale={
              Object {
                "backToToday": "Back to today",
                "clear": "Clear",
                "dateFormat": "M/D/YYYY",
                "dateSelect": "select date",
                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                "dayFormat": "D",
                "decadeSelect": "Choose a decade",
                "locale": "en_US",
                "month": "Month",
                "monthBeforeYear": true,
                "monthPlaceholder": "Select month",
                "monthSelect": "Choose a month",
                "nextCentury": "Next century",
                "nextDecade": "Next decade",
                "nextMonth": "Next month (PageDown)",
                "nextYear": "Next year (Control + right)",
                "now": "Now",
                "ok": "Ok",
                "placeholder": "Select date",
                "previousCentury": "Last century",
                "previousDecade": "Last decade",
                "previousMonth": "Previous month (PageUp)",
                "previousYear": "Last year (Control + left)",
                "quarterPlaceholder": "Select quarter",
                "rangeMonthPlaceholder": Array [
                  "Start month",
                  "End month",
                ],
                "rangePlaceholder": Array [
                  "Start date",
                  "End date",
                ],
                "rangeWeekPlaceholder": Array [
                  "Start week",
                  "End week",
                ],
                "rangeYearPlaceholder": Array [
                  "Start year",
                  "End year",
                ],
                "timeSelect": "select time",
                "today": "Today",
                "weekPlaceholder": "Select week",
                "weekSelect": "Choose a week",
                "year": "Year",
                "yearFormat": "YYYY",
                "yearPlaceholder": "Select year",
                "yearSelect": "Choose a year",
              }
            }
            nextIcon={
              <span
                className="ant-picker-next-icon"
              />
            }
            onChange={[Function]}
            picker="month"
            pickerRef={
              Object {
                "current": Object {
                  "blur": [Function],
                  "focus": [Function],
                },
              }
            }
            placeholder="UNLIMITED"
            prefixCls="ant-picker"
            prevIcon={
              <span
                className="ant-picker-prev-icon"
              />
            }
            showToday={true}
            suffixIcon={<ForwardRef(CalendarOutlined) />}
            superNextIcon={
              <span
                className="ant-picker-super-next-icon"
              />
            }
            superPrevIcon={
              <span
                className="ant-picker-super-prev-icon"
              />
            }
            transitionName="slide-up"
            value={"2020-03-04T00:00:00.000Z"}
          >
            <PickerTrigger
              popupElement={
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                >
                  <PickerPanel
                    allowClear={true}
                    className="ant-picker-panel-focused"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    components={
                      Object {
                        "button": [Function],
                        "rangeItem": [Function],
                      }
                    }
                    disabledDate={[Function]}
                    generateConfig={
                      Object {
                        "addDate": [Function],
                        "addMonth": [Function],
                        "addYear": [Function],
                        "getDate": [Function],
                        "getHour": [Function],
                        "getMinute": [Function],
                        "getMonth": [Function],
                        "getNow": [Function],
                        "getSecond": [Function],
                        "getWeekDay": [Function],
                        "getYear": [Function],
                        "isAfter": [Function],
                        "isValidate": [Function],
                        "locale": Object {
                          "format": [Function],
                          "getShortMonths": [Function],
                          "getShortWeekDays": [Function],
                          "getWeek": [Function],
                          "getWeekFirstDay": [Function],
                          "parse": [Function],
                        },
                        "setDate": [Function],
                        "setHour": [Function],
                        "setMinute": [Function],
                        "setMonth": [Function],
                        "setSecond": [Function],
                        "setYear": [Function],
                      }
                    }
                    locale={
                      Object {
                        "backToToday": "Back to today",
                        "clear": "Clear",
                        "dateFormat": "M/D/YYYY",
                        "dateSelect": "select date",
                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                        "dayFormat": "D",
                        "decadeSelect": "Choose a decade",
                        "locale": "en_US",
                        "month": "Month",
                        "monthBeforeYear": true,
                        "monthPlaceholder": "Select month",
                        "monthSelect": "Choose a month",
                        "nextCentury": "Next century",
                        "nextDecade": "Next decade",
                        "nextMonth": "Next month (PageDown)",
                        "nextYear": "Next year (Control + right)",
                        "now": "Now",
                        "ok": "Ok",
                        "placeholder": "Select date",
                        "previousCentury": "Last century",
                        "previousDecade": "Last decade",
                        "previousMonth": "Previous month (PageUp)",
                        "previousYear": "Last year (Control + left)",
                        "quarterPlaceholder": "Select quarter",
                        "rangeMonthPlaceholder": Array [
                          "Start month",
                          "End month",
                        ],
                        "rangePlaceholder": Array [
                          "Start date",
                          "End date",
                        ],
                        "rangeWeekPlaceholder": Array [
                          "Start week",
                          "End week",
                        ],
                        "rangeYearPlaceholder": Array [
                          "Start year",
                          "End year",
                        ],
                        "timeSelect": "select time",
                        "today": "Today",
                        "weekPlaceholder": "Select week",
                        "weekSelect": "Choose a week",
                        "year": "Year",
                        "yearFormat": "YYYY",
                        "yearPlaceholder": "Select year",
                        "yearSelect": "Choose a year",
                      }
                    }
                    nextIcon={
                      <span
                        className="ant-picker-next-icon"
                      />
                    }
                    onChange={[Function]}
                    picker="month"
                    pickerRef={
                      Object {
                        "current": Object {
                          "blur": [Function],
                          "focus": [Function],
                        },
                      }
                    }
                    placeholder="UNLIMITED"
                    prefixCls="ant-picker"
                    prevIcon={
                      <span
                        className="ant-picker-prev-icon"
                      />
                    }
                    showToday={true}
                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                    superNextIcon={
                      <span
                        className="ant-picker-super-next-icon"
                      />
                    }
                    superPrevIcon={
                      <span
                        className="ant-picker-super-prev-icon"
                      />
                    }
                    tabIndex={-1}
                    transitionName="slide-up"
                    value={"2020-03-04T00:00:00.000Z"}
                  />
                </div>
              }
              popupPlacement="bottomLeft"
              prefixCls="ant-picker"
              transitionName="slide-up"
              visible={false}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                  >
                    <PickerPanel
                      allowClear={true}
                      className="ant-picker-panel-focused"
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      components={
                        Object {
                          "button": [Function],
                          "rangeItem": [Function],
                        }
                      }
                      disabledDate={[Function]}
                      generateConfig={
                        Object {
                          "addDate": [Function],
                          "addMonth": [Function],
                          "addYear": [Function],
                          "getDate": [Function],
                          "getHour": [Function],
                          "getMinute": [Function],
                          "getMonth": [Function],
                          "getNow": [Function],
                          "getSecond": [Function],
                          "getWeekDay": [Function],
                          "getYear": [Function],
                          "isAfter": [Function],
                          "isValidate": [Function],
                          "locale": Object {
                            "format": [Function],
                            "getShortMonths": [Function],
                            "getShortWeekDays": [Function],
                            "getWeek": [Function],
                            "getWeekFirstDay": [Function],
                            "parse": [Function],
                          },
                          "setDate": [Function],
                          "setHour": [Function],
                          "setMinute": [Function],
                          "setMonth": [Function],
                          "setSecond": [Function],
                          "setYear": [Function],
                        }
                      }
                      locale={
                        Object {
                          "backToToday": "Back to today",
                          "clear": "Clear",
                          "dateFormat": "M/D/YYYY",
                          "dateSelect": "select date",
                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                          "dayFormat": "D",
                          "decadeSelect": "Choose a decade",
                          "locale": "en_US",
                          "month": "Month",
                          "monthBeforeYear": true,
                          "monthPlaceholder": "Select month",
                          "monthSelect": "Choose a month",
                          "nextCentury": "Next century",
                          "nextDecade": "Next decade",
                          "nextMonth": "Next month (PageDown)",
                          "nextYear": "Next year (Control + right)",
                          "now": "Now",
                          "ok": "Ok",
                          "placeholder": "Select date",
                          "previousCentury": "Last century",
                          "previousDecade": "Last decade",
                          "previousMonth": "Previous month (PageUp)",
                          "previousYear": "Last year (Control + left)",
                          "quarterPlaceholder": "Select quarter",
                          "rangeMonthPlaceholder": Array [
                            "Start month",
                            "End month",
                          ],
                          "rangePlaceholder": Array [
                            "Start date",
                            "End date",
                          ],
                          "rangeWeekPlaceholder": Array [
                            "Start week",
                            "End week",
                          ],
                          "rangeYearPlaceholder": Array [
                            "Start year",
                            "End year",
                          ],
                          "timeSelect": "select time",
                          "today": "Today",
                          "weekPlaceholder": "Select week",
                          "weekSelect": "Choose a week",
                          "year": "Year",
                          "yearFormat": "YYYY",
                          "yearPlaceholder": "Select year",
                          "yearSelect": "Choose a year",
                        }
                      }
                      nextIcon={
                        <span
                          className="ant-picker-next-icon"
                        />
                      }
                      onChange={[Function]}
                      picker="month"
                      pickerRef={
                        Object {
                          "current": Object {
                            "blur": [Function],
                            "focus": [Function],
                          },
                        }
                      }
                      placeholder="UNLIMITED"
                      prefixCls="ant-picker"
                      prevIcon={
                        <span
                          className="ant-picker-prev-icon"
                        />
                      }
                      showToday={true}
                      suffixIcon={<ForwardRef(CalendarOutlined) />}
                      superNextIcon={
                        <span
                          className="ant-picker-super-next-icon"
                        />
                      }
                      superPrevIcon={
                        <span
                          className="ant-picker-super-prev-icon"
                        />
                      }
                      tabIndex={-1}
                      transitionName="slide-up"
                      value={"2020-03-04T00:00:00.000Z"}
                    />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName=""
                popupPlacement="bottomLeft"
                popupStyle={Object {}}
                popupTransitionName="slide-up"
                popupVisible={false}
                prefixCls="ant-picker-dropdown"
                showAction={Array []}
              >
                <div
                  className="ant-picker"
                  key="trigger"
                  onMouseUp={[Function]}
                >
                  <div
                    className="ant-picker-input"
                  >
                    <input
                      autoComplete="off"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      placeholder="UNLIMITED"
                      readOnly={true}
                      size={12}
                      title="2020-03"
                      value="2020-03"
                    />
                    <span
                      className="ant-picker-suffix"
                    >
                      <ForwardRef(CalendarOutlined)>
                        <AntdIcon
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "calendar",
                              "theme": "outlined",
                            }
                          }
                        >
                          <span
                            aria-label="calendar"
                            className="anticon anticon-calendar"
                            role="img"
                          >
                            <IconReact
                              className=""
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "calendar",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className=""
                                data-icon="calendar"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-calendar"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                  key="svg-calendar-svg-0"
                                />
                              </svg>
                            </IconReact>
                          </span>
                        </AntdIcon>
                      </ForwardRef(CalendarOutlined)>
                    </span>
                    <span
                      className="ant-picker-clear"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                    >
                      <ForwardRef(CloseCircleFilled)>
                        <AntdIcon
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "close-circle",
                              "theme": "filled",
                            }
                          }
                        >
                          <span
                            aria-label="close-circle"
                            className="anticon anticon-close-circle"
                            role="img"
                          >
                            <IconReact
                              className=""
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "close-circle",
                                  "theme": "filled",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className=""
                                data-icon="close-circle"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-close-circle"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                  key="svg-close-circle-svg-0"
                                />
                              </svg>
                            </IconReact>
                          </span>
                        </AntdIcon>
                      </ForwardRef(CloseCircleFilled)>
                    </span>
                  </div>
                </div>
              </Trigger>
            </PickerTrigger>
          </InnerPicker>
        </Picker>
      </LocaleReceiver>
    </Picker>
  </IntervalItem>
  <IntervalItem
    label="TO"
    minDate={"2020-03-04T00:00:00.000Z"}
    onChange={[Function]}
    picker="month"
    value={"2020-03-06T00:00:00.000Z"}
  >
    <div
      className="field-interval-label"
    >
      TO
      :
    </div>
    <Picker
      disabledDate={[Function]}
      onChange={[Function]}
      picker="month"
      placeholder="UNLIMITED"
      value={"2020-03-06T00:00:00.000Z"}
    >
      <LocaleReceiver
        componentName="DatePicker"
        defaultLocale={[Function]}
      >
        <Picker
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          disabledDate={[Function]}
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          picker="month"
          placeholder="UNLIMITED"
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          showToday={true}
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
          value={"2020-03-06T00:00:00.000Z"}
        >
          <InnerPicker
            allowClear={true}
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            components={
              Object {
                "button": [Function],
                "rangeItem": [Function],
              }
            }
            disabledDate={[Function]}
            generateConfig={
              Object {
                "addDate": [Function],
                "addMonth": [Function],
                "addYear": [Function],
                "getDate": [Function],
                "getHour": [Function],
                "getMinute": [Function],
                "getMonth": [Function],
                "getNow": [Function],
                "getSecond": [Function],
                "getWeekDay": [Function],
                "getYear": [Function],
                "isAfter": [Function],
                "isValidate": [Function],
                "locale": Object {
                  "format": [Function],
                  "getShortMonths": [Function],
                  "getShortWeekDays": [Function],
                  "getWeek": [Function],
                  "getWeekFirstDay": [Function],
                  "parse": [Function],
                },
                "setDate": [Function],
                "setHour": [Function],
                "setMinute": [Function],
                "setMonth": [Function],
                "setSecond": [Function],
                "setYear": [Function],
              }
            }
            locale={
              Object {
                "backToToday": "Back to today",
                "clear": "Clear",
                "dateFormat": "M/D/YYYY",
                "dateSelect": "select date",
                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                "dayFormat": "D",
                "decadeSelect": "Choose a decade",
                "locale": "en_US",
                "month": "Month",
                "monthBeforeYear": true,
                "monthPlaceholder": "Select month",
                "monthSelect": "Choose a month",
                "nextCentury": "Next century",
                "nextDecade": "Next decade",
                "nextMonth": "Next month (PageDown)",
                "nextYear": "Next year (Control + right)",
                "now": "Now",
                "ok": "Ok",
                "placeholder": "Select date",
                "previousCentury": "Last century",
                "previousDecade": "Last decade",
                "previousMonth": "Previous month (PageUp)",
                "previousYear": "Last year (Control + left)",
                "quarterPlaceholder": "Select quarter",
                "rangeMonthPlaceholder": Array [
                  "Start month",
                  "End month",
                ],
                "rangePlaceholder": Array [
                  "Start date",
                  "End date",
                ],
                "rangeWeekPlaceholder": Array [
                  "Start week",
                  "End week",
                ],
                "rangeYearPlaceholder": Array [
                  "Start year",
                  "End year",
                ],
                "timeSelect": "select time",
                "today": "Today",
                "weekPlaceholder": "Select week",
                "weekSelect": "Choose a week",
                "year": "Year",
                "yearFormat": "YYYY",
                "yearPlaceholder": "Select year",
                "yearSelect": "Choose a year",
              }
            }
            nextIcon={
              <span
                className="ant-picker-next-icon"
              />
            }
            onChange={[Function]}
            picker="month"
            pickerRef={
              Object {
                "current": Object {
                  "blur": [Function],
                  "focus": [Function],
                },
              }
            }
            placeholder="UNLIMITED"
            prefixCls="ant-picker"
            prevIcon={
              <span
                className="ant-picker-prev-icon"
              />
            }
            showToday={true}
            suffixIcon={<ForwardRef(CalendarOutlined) />}
            superNextIcon={
              <span
                className="ant-picker-super-next-icon"
              />
            }
            superPrevIcon={
              <span
                className="ant-picker-super-prev-icon"
              />
            }
            transitionName="slide-up"
            value={"2020-03-06T00:00:00.000Z"}
          >
            <PickerTrigger
              popupElement={
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                >
                  <PickerPanel
                    allowClear={true}
                    className="ant-picker-panel-focused"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    components={
                      Object {
                        "button": [Function],
                        "rangeItem": [Function],
                      }
                    }
                    disabledDate={[Function]}
                    generateConfig={
                      Object {
                        "addDate": [Function],
                        "addMonth": [Function],
                        "addYear": [Function],
                        "getDate": [Function],
                        "getHour": [Function],
                        "getMinute": [Function],
                        "getMonth": [Function],
                        "getNow": [Function],
                        "getSecond": [Function],
                        "getWeekDay": [Function],
                        "getYear": [Function],
                        "isAfter": [Function],
                        "isValidate": [Function],
                        "locale": Object {
                          "format": [Function],
                          "getShortMonths": [Function],
                          "getShortWeekDays": [Function],
                          "getWeek": [Function],
                          "getWeekFirstDay": [Function],
                          "parse": [Function],
                        },
                        "setDate": [Function],
                        "setHour": [Function],
                        "setMinute": [Function],
                        "setMonth": [Function],
                        "setSecond": [Function],
                        "setYear": [Function],
                      }
                    }
                    locale={
                      Object {
                        "backToToday": "Back to today",
                        "clear": "Clear",
                        "dateFormat": "M/D/YYYY",
                        "dateSelect": "select date",
                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                        "dayFormat": "D",
                        "decadeSelect": "Choose a decade",
                        "locale": "en_US",
                        "month": "Month",
                        "monthBeforeYear": true,
                        "monthPlaceholder": "Select month",
                        "monthSelect": "Choose a month",
                        "nextCentury": "Next century",
                        "nextDecade": "Next decade",
                        "nextMonth": "Next month (PageDown)",
                        "nextYear": "Next year (Control + right)",
                        "now": "Now",
                        "ok": "Ok",
                        "placeholder": "Select date",
                        "previousCentury": "Last century",
                        "previousDecade": "Last decade",
                        "previousMonth": "Previous month (PageUp)",
                        "previousYear": "Last year (Control + left)",
                        "quarterPlaceholder": "Select quarter",
                        "rangeMonthPlaceholder": Array [
                          "Start month",
                          "End month",
                        ],
                        "rangePlaceholder": Array [
                          "Start date",
                          "End date",
                        ],
                        "rangeWeekPlaceholder": Array [
                          "Start week",
                          "End week",
                        ],
                        "rangeYearPlaceholder": Array [
                          "Start year",
                          "End year",
                        ],
                        "timeSelect": "select time",
                        "today": "Today",
                        "weekPlaceholder": "Select week",
                        "weekSelect": "Choose a week",
                        "year": "Year",
                        "yearFormat": "YYYY",
                        "yearPlaceholder": "Select year",
                        "yearSelect": "Choose a year",
                      }
                    }
                    nextIcon={
                      <span
                        className="ant-picker-next-icon"
                      />
                    }
                    onChange={[Function]}
                    picker="month"
                    pickerRef={
                      Object {
                        "current": Object {
                          "blur": [Function],
                          "focus": [Function],
                        },
                      }
                    }
                    placeholder="UNLIMITED"
                    prefixCls="ant-picker"
                    prevIcon={
                      <span
                        className="ant-picker-prev-icon"
                      />
                    }
                    showToday={true}
                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                    superNextIcon={
                      <span
                        className="ant-picker-super-next-icon"
                      />
                    }
                    superPrevIcon={
                      <span
                        className="ant-picker-super-prev-icon"
                      />
                    }
                    tabIndex={-1}
                    transitionName="slide-up"
                    value={"2020-03-06T00:00:00.000Z"}
                  />
                </div>
              }
              popupPlacement="bottomLeft"
              prefixCls="ant-picker"
              transitionName="slide-up"
              visible={false}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                  >
                    <PickerPanel
                      allowClear={true}
                      className="ant-picker-panel-focused"
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      components={
                        Object {
                          "button": [Function],
                          "rangeItem": [Function],
                        }
                      }
                      disabledDate={[Function]}
                      generateConfig={
                        Object {
                          "addDate": [Function],
                          "addMonth": [Function],
                          "addYear": [Function],
                          "getDate": [Function],
                          "getHour": [Function],
                          "getMinute": [Function],
                          "getMonth": [Function],
                          "getNow": [Function],
                          "getSecond": [Function],
                          "getWeekDay": [Function],
                          "getYear": [Function],
                          "isAfter": [Function],
                          "isValidate": [Function],
                          "locale": Object {
                            "format": [Function],
                            "getShortMonths": [Function],
                            "getShortWeekDays": [Function],
                            "getWeek": [Function],
                            "getWeekFirstDay": [Function],
                            "parse": [Function],
                          },
                          "setDate": [Function],
                          "setHour": [Function],
                          "setMinute": [Function],
                          "setMonth": [Function],
                          "setSecond": [Function],
                          "setYear": [Function],
                        }
                      }
                      locale={
                        Object {
                          "backToToday": "Back to today",
                          "clear": "Clear",
                          "dateFormat": "M/D/YYYY",
                          "dateSelect": "select date",
                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                          "dayFormat": "D",
                          "decadeSelect": "Choose a decade",
                          "locale": "en_US",
                          "month": "Month",
                          "monthBeforeYear": true,
                          "monthPlaceholder": "Select month",
                          "monthSelect": "Choose a month",
                          "nextCentury": "Next century",
                          "nextDecade": "Next decade",
                          "nextMonth": "Next month (PageDown)",
                          "nextYear": "Next year (Control + right)",
                          "now": "Now",
                          "ok": "Ok",
                          "placeholder": "Select date",
                          "previousCentury": "Last century",
                          "previousDecade": "Last decade",
                          "previousMonth": "Previous month (PageUp)",
                          "previousYear": "Last year (Control + left)",
                          "quarterPlaceholder": "Select quarter",
                          "rangeMonthPlaceholder": Array [
                            "Start month",
                            "End month",
                          ],
                          "rangePlaceholder": Array [
                            "Start date",
                            "End date",
                          ],
                          "rangeWeekPlaceholder": Array [
                            "Start week",
                            "End week",
                          ],
                          "rangeYearPlaceholder": Array [
                            "Start year",
                            "End year",
                          ],
                          "timeSelect": "select time",
                          "today": "Today",
                          "weekPlaceholder": "Select week",
                          "weekSelect": "Choose a week",
                          "year": "Year",
                          "yearFormat": "YYYY",
                          "yearPlaceholder": "Select year",
                          "yearSelect": "Choose a year",
                        }
                      }
                      nextIcon={
                        <span
                          className="ant-picker-next-icon"
                        />
                      }
                      onChange={[Function]}
                      picker="month"
                      pickerRef={
                        Object {
                          "current": Object {
                            "blur": [Function],
                            "focus": [Function],
                          },
                        }
                      }
                      placeholder="UNLIMITED"
                      prefixCls="ant-picker"
                      prevIcon={
                        <span
                          className="ant-picker-prev-icon"
                        />
                      }
                      showToday={true}
                      suffixIcon={<ForwardRef(CalendarOutlined) />}
                      superNextIcon={
                        <span
                          className="ant-picker-super-next-icon"
                        />
                      }
                      superPrevIcon={
                        <span
                          className="ant-picker-super-prev-icon"
                        />
                      }
                      tabIndex={-1}
                      transitionName="slide-up"
                      value={"2020-03-06T00:00:00.000Z"}
                    />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName=""
                popupPlacement="bottomLeft"
                popupStyle={Object {}}
                popupTransitionName="slide-up"
                popupVisible={false}
                prefixCls="ant-picker-dropdown"
                showAction={Array []}
              >
                <div
                  className="ant-picker"
                  key="trigger"
                  onMouseUp={[Function]}
                >
                  <div
                    className="ant-picker-input"
                  >
                    <input
                      autoComplete="off"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      placeholder="UNLIMITED"
                      readOnly={true}
                      size={12}
                      title="2020-03"
                      value="2020-03"
                    />
                    <span
                      className="ant-picker-suffix"
                    >
                      <ForwardRef(CalendarOutlined)>
                        <AntdIcon
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "calendar",
                              "theme": "outlined",
                            }
                          }
                        >
                          <span
                            aria-label="calendar"
                            className="anticon anticon-calendar"
                            role="img"
                          >
                            <IconReact
                              className=""
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "calendar",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className=""
                                data-icon="calendar"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-calendar"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                  key="svg-calendar-svg-0"
                                />
                              </svg>
                            </IconReact>
                          </span>
                        </AntdIcon>
                      </ForwardRef(CalendarOutlined)>
                    </span>
                    <span
                      className="ant-picker-clear"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                    >
                      <ForwardRef(CloseCircleFilled)>
                        <AntdIcon
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "close-circle",
                              "theme": "filled",
                            }
                          }
                        >
                          <span
                            aria-label="close-circle"
                            className="anticon anticon-close-circle"
                            role="img"
                          >
                            <IconReact
                              className=""
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "close-circle",
                                  "theme": "filled",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className=""
                                data-icon="close-circle"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-close-circle"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                  key="svg-close-circle-svg-0"
                                />
                              </svg>
                            </IconReact>
                          </span>
                        </AntdIcon>
                      </ForwardRef(CloseCircleFilled)>
                    </span>
                  </div>
                </div>
              </Trigger>
            </PickerTrigger>
          </InnerPicker>
        </Picker>
      </LocaleReceiver>
    </Picker>
  </IntervalItem>
</Interval>
`;

exports[`FormBuilder Interval component FormBuilder Interval rendered correctly 1`] = `
<Interval
  label="label"
  onChange={[MockFunction]}
  value="value"
>
  <IntervalItem
    label="FROM"
    onChange={[Function]}
    picker="month"
  >
    <div
      className="field-interval-label"
    >
      FROM
      :
    </div>
    <Picker
      disabledDate={[Function]}
      onChange={[Function]}
      picker="month"
      placeholder="UNLIMITED"
    >
      <LocaleReceiver
        componentName="DatePicker"
        defaultLocale={[Function]}
      >
        <Picker
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          disabledDate={[Function]}
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          picker="month"
          placeholder="UNLIMITED"
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          showToday={true}
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
        >
          <InnerPicker
            allowClear={true}
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            components={
              Object {
                "button": [Function],
                "rangeItem": [Function],
              }
            }
            disabledDate={[Function]}
            generateConfig={
              Object {
                "addDate": [Function],
                "addMonth": [Function],
                "addYear": [Function],
                "getDate": [Function],
                "getHour": [Function],
                "getMinute": [Function],
                "getMonth": [Function],
                "getNow": [Function],
                "getSecond": [Function],
                "getWeekDay": [Function],
                "getYear": [Function],
                "isAfter": [Function],
                "isValidate": [Function],
                "locale": Object {
                  "format": [Function],
                  "getShortMonths": [Function],
                  "getShortWeekDays": [Function],
                  "getWeek": [Function],
                  "getWeekFirstDay": [Function],
                  "parse": [Function],
                },
                "setDate": [Function],
                "setHour": [Function],
                "setMinute": [Function],
                "setMonth": [Function],
                "setSecond": [Function],
                "setYear": [Function],
              }
            }
            locale={
              Object {
                "backToToday": "Back to today",
                "clear": "Clear",
                "dateFormat": "M/D/YYYY",
                "dateSelect": "select date",
                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                "dayFormat": "D",
                "decadeSelect": "Choose a decade",
                "locale": "en_US",
                "month": "Month",
                "monthBeforeYear": true,
                "monthPlaceholder": "Select month",
                "monthSelect": "Choose a month",
                "nextCentury": "Next century",
                "nextDecade": "Next decade",
                "nextMonth": "Next month (PageDown)",
                "nextYear": "Next year (Control + right)",
                "now": "Now",
                "ok": "Ok",
                "placeholder": "Select date",
                "previousCentury": "Last century",
                "previousDecade": "Last decade",
                "previousMonth": "Previous month (PageUp)",
                "previousYear": "Last year (Control + left)",
                "quarterPlaceholder": "Select quarter",
                "rangeMonthPlaceholder": Array [
                  "Start month",
                  "End month",
                ],
                "rangePlaceholder": Array [
                  "Start date",
                  "End date",
                ],
                "rangeWeekPlaceholder": Array [
                  "Start week",
                  "End week",
                ],
                "rangeYearPlaceholder": Array [
                  "Start year",
                  "End year",
                ],
                "timeSelect": "select time",
                "today": "Today",
                "weekPlaceholder": "Select week",
                "weekSelect": "Choose a week",
                "year": "Year",
                "yearFormat": "YYYY",
                "yearPlaceholder": "Select year",
                "yearSelect": "Choose a year",
              }
            }
            nextIcon={
              <span
                className="ant-picker-next-icon"
              />
            }
            onChange={[Function]}
            picker="month"
            pickerRef={
              Object {
                "current": Object {
                  "blur": [Function],
                  "focus": [Function],
                },
              }
            }
            placeholder="UNLIMITED"
            prefixCls="ant-picker"
            prevIcon={
              <span
                className="ant-picker-prev-icon"
              />
            }
            showToday={true}
            suffixIcon={<ForwardRef(CalendarOutlined) />}
            superNextIcon={
              <span
                className="ant-picker-super-next-icon"
              />
            }
            superPrevIcon={
              <span
                className="ant-picker-super-prev-icon"
              />
            }
            transitionName="slide-up"
          >
            <PickerTrigger
              popupElement={
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                >
                  <PickerPanel
                    allowClear={true}
                    className="ant-picker-panel-focused"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    components={
                      Object {
                        "button": [Function],
                        "rangeItem": [Function],
                      }
                    }
                    disabledDate={[Function]}
                    generateConfig={
                      Object {
                        "addDate": [Function],
                        "addMonth": [Function],
                        "addYear": [Function],
                        "getDate": [Function],
                        "getHour": [Function],
                        "getMinute": [Function],
                        "getMonth": [Function],
                        "getNow": [Function],
                        "getSecond": [Function],
                        "getWeekDay": [Function],
                        "getYear": [Function],
                        "isAfter": [Function],
                        "isValidate": [Function],
                        "locale": Object {
                          "format": [Function],
                          "getShortMonths": [Function],
                          "getShortWeekDays": [Function],
                          "getWeek": [Function],
                          "getWeekFirstDay": [Function],
                          "parse": [Function],
                        },
                        "setDate": [Function],
                        "setHour": [Function],
                        "setMinute": [Function],
                        "setMonth": [Function],
                        "setSecond": [Function],
                        "setYear": [Function],
                      }
                    }
                    locale={
                      Object {
                        "backToToday": "Back to today",
                        "clear": "Clear",
                        "dateFormat": "M/D/YYYY",
                        "dateSelect": "select date",
                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                        "dayFormat": "D",
                        "decadeSelect": "Choose a decade",
                        "locale": "en_US",
                        "month": "Month",
                        "monthBeforeYear": true,
                        "monthPlaceholder": "Select month",
                        "monthSelect": "Choose a month",
                        "nextCentury": "Next century",
                        "nextDecade": "Next decade",
                        "nextMonth": "Next month (PageDown)",
                        "nextYear": "Next year (Control + right)",
                        "now": "Now",
                        "ok": "Ok",
                        "placeholder": "Select date",
                        "previousCentury": "Last century",
                        "previousDecade": "Last decade",
                        "previousMonth": "Previous month (PageUp)",
                        "previousYear": "Last year (Control + left)",
                        "quarterPlaceholder": "Select quarter",
                        "rangeMonthPlaceholder": Array [
                          "Start month",
                          "End month",
                        ],
                        "rangePlaceholder": Array [
                          "Start date",
                          "End date",
                        ],
                        "rangeWeekPlaceholder": Array [
                          "Start week",
                          "End week",
                        ],
                        "rangeYearPlaceholder": Array [
                          "Start year",
                          "End year",
                        ],
                        "timeSelect": "select time",
                        "today": "Today",
                        "weekPlaceholder": "Select week",
                        "weekSelect": "Choose a week",
                        "year": "Year",
                        "yearFormat": "YYYY",
                        "yearPlaceholder": "Select year",
                        "yearSelect": "Choose a year",
                      }
                    }
                    nextIcon={
                      <span
                        className="ant-picker-next-icon"
                      />
                    }
                    onChange={[Function]}
                    picker="month"
                    pickerRef={
                      Object {
                        "current": Object {
                          "blur": [Function],
                          "focus": [Function],
                        },
                      }
                    }
                    placeholder="UNLIMITED"
                    prefixCls="ant-picker"
                    prevIcon={
                      <span
                        className="ant-picker-prev-icon"
                      />
                    }
                    showToday={true}
                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                    superNextIcon={
                      <span
                        className="ant-picker-super-next-icon"
                      />
                    }
                    superPrevIcon={
                      <span
                        className="ant-picker-super-prev-icon"
                      />
                    }
                    tabIndex={-1}
                    transitionName="slide-up"
                    value={null}
                  />
                </div>
              }
              popupPlacement="bottomLeft"
              prefixCls="ant-picker"
              transitionName="slide-up"
              visible={false}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                  >
                    <PickerPanel
                      allowClear={true}
                      className="ant-picker-panel-focused"
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      components={
                        Object {
                          "button": [Function],
                          "rangeItem": [Function],
                        }
                      }
                      disabledDate={[Function]}
                      generateConfig={
                        Object {
                          "addDate": [Function],
                          "addMonth": [Function],
                          "addYear": [Function],
                          "getDate": [Function],
                          "getHour": [Function],
                          "getMinute": [Function],
                          "getMonth": [Function],
                          "getNow": [Function],
                          "getSecond": [Function],
                          "getWeekDay": [Function],
                          "getYear": [Function],
                          "isAfter": [Function],
                          "isValidate": [Function],
                          "locale": Object {
                            "format": [Function],
                            "getShortMonths": [Function],
                            "getShortWeekDays": [Function],
                            "getWeek": [Function],
                            "getWeekFirstDay": [Function],
                            "parse": [Function],
                          },
                          "setDate": [Function],
                          "setHour": [Function],
                          "setMinute": [Function],
                          "setMonth": [Function],
                          "setSecond": [Function],
                          "setYear": [Function],
                        }
                      }
                      locale={
                        Object {
                          "backToToday": "Back to today",
                          "clear": "Clear",
                          "dateFormat": "M/D/YYYY",
                          "dateSelect": "select date",
                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                          "dayFormat": "D",
                          "decadeSelect": "Choose a decade",
                          "locale": "en_US",
                          "month": "Month",
                          "monthBeforeYear": true,
                          "monthPlaceholder": "Select month",
                          "monthSelect": "Choose a month",
                          "nextCentury": "Next century",
                          "nextDecade": "Next decade",
                          "nextMonth": "Next month (PageDown)",
                          "nextYear": "Next year (Control + right)",
                          "now": "Now",
                          "ok": "Ok",
                          "placeholder": "Select date",
                          "previousCentury": "Last century",
                          "previousDecade": "Last decade",
                          "previousMonth": "Previous month (PageUp)",
                          "previousYear": "Last year (Control + left)",
                          "quarterPlaceholder": "Select quarter",
                          "rangeMonthPlaceholder": Array [
                            "Start month",
                            "End month",
                          ],
                          "rangePlaceholder": Array [
                            "Start date",
                            "End date",
                          ],
                          "rangeWeekPlaceholder": Array [
                            "Start week",
                            "End week",
                          ],
                          "rangeYearPlaceholder": Array [
                            "Start year",
                            "End year",
                          ],
                          "timeSelect": "select time",
                          "today": "Today",
                          "weekPlaceholder": "Select week",
                          "weekSelect": "Choose a week",
                          "year": "Year",
                          "yearFormat": "YYYY",
                          "yearPlaceholder": "Select year",
                          "yearSelect": "Choose a year",
                        }
                      }
                      nextIcon={
                        <span
                          className="ant-picker-next-icon"
                        />
                      }
                      onChange={[Function]}
                      picker="month"
                      pickerRef={
                        Object {
                          "current": Object {
                            "blur": [Function],
                            "focus": [Function],
                          },
                        }
                      }
                      placeholder="UNLIMITED"
                      prefixCls="ant-picker"
                      prevIcon={
                        <span
                          className="ant-picker-prev-icon"
                        />
                      }
                      showToday={true}
                      suffixIcon={<ForwardRef(CalendarOutlined) />}
                      superNextIcon={
                        <span
                          className="ant-picker-super-next-icon"
                        />
                      }
                      superPrevIcon={
                        <span
                          className="ant-picker-super-prev-icon"
                        />
                      }
                      tabIndex={-1}
                      transitionName="slide-up"
                      value={null}
                    />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName=""
                popupPlacement="bottomLeft"
                popupStyle={Object {}}
                popupTransitionName="slide-up"
                popupVisible={false}
                prefixCls="ant-picker-dropdown"
                showAction={Array []}
              >
                <div
                  className="ant-picker"
                  key="trigger"
                  onMouseUp={[Function]}
                >
                  <div
                    className="ant-picker-input"
                  >
                    <input
                      autoComplete="off"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      placeholder="UNLIMITED"
                      readOnly={true}
                      size={12}
                      title=""
                      value=""
                    />
                    <span
                      className="ant-picker-suffix"
                    >
                      <ForwardRef(CalendarOutlined)>
                        <AntdIcon
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "calendar",
                              "theme": "outlined",
                            }
                          }
                        >
                          <span
                            aria-label="calendar"
                            className="anticon anticon-calendar"
                            role="img"
                          >
                            <IconReact
                              className=""
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "calendar",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className=""
                                data-icon="calendar"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-calendar"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                  key="svg-calendar-svg-0"
                                />
                              </svg>
                            </IconReact>
                          </span>
                        </AntdIcon>
                      </ForwardRef(CalendarOutlined)>
                    </span>
                  </div>
                </div>
              </Trigger>
            </PickerTrigger>
          </InnerPicker>
        </Picker>
      </LocaleReceiver>
    </Picker>
  </IntervalItem>
  <IntervalItem
    label="TO"
    onChange={[Function]}
    picker="month"
  >
    <div
      className="field-interval-label"
    >
      TO
      :
    </div>
    <Picker
      disabledDate={[Function]}
      onChange={[Function]}
      picker="month"
      placeholder="UNLIMITED"
    >
      <LocaleReceiver
        componentName="DatePicker"
        defaultLocale={[Function]}
      >
        <Picker
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          components={
            Object {
              "button": [Function],
              "rangeItem": [Function],
            }
          }
          disabledDate={[Function]}
          generateConfig={
            Object {
              "addDate": [Function],
              "addMonth": [Function],
              "addYear": [Function],
              "getDate": [Function],
              "getHour": [Function],
              "getMinute": [Function],
              "getMonth": [Function],
              "getNow": [Function],
              "getSecond": [Function],
              "getWeekDay": [Function],
              "getYear": [Function],
              "isAfter": [Function],
              "isValidate": [Function],
              "locale": Object {
                "format": [Function],
                "getShortMonths": [Function],
                "getShortWeekDays": [Function],
                "getWeek": [Function],
                "getWeekFirstDay": [Function],
                "parse": [Function],
              },
              "setDate": [Function],
              "setHour": [Function],
              "setMinute": [Function],
              "setMonth": [Function],
              "setSecond": [Function],
              "setYear": [Function],
            }
          }
          locale={
            Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "locale": "en_US",
              "month": "Month",
              "monthBeforeYear": true,
              "monthPlaceholder": "Select month",
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "quarterPlaceholder": "Select quarter",
              "rangeMonthPlaceholder": Array [
                "Start month",
                "End month",
              ],
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "rangeWeekPlaceholder": Array [
                "Start week",
                "End week",
              ],
              "rangeYearPlaceholder": Array [
                "Start year",
                "End year",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekPlaceholder": "Select week",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearPlaceholder": "Select year",
              "yearSelect": "Choose a year",
            }
          }
          nextIcon={
            <span
              className="ant-picker-next-icon"
            />
          }
          onChange={[Function]}
          picker="month"
          placeholder="UNLIMITED"
          prefixCls="ant-picker"
          prevIcon={
            <span
              className="ant-picker-prev-icon"
            />
          }
          showToday={true}
          suffixIcon={<ForwardRef(CalendarOutlined) />}
          superNextIcon={
            <span
              className="ant-picker-super-next-icon"
            />
          }
          superPrevIcon={
            <span
              className="ant-picker-super-prev-icon"
            />
          }
          transitionName="slide-up"
        >
          <InnerPicker
            allowClear={true}
            className=""
            clearIcon={<ForwardRef(CloseCircleFilled) />}
            components={
              Object {
                "button": [Function],
                "rangeItem": [Function],
              }
            }
            disabledDate={[Function]}
            generateConfig={
              Object {
                "addDate": [Function],
                "addMonth": [Function],
                "addYear": [Function],
                "getDate": [Function],
                "getHour": [Function],
                "getMinute": [Function],
                "getMonth": [Function],
                "getNow": [Function],
                "getSecond": [Function],
                "getWeekDay": [Function],
                "getYear": [Function],
                "isAfter": [Function],
                "isValidate": [Function],
                "locale": Object {
                  "format": [Function],
                  "getShortMonths": [Function],
                  "getShortWeekDays": [Function],
                  "getWeek": [Function],
                  "getWeekFirstDay": [Function],
                  "parse": [Function],
                },
                "setDate": [Function],
                "setHour": [Function],
                "setMinute": [Function],
                "setMonth": [Function],
                "setSecond": [Function],
                "setYear": [Function],
              }
            }
            locale={
              Object {
                "backToToday": "Back to today",
                "clear": "Clear",
                "dateFormat": "M/D/YYYY",
                "dateSelect": "select date",
                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                "dayFormat": "D",
                "decadeSelect": "Choose a decade",
                "locale": "en_US",
                "month": "Month",
                "monthBeforeYear": true,
                "monthPlaceholder": "Select month",
                "monthSelect": "Choose a month",
                "nextCentury": "Next century",
                "nextDecade": "Next decade",
                "nextMonth": "Next month (PageDown)",
                "nextYear": "Next year (Control + right)",
                "now": "Now",
                "ok": "Ok",
                "placeholder": "Select date",
                "previousCentury": "Last century",
                "previousDecade": "Last decade",
                "previousMonth": "Previous month (PageUp)",
                "previousYear": "Last year (Control + left)",
                "quarterPlaceholder": "Select quarter",
                "rangeMonthPlaceholder": Array [
                  "Start month",
                  "End month",
                ],
                "rangePlaceholder": Array [
                  "Start date",
                  "End date",
                ],
                "rangeWeekPlaceholder": Array [
                  "Start week",
                  "End week",
                ],
                "rangeYearPlaceholder": Array [
                  "Start year",
                  "End year",
                ],
                "timeSelect": "select time",
                "today": "Today",
                "weekPlaceholder": "Select week",
                "weekSelect": "Choose a week",
                "year": "Year",
                "yearFormat": "YYYY",
                "yearPlaceholder": "Select year",
                "yearSelect": "Choose a year",
              }
            }
            nextIcon={
              <span
                className="ant-picker-next-icon"
              />
            }
            onChange={[Function]}
            picker="month"
            pickerRef={
              Object {
                "current": Object {
                  "blur": [Function],
                  "focus": [Function],
                },
              }
            }
            placeholder="UNLIMITED"
            prefixCls="ant-picker"
            prevIcon={
              <span
                className="ant-picker-prev-icon"
              />
            }
            showToday={true}
            suffixIcon={<ForwardRef(CalendarOutlined) />}
            superNextIcon={
              <span
                className="ant-picker-super-next-icon"
              />
            }
            superPrevIcon={
              <span
                className="ant-picker-super-prev-icon"
              />
            }
            transitionName="slide-up"
          >
            <PickerTrigger
              popupElement={
                <div
                  className="ant-picker-panel-container"
                  onMouseDown={[Function]}
                >
                  <PickerPanel
                    allowClear={true}
                    className="ant-picker-panel-focused"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    components={
                      Object {
                        "button": [Function],
                        "rangeItem": [Function],
                      }
                    }
                    disabledDate={[Function]}
                    generateConfig={
                      Object {
                        "addDate": [Function],
                        "addMonth": [Function],
                        "addYear": [Function],
                        "getDate": [Function],
                        "getHour": [Function],
                        "getMinute": [Function],
                        "getMonth": [Function],
                        "getNow": [Function],
                        "getSecond": [Function],
                        "getWeekDay": [Function],
                        "getYear": [Function],
                        "isAfter": [Function],
                        "isValidate": [Function],
                        "locale": Object {
                          "format": [Function],
                          "getShortMonths": [Function],
                          "getShortWeekDays": [Function],
                          "getWeek": [Function],
                          "getWeekFirstDay": [Function],
                          "parse": [Function],
                        },
                        "setDate": [Function],
                        "setHour": [Function],
                        "setMinute": [Function],
                        "setMonth": [Function],
                        "setSecond": [Function],
                        "setYear": [Function],
                      }
                    }
                    locale={
                      Object {
                        "backToToday": "Back to today",
                        "clear": "Clear",
                        "dateFormat": "M/D/YYYY",
                        "dateSelect": "select date",
                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                        "dayFormat": "D",
                        "decadeSelect": "Choose a decade",
                        "locale": "en_US",
                        "month": "Month",
                        "monthBeforeYear": true,
                        "monthPlaceholder": "Select month",
                        "monthSelect": "Choose a month",
                        "nextCentury": "Next century",
                        "nextDecade": "Next decade",
                        "nextMonth": "Next month (PageDown)",
                        "nextYear": "Next year (Control + right)",
                        "now": "Now",
                        "ok": "Ok",
                        "placeholder": "Select date",
                        "previousCentury": "Last century",
                        "previousDecade": "Last decade",
                        "previousMonth": "Previous month (PageUp)",
                        "previousYear": "Last year (Control + left)",
                        "quarterPlaceholder": "Select quarter",
                        "rangeMonthPlaceholder": Array [
                          "Start month",
                          "End month",
                        ],
                        "rangePlaceholder": Array [
                          "Start date",
                          "End date",
                        ],
                        "rangeWeekPlaceholder": Array [
                          "Start week",
                          "End week",
                        ],
                        "rangeYearPlaceholder": Array [
                          "Start year",
                          "End year",
                        ],
                        "timeSelect": "select time",
                        "today": "Today",
                        "weekPlaceholder": "Select week",
                        "weekSelect": "Choose a week",
                        "year": "Year",
                        "yearFormat": "YYYY",
                        "yearPlaceholder": "Select year",
                        "yearSelect": "Choose a year",
                      }
                    }
                    nextIcon={
                      <span
                        className="ant-picker-next-icon"
                      />
                    }
                    onChange={[Function]}
                    picker="month"
                    pickerRef={
                      Object {
                        "current": Object {
                          "blur": [Function],
                          "focus": [Function],
                        },
                      }
                    }
                    placeholder="UNLIMITED"
                    prefixCls="ant-picker"
                    prevIcon={
                      <span
                        className="ant-picker-prev-icon"
                      />
                    }
                    showToday={true}
                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                    superNextIcon={
                      <span
                        className="ant-picker-super-next-icon"
                      />
                    }
                    superPrevIcon={
                      <span
                        className="ant-picker-super-prev-icon"
                      />
                    }
                    tabIndex={-1}
                    transitionName="slide-up"
                    value={null}
                  />
                </div>
              }
              popupPlacement="bottomLeft"
              prefixCls="ant-picker"
              transitionName="slide-up"
              visible={false}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div
                    className="ant-picker-panel-container"
                    onMouseDown={[Function]}
                  >
                    <PickerPanel
                      allowClear={true}
                      className="ant-picker-panel-focused"
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      components={
                        Object {
                          "button": [Function],
                          "rangeItem": [Function],
                        }
                      }
                      disabledDate={[Function]}
                      generateConfig={
                        Object {
                          "addDate": [Function],
                          "addMonth": [Function],
                          "addYear": [Function],
                          "getDate": [Function],
                          "getHour": [Function],
                          "getMinute": [Function],
                          "getMonth": [Function],
                          "getNow": [Function],
                          "getSecond": [Function],
                          "getWeekDay": [Function],
                          "getYear": [Function],
                          "isAfter": [Function],
                          "isValidate": [Function],
                          "locale": Object {
                            "format": [Function],
                            "getShortMonths": [Function],
                            "getShortWeekDays": [Function],
                            "getWeek": [Function],
                            "getWeekFirstDay": [Function],
                            "parse": [Function],
                          },
                          "setDate": [Function],
                          "setHour": [Function],
                          "setMinute": [Function],
                          "setMonth": [Function],
                          "setSecond": [Function],
                          "setYear": [Function],
                        }
                      }
                      locale={
                        Object {
                          "backToToday": "Back to today",
                          "clear": "Clear",
                          "dateFormat": "M/D/YYYY",
                          "dateSelect": "select date",
                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                          "dayFormat": "D",
                          "decadeSelect": "Choose a decade",
                          "locale": "en_US",
                          "month": "Month",
                          "monthBeforeYear": true,
                          "monthPlaceholder": "Select month",
                          "monthSelect": "Choose a month",
                          "nextCentury": "Next century",
                          "nextDecade": "Next decade",
                          "nextMonth": "Next month (PageDown)",
                          "nextYear": "Next year (Control + right)",
                          "now": "Now",
                          "ok": "Ok",
                          "placeholder": "Select date",
                          "previousCentury": "Last century",
                          "previousDecade": "Last decade",
                          "previousMonth": "Previous month (PageUp)",
                          "previousYear": "Last year (Control + left)",
                          "quarterPlaceholder": "Select quarter",
                          "rangeMonthPlaceholder": Array [
                            "Start month",
                            "End month",
                          ],
                          "rangePlaceholder": Array [
                            "Start date",
                            "End date",
                          ],
                          "rangeWeekPlaceholder": Array [
                            "Start week",
                            "End week",
                          ],
                          "rangeYearPlaceholder": Array [
                            "Start year",
                            "End year",
                          ],
                          "timeSelect": "select time",
                          "today": "Today",
                          "weekPlaceholder": "Select week",
                          "weekSelect": "Choose a week",
                          "year": "Year",
                          "yearFormat": "YYYY",
                          "yearPlaceholder": "Select year",
                          "yearSelect": "Choose a year",
                        }
                      }
                      nextIcon={
                        <span
                          className="ant-picker-next-icon"
                        />
                      }
                      onChange={[Function]}
                      picker="month"
                      pickerRef={
                        Object {
                          "current": Object {
                            "blur": [Function],
                            "focus": [Function],
                          },
                        }
                      }
                      placeholder="UNLIMITED"
                      prefixCls="ant-picker"
                      prevIcon={
                        <span
                          className="ant-picker-prev-icon"
                        />
                      }
                      showToday={true}
                      suffixIcon={<ForwardRef(CalendarOutlined) />}
                      superNextIcon={
                        <span
                          className="ant-picker-super-next-icon"
                        />
                      }
                      superPrevIcon={
                        <span
                          className="ant-picker-super-prev-icon"
                        />
                      }
                      tabIndex={-1}
                      transitionName="slide-up"
                      value={null}
                    />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName=""
                popupPlacement="bottomLeft"
                popupStyle={Object {}}
                popupTransitionName="slide-up"
                popupVisible={false}
                prefixCls="ant-picker-dropdown"
                showAction={Array []}
              >
                <div
                  className="ant-picker"
                  key="trigger"
                  onMouseUp={[Function]}
                >
                  <div
                    className="ant-picker-input"
                  >
                    <input
                      autoComplete="off"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      placeholder="UNLIMITED"
                      readOnly={true}
                      size={12}
                      title=""
                      value=""
                    />
                    <span
                      className="ant-picker-suffix"
                    >
                      <ForwardRef(CalendarOutlined)>
                        <AntdIcon
                          icon={
                            Object {
                              "icon": Object {
                                "attrs": Object {
                                  "focusable": "false",
                                  "viewBox": "64 64 896 896",
                                },
                                "children": Array [
                                  Object {
                                    "attrs": Object {
                                      "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                    },
                                    "tag": "path",
                                  },
                                ],
                                "tag": "svg",
                              },
                              "name": "calendar",
                              "theme": "outlined",
                            }
                          }
                        >
                          <span
                            aria-label="calendar"
                            className="anticon anticon-calendar"
                            role="img"
                          >
                            <IconReact
                              className=""
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "calendar",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className=""
                                data-icon="calendar"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-calendar"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                  key="svg-calendar-svg-0"
                                />
                              </svg>
                            </IconReact>
                          </span>
                        </AntdIcon>
                      </ForwardRef(CalendarOutlined)>
                    </span>
                  </div>
                </div>
              </Trigger>
            </PickerTrigger>
          </InnerPicker>
        </Picker>
      </LocaleReceiver>
    </Picker>
  </IntervalItem>
</Interval>
`;
