// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditSelect component Render EditSelect correctly 1`] = `
<EditSelect
  inputPlaceholder="inputPlaceholder"
  onChange={[MockFunction]}
  onDelete={[MockFunction]}
  onSave={[MockFunction]}
  options={
    Array [
      Object {
        "key": "key",
        "title": "title",
      },
    ]
  }
  placeholder="placeholder"
>
  <Select
    asyncData={false}
    dropdownClassName="edit-select-dropdown"
    dropdownRender={[Function]}
    loadingContent="Loading..."
    notFoundContent="NO_DATA"
    onChange={[MockFunction]}
    optionLabelProp="label"
    placeholder="placeholder"
    withPagination={false}
  >
    <Select
      bordered={true}
      choiceTransitionName="zoom"
      dropdownClassName="edit-select-dropdown"
      dropdownRender={[Function]}
      loading={false}
      notFoundContent="NO_DATA"
      onChange={[MockFunction]}
      onDropdownVisibleChange={null}
      optionLabelProp="label"
      placeholder="placeholder"
      tagRender={[Function]}
      transitionName="slide-up"
    >
      <Select
        choiceTransitionName="zoom"
        className=""
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        dropdownClassName="edit-select-dropdown"
        dropdownRender={[Function]}
        inputIcon={[Function]}
        listHeight={256}
        listItemHeight={24}
        loading={false}
        menuItemSelectedIcon={null}
        notFoundContent="NO_DATA"
        onChange={[MockFunction]}
        onDropdownVisibleChange={null}
        optionLabelProp="label"
        placeholder="placeholder"
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        tagRender={[Function]}
        transitionName="slide-up"
      >
        <ForwardRef(Select)
          choiceTransitionName="zoom"
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          dropdownClassName="edit-select-dropdown"
          dropdownRender={[Function]}
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          loading={false}
          menuItemSelectedIcon={null}
          notFoundContent="NO_DATA"
          onChange={[MockFunction]}
          onDropdownVisibleChange={null}
          optionLabelProp="label"
          placeholder="placeholder"
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          tagRender={[Function]}
          transitionName="slide-up"
        >
          <div
            className="ant-select ant-select-single ant-select-show-arrow"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
          >
            <SelectTrigger
              containerWidth={null}
              dropdownClassName="edit-select-dropdown"
              dropdownRender={[Function]}
              empty={false}
              getTriggerDOMNode={[Function]}
              popupElement={
                <ForwardRef(OptionList)
                  childrenAsData={true}
                  defaultActiveFirstOption={true}
                  flattenOptions={
                    Array [
                      Object {
                        "data": Object {
                          "children": Array [
                            <span
                              className="ant-select-item-option-content-title"
                            >
                              title
                            </span>,
                            <ForwardRef(EditOutlined)
                              onClick={[Function]}
                            />,
                            <ForwardRef(DeleteOutlined)
                              onClick={[Function]}
                            />,
                          ],
                          "key": "key",
                          "label": "title",
                          "value": "key",
                        },
                        "groupOption": false,
                        "key": "key",
                      },
                    ]
                  }
                  height={256}
                  id="rc_select_TEST_OR_SSR"
                  itemHeight={24}
                  menuItemSelectedIcon={null}
                  multiple={false}
                  notFoundContent="NO_DATA"
                  onActiveValue={[Function]}
                  onSelect={[Function]}
                  onToggleOpen={[Function]}
                  options={
                    Array [
                      Object {
                        "children": Array [
                          <span
                            className="ant-select-item-option-content-title"
                          >
                            title
                          </span>,
                          <ForwardRef(EditOutlined)
                            onClick={[Function]}
                          />,
                          <ForwardRef(DeleteOutlined)
                            onClick={[Function]}
                          />,
                        ],
                        "key": "key",
                        "label": "title",
                        "value": "key",
                      },
                    ]
                  }
                  prefixCls="ant-select"
                  searchValue=""
                  values={Set {}}
                  virtual={true}
                />
              }
              prefixCls="ant-select"
              transitionName="slide-up"
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                getTriggerDOMNode={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div>
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": Array [
                                  <span
                                    className="ant-select-item-option-content-title"
                                  >
                                    title
                                  </span>,
                                  <ForwardRef(EditOutlined)
                                    onClick={[Function]}
                                  />,
                                  <ForwardRef(DeleteOutlined)
                                    onClick={[Function]}
                                  />,
                                ],
                                "key": "key",
                                "label": "title",
                                "value": "key",
                              },
                              "groupOption": false,
                              "key": "key",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent="NO_DATA"
                        onActiveValue={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        options={
                          Array [
                            Object {
                              "children": Array [
                                <span
                                  className="ant-select-item-option-content-title"
                                >
                                  title
                                </span>,
                                <ForwardRef(EditOutlined)
                                  onClick={[Function]}
                                />,
                                <ForwardRef(DeleteOutlined)
                                  onClick={[Function]}
                                />,
                              ],
                              "key": "key",
                              "label": "title",
                              "value": "key",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue=""
                        values={Set {}}
                        virtual={true}
                      />
                      <Divider />
                      <div
                        className="edit-select-dropdown-edit"
                      >
                        <ForwardRef
                          onChange={[Function]}
                          onPressEnter={[Function]}
                          placeholder="inputPlaceholder"
                          value=""
                        />
                        <Button
                          border={true}
                          onClick={[Function]}
                          type="primary"
                        >
                          ADD
                        </Button>
                      </div>
                    </div>
                  </div>
                }
                popupAlign={Object {}}
                popupClassName="edit-select-dropdown"
                popupPlacement="bottomLeft"
                popupStyle={
                  Object {
                    "minWidth": null,
                    "width": null,
                  }
                }
                popupTransitionName="slide-up"
                prefixCls="ant-select-dropdown"
                showAction={Array []}
              >
                <Selector
                  accessibilityIndex={0}
                  activeValue={null}
                  choiceTransitionName="zoom"
                  className=""
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  domRef={
                    Object {
                      "current": <div
                        class="ant-select-selector"
                      >
                        <span
                          class="ant-select-selection-search"
                        >
                          <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            unselectable="on"
                            value=""
                          />
                        </span>
                        <span
                          class="ant-select-selection-placeholder"
                        >
                          placeholder
                        </span>
                      </div>,
                    }
                  }
                  dropdownClassName="edit-select-dropdown"
                  dropdownRender={[Function]}
                  id="rc_select_TEST_OR_SSR"
                  inputElement={null}
                  inputIcon={[Function]}
                  key="trigger"
                  listHeight={256}
                  listItemHeight={24}
                  loading={false}
                  menuItemSelectedIcon={null}
                  multiple={false}
                  notFoundContent="NO_DATA"
                  onChange={[MockFunction]}
                  onDropdownVisibleChange={null}
                  onSearch={[Function]}
                  onSelect={[Function]}
                  onToggleOpen={[Function]}
                  optionLabelProp="label"
                  placeholder="placeholder"
                  prefixCls="ant-select"
                  removeIcon={<ForwardRef(CloseOutlined) />}
                  searchValue=""
                  showSearch={false}
                  tagRender={[Function]}
                  transitionName="slide-up"
                  values={Array []}
                >
                  <div
                    className="ant-select-selector"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <SingleSelector
                      accessibilityIndex={0}
                      activeValue={null}
                      choiceTransitionName="zoom"
                      className=""
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      domRef={
                        Object {
                          "current": <div
                            class="ant-select-selector"
                          >
                            <span
                              class="ant-select-selection-search"
                            >
                              <input
                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                aria-autocomplete="list"
                                aria-controls="rc_select_TEST_OR_SSR_list"
                                aria-haspopup="listbox"
                                aria-owns="rc_select_TEST_OR_SSR_list"
                                autocomplete="off"
                                class="ant-select-selection-search-input"
                                id="rc_select_TEST_OR_SSR"
                                readonly=""
                                role="combobox"
                                style="opacity: 0;"
                                unselectable="on"
                                value=""
                              />
                            </span>
                            <span
                              class="ant-select-selection-placeholder"
                            >
                              placeholder
                            </span>
                          </div>,
                        }
                      }
                      dropdownClassName="edit-select-dropdown"
                      dropdownRender={[Function]}
                      id="rc_select_TEST_OR_SSR"
                      inputElement={null}
                      inputIcon={[Function]}
                      inputRef={
                        Object {
                          "current": <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            unselectable="on"
                            value=""
                          />,
                        }
                      }
                      listHeight={256}
                      listItemHeight={24}
                      loading={false}
                      menuItemSelectedIcon={null}
                      multiple={false}
                      notFoundContent="NO_DATA"
                      onChange={[MockFunction]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onDropdownVisibleChange={null}
                      onInputChange={[Function]}
                      onInputKeyDown={[Function]}
                      onInputMouseDown={[Function]}
                      onInputPaste={[Function]}
                      onSearch={[Function]}
                      onSelect={[Function]}
                      onToggleOpen={[Function]}
                      optionLabelProp="label"
                      placeholder="placeholder"
                      prefixCls="ant-select"
                      removeIcon={<ForwardRef(CloseOutlined) />}
                      searchValue=""
                      showSearch={false}
                      tagRender={[Function]}
                      transitionName="slide-up"
                      values={Array []}
                    >
                      <span
                        className="ant-select-selection-search"
                      >
                        <Input
                          accessibilityIndex={0}
                          attrs={Object {}}
                          editable={false}
                          id="rc_select_TEST_OR_SSR"
                          inputElement={null}
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          prefixCls="ant-select"
                          value=""
                        >
                          <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autoComplete="off"
                            className="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            readOnly={true}
                            role="combobox"
                            style={
                              Object {
                                "opacity": 0,
                              }
                            }
                            unselectable="on"
                            value=""
                          />
                        </Input>
                      </span>
                      <span
                        className="ant-select-selection-placeholder"
                      >
                        placeholder
                      </span>
                    </SingleSelector>
                  </div>
                </Selector>
              </Trigger>
            </SelectTrigger>
            <TransBtn
              className="ant-select-arrow"
              customizeIcon={[Function]}
              customizeIconProps={
                Object {
                  "focused": false,
                  "loading": false,
                  "open": undefined,
                  "searchValue": "",
                  "showSearch": false,
                }
              }
            >
              <span
                aria-hidden={true}
                className="ant-select-arrow"
                onMouseDown={[Function]}
                style={
                  Object {
                    "WebkitUserSelect": "none",
                    "userSelect": "none",
                  }
                }
                unselectable="on"
              >
                <ForwardRef(DownOutlined)>
                  <AntdIcon
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "down",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="down"
                      className="anticon anticon-down"
                      role="img"
                    >
                      <IconReact
                        className=""
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "down",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          className=""
                          data-icon="down"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-down"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                            key="svg-down-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(DownOutlined)>
              </span>
            </TransBtn>
          </div>
        </ForwardRef(Select)>
      </Select>
    </Select>
  </Select>
</EditSelect>
`;

exports[`EditSelect component Simulate Input change 1`] = `
<EditSelect
  inputPlaceholder="inputPlaceholder"
  onChange={[MockFunction]}
  onDelete={[MockFunction]}
  onSave={[MockFunction]}
  options={
    Array [
      Object {
        "key": "key",
        "title": "title",
      },
    ]
  }
  placeholder="placeholder"
>
  <Select
    asyncData={false}
    dropdownClassName="edit-select-dropdown"
    dropdownRender={[Function]}
    loadingContent="Loading..."
    notFoundContent="NO_DATA"
    onChange={[MockFunction]}
    optionLabelProp="label"
    placeholder="placeholder"
    withPagination={false}
  >
    <Select
      bordered={true}
      choiceTransitionName="zoom"
      dropdownClassName="edit-select-dropdown"
      dropdownRender={[Function]}
      loading={false}
      notFoundContent="NO_DATA"
      onChange={[MockFunction]}
      onDropdownVisibleChange={null}
      optionLabelProp="label"
      placeholder="placeholder"
      tagRender={[Function]}
      transitionName="slide-up"
    >
      <Select
        choiceTransitionName="zoom"
        className=""
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        dropdownClassName="edit-select-dropdown"
        dropdownRender={[Function]}
        inputIcon={[Function]}
        listHeight={256}
        listItemHeight={24}
        loading={false}
        menuItemSelectedIcon={null}
        notFoundContent="NO_DATA"
        onChange={[MockFunction]}
        onDropdownVisibleChange={null}
        optionLabelProp="label"
        placeholder="placeholder"
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        tagRender={[Function]}
        transitionName="slide-up"
      >
        <ForwardRef(Select)
          choiceTransitionName="zoom"
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          dropdownClassName="edit-select-dropdown"
          dropdownRender={[Function]}
          inputIcon={[Function]}
          listHeight={256}
          listItemHeight={24}
          loading={false}
          menuItemSelectedIcon={null}
          notFoundContent="NO_DATA"
          onChange={[MockFunction]}
          onDropdownVisibleChange={null}
          optionLabelProp="label"
          placeholder="placeholder"
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          tagRender={[Function]}
          transitionName="slide-up"
        >
          <div
            className="ant-select ant-select-single ant-select-show-arrow ant-select-open"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
          >
            <SelectTrigger
              containerWidth={0}
              dropdownClassName="edit-select-dropdown"
              dropdownRender={[Function]}
              empty={false}
              getTriggerDOMNode={[Function]}
              popupElement={
                <ForwardRef(OptionList)
                  childrenAsData={true}
                  defaultActiveFirstOption={true}
                  flattenOptions={
                    Array [
                      Object {
                        "data": Object {
                          "children": Array [
                            <span
                              className="ant-select-item-option-content-title"
                            >
                              title
                            </span>,
                            <ForwardRef(EditOutlined)
                              onClick={[Function]}
                            />,
                            <ForwardRef(DeleteOutlined)
                              onClick={[Function]}
                            />,
                          ],
                          "key": "key",
                          "label": "title",
                          "value": "key",
                        },
                        "groupOption": false,
                        "key": "key",
                      },
                    ]
                  }
                  height={256}
                  id="rc_select_TEST_OR_SSR"
                  itemHeight={24}
                  menuItemSelectedIcon={null}
                  multiple={false}
                  notFoundContent="NO_DATA"
                  onActiveValue={[Function]}
                  onSelect={[Function]}
                  onToggleOpen={[Function]}
                  open={true}
                  options={
                    Array [
                      Object {
                        "children": Array [
                          <span
                            className="ant-select-item-option-content-title"
                          >
                            title
                          </span>,
                          <ForwardRef(EditOutlined)
                            onClick={[Function]}
                          />,
                          <ForwardRef(DeleteOutlined)
                            onClick={[Function]}
                          />,
                        ],
                        "key": "key",
                        "label": "title",
                        "value": "key",
                      },
                    ]
                  }
                  prefixCls="ant-select"
                  searchValue="inputValue"
                  values={Set {}}
                  virtual={true}
                />
              }
              prefixCls="ant-select"
              transitionName="slide-up"
              visible={true}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                getTriggerDOMNode={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div>
                    <div>
                      <ForwardRef(OptionList)
                        childrenAsData={true}
                        defaultActiveFirstOption={true}
                        flattenOptions={
                          Array [
                            Object {
                              "data": Object {
                                "children": Array [
                                  <span
                                    className="ant-select-item-option-content-title"
                                  >
                                    title
                                  </span>,
                                  <ForwardRef(EditOutlined)
                                    onClick={[Function]}
                                  />,
                                  <ForwardRef(DeleteOutlined)
                                    onClick={[Function]}
                                  />,
                                ],
                                "key": "key",
                                "label": "title",
                                "value": "key",
                              },
                              "groupOption": false,
                              "key": "key",
                            },
                          ]
                        }
                        height={256}
                        id="rc_select_TEST_OR_SSR"
                        itemHeight={24}
                        menuItemSelectedIcon={null}
                        multiple={false}
                        notFoundContent="NO_DATA"
                        onActiveValue={[Function]}
                        onSelect={[Function]}
                        onToggleOpen={[Function]}
                        open={true}
                        options={
                          Array [
                            Object {
                              "children": Array [
                                <span
                                  className="ant-select-item-option-content-title"
                                >
                                  title
                                </span>,
                                <ForwardRef(EditOutlined)
                                  onClick={[Function]}
                                />,
                                <ForwardRef(DeleteOutlined)
                                  onClick={[Function]}
                                />,
                              ],
                              "key": "key",
                              "label": "title",
                              "value": "key",
                            },
                          ]
                        }
                        prefixCls="ant-select"
                        searchValue="inputValue"
                        values={Set {}}
                        virtual={true}
                      />
                      <Divider />
                      <div
                        className="edit-select-dropdown-edit"
                      >
                        <ForwardRef
                          onChange={[Function]}
                          onPressEnter={[Function]}
                          placeholder="inputPlaceholder"
                          value=""
                        />
                        <Button
                          border={true}
                          onClick={[Function]}
                          type="primary"
                        >
                          ADD
                        </Button>
                      </div>
                    </div>
                  </div>
                }
                popupAlign={Object {}}
                popupClassName="edit-select-dropdown"
                popupPlacement="bottomLeft"
                popupStyle={
                  Object {
                    "minWidth": 0,
                    "width": 0,
                  }
                }
                popupTransitionName="slide-up"
                popupVisible={true}
                prefixCls="ant-select-dropdown"
                showAction={Array []}
              >
                <Selector
                  accessibilityIndex={0}
                  activeValue={null}
                  choiceTransitionName="zoom"
                  className=""
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  domRef={
                    Object {
                      "current": <div
                        class="ant-select-selector"
                      >
                        <span
                          class="ant-select-selection-search"
                        >
                          <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-expanded="true"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            unselectable="on"
                            value=""
                          />
                        </span>
                      </div>,
                    }
                  }
                  dropdownClassName="edit-select-dropdown"
                  dropdownRender={[Function]}
                  id="rc_select_TEST_OR_SSR"
                  inputElement={null}
                  inputIcon={[Function]}
                  key="trigger"
                  listHeight={256}
                  listItemHeight={24}
                  loading={false}
                  menuItemSelectedIcon={null}
                  multiple={false}
                  notFoundContent="NO_DATA"
                  onChange={[MockFunction]}
                  onDropdownVisibleChange={null}
                  onSearch={[Function]}
                  onSelect={[Function]}
                  onToggleOpen={[Function]}
                  open={true}
                  optionLabelProp="label"
                  placeholder="placeholder"
                  prefixCls="ant-select"
                  removeIcon={<ForwardRef(CloseOutlined) />}
                  searchValue="inputValue"
                  showSearch={false}
                  tagRender={[Function]}
                  transitionName="slide-up"
                  values={Array []}
                >
                  <div
                    className="ant-select-selector"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <SingleSelector
                      accessibilityIndex={0}
                      activeValue={null}
                      choiceTransitionName="zoom"
                      className=""
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      domRef={
                        Object {
                          "current": <div
                            class="ant-select-selector"
                          >
                            <span
                              class="ant-select-selection-search"
                            >
                              <input
                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                aria-autocomplete="list"
                                aria-controls="rc_select_TEST_OR_SSR_list"
                                aria-expanded="true"
                                aria-haspopup="listbox"
                                aria-owns="rc_select_TEST_OR_SSR_list"
                                autocomplete="off"
                                class="ant-select-selection-search-input"
                                id="rc_select_TEST_OR_SSR"
                                readonly=""
                                role="combobox"
                                style="opacity: 0;"
                                unselectable="on"
                                value=""
                              />
                            </span>
                          </div>,
                        }
                      }
                      dropdownClassName="edit-select-dropdown"
                      dropdownRender={[Function]}
                      id="rc_select_TEST_OR_SSR"
                      inputElement={null}
                      inputIcon={[Function]}
                      inputRef={
                        Object {
                          "current": <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-expanded="true"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            unselectable="on"
                            value=""
                          />,
                        }
                      }
                      listHeight={256}
                      listItemHeight={24}
                      loading={false}
                      menuItemSelectedIcon={null}
                      multiple={false}
                      notFoundContent="NO_DATA"
                      onChange={[MockFunction]}
                      onCompositionEnd={[Function]}
                      onCompositionStart={[Function]}
                      onDropdownVisibleChange={null}
                      onInputChange={[Function]}
                      onInputKeyDown={[Function]}
                      onInputMouseDown={[Function]}
                      onInputPaste={[Function]}
                      onSearch={[Function]}
                      onSelect={[Function]}
                      onToggleOpen={[Function]}
                      open={true}
                      optionLabelProp="label"
                      placeholder="placeholder"
                      prefixCls="ant-select"
                      removeIcon={<ForwardRef(CloseOutlined) />}
                      searchValue="inputValue"
                      showSearch={false}
                      tagRender={[Function]}
                      transitionName="slide-up"
                      values={Array []}
                    >
                      <span
                        className="ant-select-selection-search"
                      >
                        <Input
                          accessibilityIndex={0}
                          attrs={Object {}}
                          editable={false}
                          id="rc_select_TEST_OR_SSR"
                          inputElement={null}
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          open={true}
                          prefixCls="ant-select"
                          value="inputValue"
                        >
                          <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-expanded={true}
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autoComplete="off"
                            className="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            readOnly={true}
                            role="combobox"
                            style={
                              Object {
                                "opacity": 0,
                              }
                            }
                            unselectable="on"
                            value=""
                          />
                        </Input>
                      </span>
                    </SingleSelector>
                  </div>
                </Selector>
                <Portal
                  didUpdate={[Function]}
                  getContainer={[Function]}
                  key="portal"
                >
                  <Portal
                    containerInfo={
                      <div
                        style="position: absolute; top: 0px; left: 0px; width: 100%;"
                      >
                        <div>
                          <div
                            class="ant-select-dropdown edit-select-dropdown"
                            style="min-width: 0; width: 0px; opacity: 0;"
                          >
                            <div>
                              <div>
                                <div
                                  id="rc_select_TEST_OR_SSR_list"
                                  role="listbox"
                                  style="height: 0px; width: 0px; overflow: hidden;"
                                >
                                  <div
                                    aria-selected="false"
                                    id="rc_select_TEST_OR_SSR_list_0"
                                    role="option"
                                  >
                                    key
                                  </div>
                                </div>
                                <div
                                  class=""
                                  style="max-height: 256px; overflow-y: auto;"
                                >
                                  <div>
                                    <div
                                      class=""
                                      style="display: flex; flex-direction: column;"
                                    >
                                      <div
                                        aria-selected="false"
                                        class="ant-select-item ant-select-item-option ant-select-item-option-active"
                                        label="title"
                                      >
                                        <div
                                          class="ant-select-item-option-content"
                                        >
                                          <span
                                            class="ant-select-item-option-content-title"
                                          >
                                            title
                                          </span>
                                          <span
                                            aria-label="edit"
                                            class="anticon anticon-edit"
                                            role="img"
                                            tabindex="-1"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class=""
                                              data-icon="edit"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"
                                              />
                                            </svg>
                                          </span>
                                          <span
                                            aria-label="delete"
                                            class="anticon anticon-delete"
                                            role="img"
                                            tabindex="-1"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class=""
                                              data-icon="delete"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                              />
                                            </svg>
                                          </span>
                                        </div>
                                        <span
                                          aria-hidden="true"
                                          class="ant-select-item-option-state"
                                          style="user-select: none;"
                                          unselectable="on"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  class="ant-divider ant-divider-horizontal"
                                  role="separator"
                                />
                                <div
                                  class="edit-select-dropdown-edit"
                                >
                                  <input
                                    class="ant-input"
                                    placeholder="inputPlaceholder"
                                    type="text"
                                    value=""
                                  />
                                  <button
                                    class="ant-btn dw-btn ant-btn-primary"
                                    type="button"
                                  >
                                    <span>
                                      ADD
                                    </span>
                                  </button>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <Popup
                      align={
                        Object {
                          "offset": Array [
                            0,
                            4,
                          ],
                          "overflow": Object {
                            "adjustX": 0,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tl",
                            "bl",
                          ],
                        }
                      }
                      className="edit-select-dropdown"
                      destroyPopupOnHide={false}
                      getClassNameFromAlign={[Function]}
                      getRootDomNode={[Function]}
                      mask={false}
                      onAlign={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      prefixCls="ant-select-dropdown"
                      style={
                        Object {
                          "minWidth": 0,
                          "width": 0,
                        }
                      }
                      transitionName="slide-up"
                      visible={true}
                    >
                      <div>
                        <ForwardRef
                          motionAppear={false}
                          motionEnter={false}
                          motionLeave={false}
                          motionName="slide-up"
                          onEnterEnd={[Function]}
                          onLeaveEnd={[Function]}
                          removeOnLeave={false}
                          visible={true}
                        >
                          <CSSMotion
                            internalRef={null}
                            motionAppear={false}
                            motionEnter={false}
                            motionLeave={false}
                            motionName="slide-up"
                            onEnterEnd={[Function]}
                            onLeaveEnd={[Function]}
                            removeOnLeave={false}
                            visible={true}
                          >
                            <Align
                              align={
                                Object {
                                  "offset": Array [
                                    0,
                                    4,
                                  ],
                                  "overflow": Object {
                                    "adjustX": 0,
                                    "adjustY": 1,
                                  },
                                  "points": Array [
                                    "tl",
                                    "bl",
                                  ],
                                }
                              }
                              disabled={true}
                              key="popup"
                              monitorWindowResize={true}
                              onAlign={[Function]}
                              target={[Function]}
                            >
                              <PopupInner
                                className="ant-select-dropdown edit-select-dropdown"
                                hiddenClassName="ant-select-dropdown-hidden"
                                onMouseDown={[Function]}
                                onTouchStart={[Function]}
                                prefixCls="ant-select-dropdown"
                                style={
                                  Object {
                                    "minWidth": 0,
                                    "opacity": 0,
                                    "width": 0,
                                    "zIndex": undefined,
                                  }
                                }
                                visible={true}
                              >
                                <div
                                  className="ant-select-dropdown edit-select-dropdown"
                                  onMouseDown={[Function]}
                                  onTouchStart={[Function]}
                                  style={
                                    Object {
                                      "minWidth": 0,
                                      "opacity": 0,
                                      "width": 0,
                                      "zIndex": undefined,
                                    }
                                  }
                                >
                                  <div>
                                    <div>
                                      <OptionList
                                        childrenAsData={true}
                                        defaultActiveFirstOption={true}
                                        flattenOptions={
                                          Array [
                                            Object {
                                              "data": Object {
                                                "children": Array [
                                                  <span
                                                    className="ant-select-item-option-content-title"
                                                  >
                                                    title
                                                  </span>,
                                                  <ForwardRef(EditOutlined)
                                                    onClick={[Function]}
                                                  />,
                                                  <ForwardRef(DeleteOutlined)
                                                    onClick={[Function]}
                                                  />,
                                                ],
                                                "key": "key",
                                                "label": "title",
                                                "value": "key",
                                              },
                                              "groupOption": false,
                                              "key": "key",
                                            },
                                          ]
                                        }
                                        height={256}
                                        id="rc_select_TEST_OR_SSR"
                                        itemHeight={24}
                                        menuItemSelectedIcon={null}
                                        multiple={false}
                                        notFoundContent="NO_DATA"
                                        onActiveValue={[Function]}
                                        onSelect={[Function]}
                                        onToggleOpen={[Function]}
                                        open={true}
                                        options={
                                          Array [
                                            Object {
                                              "children": Array [
                                                <span
                                                  className="ant-select-item-option-content-title"
                                                >
                                                  title
                                                </span>,
                                                <ForwardRef(EditOutlined)
                                                  onClick={[Function]}
                                                />,
                                                <ForwardRef(DeleteOutlined)
                                                  onClick={[Function]}
                                                />,
                                              ],
                                              "key": "key",
                                              "label": "title",
                                              "value": "key",
                                            },
                                          ]
                                        }
                                        prefixCls="ant-select"
                                        searchValue="inputValue"
                                        values={Set {}}
                                        virtual={true}
                                      >
                                        <div
                                          id="rc_select_TEST_OR_SSR_list"
                                          role="listbox"
                                          style={
                                            Object {
                                              "height": 0,
                                              "overflow": "hidden",
                                              "width": 0,
                                            }
                                          }
                                        >
                                          <div
                                            aria-label={null}
                                            aria-selected={false}
                                            id="rc_select_TEST_OR_SSR_list_0"
                                            key="0"
                                            role="option"
                                          >
                                            key
                                          </div>
                                        </div>
                                        <List
                                          data={
                                            Array [
                                              Object {
                                                "data": Object {
                                                  "children": Array [
                                                    <span
                                                      className="ant-select-item-option-content-title"
                                                    >
                                                      title
                                                    </span>,
                                                    <ForwardRef(EditOutlined)
                                                      onClick={[Function]}
                                                    />,
                                                    <ForwardRef(DeleteOutlined)
                                                      onClick={[Function]}
                                                    />,
                                                  ],
                                                  "key": "key",
                                                  "label": "title",
                                                  "value": "key",
                                                },
                                                "groupOption": false,
                                                "key": "key",
                                              },
                                            ]
                                          }
                                          fullHeight={false}
                                          height={256}
                                          itemHeight={24}
                                          itemKey="key"
                                          onMouseDown={[Function]}
                                          virtual={true}
                                        >
                                          <div
                                            className=""
                                            onMouseDown={[Function]}
                                            onScroll={[Function]}
                                            style={
                                              Object {
                                                "maxHeight": 256,
                                                "overflowAnchor": "none",
                                                "overflowY": "auto",
                                              }
                                            }
                                          >
                                            <Filler
                                              height={256}
                                            >
                                              <div
                                                style={Object {}}
                                              >
                                                <div
                                                  className=""
                                                  style={
                                                    Object {
                                                      "display": "flex",
                                                      "flexDirection": "column",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    aria-selected={false}
                                                    className="ant-select-item ant-select-item-option ant-select-item-option-active"
                                                    key="key"
                                                    label="title"
                                                    onClick={[Function]}
                                                    onMouseMove={[Function]}
                                                  >
                                                    <div
                                                      className="ant-select-item-option-content"
                                                    >
                                                      <span
                                                        className="ant-select-item-option-content-title"
                                                      >
                                                        title
                                                      </span>
                                                      <ForwardRef(EditOutlined)
                                                        onClick={[Function]}
                                                      >
                                                        <AntdIcon
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "edit",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <span
                                                            aria-label="edit"
                                                            className="anticon anticon-edit"
                                                            onClick={[Function]}
                                                            role="img"
                                                            tabIndex={-1}
                                                          >
                                                            <IconReact
                                                              className=""
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "edit",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                className=""
                                                                data-icon="edit"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-edit"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"
                                                                  key="svg-edit-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(EditOutlined)>
                                                      <ForwardRef(DeleteOutlined)
                                                        onClick={[Function]}
                                                      >
                                                        <AntdIcon
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "delete",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <span
                                                            aria-label="delete"
                                                            className="anticon anticon-delete"
                                                            onClick={[Function]}
                                                            role="img"
                                                            tabIndex={-1}
                                                          >
                                                            <IconReact
                                                              className=""
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "delete",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                className=""
                                                                data-icon="delete"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-delete"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                  key="svg-delete-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(DeleteOutlined)>
                                                    </div>
                                                    <TransBtn
                                                      className="ant-select-item-option-state"
                                                      customizeIcon={null}
                                                      customizeIconProps={
                                                        Object {
                                                          "isSelected": false,
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-hidden={true}
                                                        className="ant-select-item-option-state"
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "WebkitUserSelect": "none",
                                                            "userSelect": "none",
                                                          }
                                                        }
                                                        unselectable="on"
                                                      />
                                                    </TransBtn>
                                                  </div>
                                                </div>
                                              </div>
                                            </Filler>
                                          </div>
                                        </List>
                                      </OptionList>
                                      <Divider>
                                        <div
                                          className="ant-divider ant-divider-horizontal"
                                          role="separator"
                                        />
                                      </Divider>
                                      <div
                                        className="edit-select-dropdown-edit"
                                      >
                                        <ForwardRef
                                          onChange={[Function]}
                                          onPressEnter={[Function]}
                                          placeholder="inputPlaceholder"
                                          value=""
                                        >
                                          <Input
                                            onChange={[Function]}
                                            onPressEnter={[Function]}
                                            placeholder="inputPlaceholder"
                                            type="text"
                                            value=""
                                          >
                                            <ClearableLabeledInput
                                              element={
                                                <input
                                                  className="ant-input"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="inputPlaceholder"
                                                  type="text"
                                                  value=""
                                                />
                                              }
                                              focused={false}
                                              handleReset={[Function]}
                                              inputType="input"
                                              onChange={[Function]}
                                              onPressEnter={[Function]}
                                              placeholder="inputPlaceholder"
                                              prefixCls="ant-input"
                                              triggerFocus={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <input
                                                className="ant-input"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="inputPlaceholder"
                                                type="text"
                                                value=""
                                              />
                                            </ClearableLabeledInput>
                                          </Input>
                                        </ForwardRef>
                                        <Button
                                          border={true}
                                          onClick={[Function]}
                                          type="primary"
                                        >
                                          <Button
                                            block={false}
                                            className="dw-btn"
                                            ghost={false}
                                            htmlType="button"
                                            loading={false}
                                            onClick={[Function]}
                                            type="primary"
                                          >
                                            <Wave>
                                              <button
                                                className="ant-btn dw-btn ant-btn-primary"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <ForwardRef
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <CSSMotion
                                                      internalRef={null}
                                                      motionAppear={true}
                                                      motionEnter={true}
                                                      motionLeave={true}
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    />
                                                  </ForwardRef>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  ADD
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </Button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </PopupInner>
                            </Align>
                          </CSSMotion>
                        </ForwardRef>
                      </div>
                    </Popup>
                  </Portal>
                </Portal>
              </Trigger>
            </SelectTrigger>
            <TransBtn
              className="ant-select-arrow"
              customizeIcon={[Function]}
              customizeIconProps={
                Object {
                  "focused": false,
                  "loading": false,
                  "open": true,
                  "searchValue": "inputValue",
                  "showSearch": false,
                }
              }
            >
              <span
                aria-hidden={true}
                className="ant-select-arrow"
                onMouseDown={[Function]}
                style={
                  Object {
                    "WebkitUserSelect": "none",
                    "userSelect": "none",
                  }
                }
                unselectable="on"
              >
                <ForwardRef(DownOutlined)>
                  <AntdIcon
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "down",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="down"
                      className="anticon anticon-down"
                      role="img"
                    >
                      <IconReact
                        className=""
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "down",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          className=""
                          data-icon="down"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-down"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                            key="svg-down-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(DownOutlined)>
              </span>
            </TransBtn>
          </div>
        </ForwardRef(Select)>
      </Select>
    </Select>
  </Select>
</EditSelect>
`;
